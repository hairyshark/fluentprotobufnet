import "bcl.proto"; // schema for protobuf-net's handling of core .NET types

message AllocationBase {
   optional string AllocationAlias = 47;
   optional int32 Id = 48;
   optional string ObjectIdAlias = 49;
   optional Position Position = 50;
   optional Identifier Portfolio = 51;
   optional BusinessEntity PortfolioDetails = 52;
   optional bcl.NetObjectProxy Contract = 53; // reference-tracked ContractBase
   optional Pricing Pricing = 54;
   // the following represent sub-types; at most 1 should have a value
   optional ContractAllocationBase ContractAllocationBase = 55;
   optional ContractUnwindAllocationBase ContractUnwindAllocationBase = 75;
}
message AsianIndexOptionBase {
   optional bcl.DateTime AveragePeriodStartDate = 208;
   optional Identifier Index = 209;
   optional bcl.Decimal StrikeRate = 210;
   optional bcl.Decimal StrikePrice = 211;
   optional bcl.DateTime StrikeDate = 212;
   optional bcl.Decimal IndexPrice = 213;
   optional string PutCallFlag = 214;
   optional bcl.DateTime ExpirySettlementDate = 215;
   optional Identifier HolidayCalendar = 216;
   optional Identifier OptionStyle = 217;
   optional Identifier SettlementMethod = 218;
   optional Identifier SettlementStyle = 219;
   repeated AllocationBase Allocations = 220;
   optional string BuySellFlag = 221;
   optional Identifier ClearingHouse = 222;
   optional string ExecutionPlatformClearingHouseAlias = 223;
   optional int32 ClearingHouseId = 224;
   optional string ClonedContract = 225;
   optional string ContractSubType = 226;
   optional ContractSubType ContractSubTypeDetails = 227;
   optional string AgreementExternalAlias = 228;
   optional string ExecutionPlatformCounterpartyAlias = 229;
   optional Identifier ExecutionPlatform = 230;
   optional bcl.DateTime EndDate = 231;
   optional Identifier PriceCurrency = 232;
   optional int32 PriceCurrencyId = 233;
   optional string SourceContract = 234;
   optional bcl.DateTime StartDate = 235;
   optional bcl.Decimal PointValue = 236;
   optional string TT2Code = 237;
   optional string SubCategoryAlias = 238;
   optional int32 Id = 239;
   optional string ObjectIdAlias = 240;
   optional Identifier Counterparty = 241;
   optional BusinessEntity CounterpartyDetails = 242;
   optional string ShortName = 243;
   // the following represent sub-types; at most 1 should have a value
   optional AsianIndexOptionNotional AsianIndexOptionNotional = 244;
   optional AsianIndexOptionQuantity AsianIndexOptionQuantity = 282;
}
message AsianIndexOptionNotional {
   optional int32 RoundingPrecisionCount = 245;
   optional bcl.DateTime AveragePeriodStartDate = 246;
   optional Identifier Index = 247;
   optional bcl.Decimal StrikeRate = 248;
   optional bcl.Decimal StrikePrice = 249;
   optional bcl.DateTime StrikeDate = 250;
   optional bcl.Decimal IndexPrice = 251;
   optional string PutCallFlag = 252;
   optional bcl.DateTime ExpirySettlementDate = 253;
   optional Identifier HolidayCalendar = 254;
   optional Identifier OptionStyle = 255;
   optional Identifier SettlementMethod = 256;
   optional Identifier SettlementStyle = 257;
   repeated AllocationBase Allocations = 258;
   optional string BuySellFlag = 259;
   optional Identifier ClearingHouse = 260;
   optional string ExecutionPlatformClearingHouseAlias = 261;
   optional int32 ClearingHouseId = 262;
   optional string ClonedContract = 263;
   optional string ContractSubType = 264;
   optional ContractSubType ContractSubTypeDetails = 265;
   optional string AgreementExternalAlias = 266;
   optional string ExecutionPlatformCounterpartyAlias = 267;
   optional Identifier ExecutionPlatform = 268;
   optional bcl.DateTime EndDate = 269;
   optional Identifier PriceCurrency = 270;
   optional int32 PriceCurrencyId = 271;
   optional string SourceContract = 272;
   optional bcl.DateTime StartDate = 273;
   optional bcl.Decimal PointValue = 274;
   optional string TT2Code = 275;
   optional string SubCategoryAlias = 276;
   optional int32 Id = 277;
   optional string ObjectIdAlias = 278;
   optional Identifier Counterparty = 279;
   optional BusinessEntity CounterpartyDetails = 280;
   optional string ShortName = 281;
}
message AsianIndexOptionQuantity {
   optional bcl.DateTime AveragePeriodStartDate = 283;
   optional Identifier Index = 284;
   optional bcl.Decimal StrikeRate = 285;
   optional bcl.Decimal StrikePrice = 286;
   optional bcl.DateTime StrikeDate = 287;
   optional bcl.Decimal IndexPrice = 288;
   optional string PutCallFlag = 289;
   optional bcl.DateTime ExpirySettlementDate = 290;
   optional Identifier HolidayCalendar = 291;
   optional Identifier OptionStyle = 292;
   optional Identifier SettlementMethod = 293;
   optional Identifier SettlementStyle = 294;
   repeated AllocationBase Allocations = 295;
   optional string BuySellFlag = 296;
   optional Identifier ClearingHouse = 297;
   optional string ExecutionPlatformClearingHouseAlias = 298;
   optional int32 ClearingHouseId = 299;
   optional string ClonedContract = 300;
   optional string ContractSubType = 301;
   optional ContractSubType ContractSubTypeDetails = 302;
   optional string AgreementExternalAlias = 303;
   optional string ExecutionPlatformCounterpartyAlias = 304;
   optional Identifier ExecutionPlatform = 305;
   optional bcl.DateTime EndDate = 306;
   optional Identifier PriceCurrency = 307;
   optional int32 PriceCurrencyId = 308;
   optional string SourceContract = 309;
   optional bcl.DateTime StartDate = 310;
   optional bcl.Decimal PointValue = 311;
   optional string TT2Code = 312;
   optional string SubCategoryAlias = 313;
   optional int32 Id = 314;
   optional string ObjectIdAlias = 315;
   optional Identifier Counterparty = 316;
   optional BusinessEntity CounterpartyDetails = 317;
   optional string ShortName = 318;
}
message AssetBackedCreditDefaultSwap {
   optional bcl.Decimal ReferencePrice = 320;
   optional bcl.Decimal CurrentFactorRate = 321;
   optional bool DistressedRatingsDowngradeInd = 322;
   optional bool CmbsPaymentConventionInd = 323;
   optional bool InstrumentWACCapInd = 324;
   optional bool StepUpInd = 325;
   optional bool StepUpEarlyTerminationInd = 326;
   optional bcl.DateTime StepUpNonCallNotificationDate = 327;
   optional bool InterestShortfallCompoundingInd = 328;
   optional bool CumulativeInterestShortfallAccruedInd = 329;
   optional bool CumulativeInterestShortfallCompoundingInd = 330;
   optional Identifier ISDADocument = 331;
   optional Identifier InterestShortfallCap = 332;
   optional Identifier FixedIncomeInstrument = 333;
   optional string ProtectionBuySellFlag = 334;
   optional bcl.Decimal CouponRate = 335;
   optional bcl.Decimal RecoveryRate = 336;
   optional bcl.DateTime StubFirstPeriodEndDate = 337;
   optional bool AccruedPaidDefaultInd = 338;
   optional Identifier Company = 339;
   optional Identifier DocumentationClause = 340;
   optional Identifier PayoffPoint = 341;
   optional Identifier SettlementMethod = 342;
   optional Identifier ResetPattern = 343;
   optional Identifier HolidayCalendar = 344;
   optional Identifier DayCountBasis = 345;
   optional Identifier BusinessDayRule = 346;
   optional Identifier DateGenerationRule = 347;
   optional Identifier DateRollConvention = 348;
   repeated AllocationBase Allocations = 349;
   optional string BuySellFlag = 350;
   optional Identifier ClearingHouse = 351;
   optional string ExecutionPlatformClearingHouseAlias = 352;
   optional int32 ClearingHouseId = 353;
   optional string ClonedContract = 354;
   optional string ContractSubType = 355;
   optional ContractSubType ContractSubTypeDetails = 356;
   optional string AgreementExternalAlias = 357;
   optional string ExecutionPlatformCounterpartyAlias = 358;
   optional Identifier ExecutionPlatform = 359;
   optional bcl.DateTime EndDate = 360;
   optional Identifier PriceCurrency = 361;
   optional int32 PriceCurrencyId = 362;
   optional string SourceContract = 363;
   optional bcl.DateTime StartDate = 364;
   optional bcl.Decimal PointValue = 365;
   optional string TT2Code = 366;
   optional string SubCategoryAlias = 367;
   optional int32 Id = 368;
   optional string ObjectIdAlias = 369;
   optional Identifier Counterparty = 370;
   optional BusinessEntity CounterpartyDetails = 371;
   optional string ShortName = 372;
}
message AssetSwapBase {
   optional string FixedIncomePayRecFlag = 374;
   optional string FinancePayRecFlag = 375;
   optional Identifier FixedIncomePrincipalType = 376;
   optional Identifier FixedIncomeCurrency = 377;
   optional int32 FixedIncomeCurrencyId = 378;
   optional Identifier FixedIncomeInstrument = 379;
   optional Identifier FixedIncomeHolidayCalendar = 380;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 381;
   optional int32 MaturitySettlementLagDayCount = 382;
   optional Identifier FinancePrincipalType = 383;
   optional Identifier FinanceCurrency = 384;
   optional int32 FinanceCurrencyId = 385;
   optional Identifier FinanceResetPattern = 386;
   optional int32 FinanceResetPatternId = 387;
   optional Identifier FinanceCompoundingStyle = 388;
   optional int32 FinanceCompoundingStyleId = 389;
   optional Identifier FinanceHolidayCalendar = 390;
   optional Identifier FinanceDayCountBasis = 391;
   optional Identifier FinanceBusinessDayRule = 392;
   optional Identifier FinanceDateGenerationRule = 393;
   optional Identifier FinanceDateRollConvention = 394;
   repeated AllocationBase Allocations = 395;
   optional string BuySellFlag = 396;
   optional Identifier ClearingHouse = 397;
   optional string ExecutionPlatformClearingHouseAlias = 398;
   optional int32 ClearingHouseId = 399;
   optional string ClonedContract = 400;
   optional string ContractSubType = 401;
   optional ContractSubType ContractSubTypeDetails = 402;
   optional string AgreementExternalAlias = 403;
   optional string ExecutionPlatformCounterpartyAlias = 404;
   optional Identifier ExecutionPlatform = 405;
   optional bcl.DateTime EndDate = 406;
   optional Identifier PriceCurrency = 407;
   optional int32 PriceCurrencyId = 408;
   optional string SourceContract = 409;
   optional bcl.DateTime StartDate = 410;
   optional bcl.Decimal PointValue = 411;
   optional string TT2Code = 412;
   optional string SubCategoryAlias = 413;
   optional int32 Id = 414;
   optional string ObjectIdAlias = 415;
   optional Identifier Counterparty = 416;
   optional BusinessEntity CounterpartyDetails = 417;
   optional string ShortName = 418;
   // the following represent sub-types; at most 1 should have a value
   optional FixedAssetSwapBase FixedAssetSwapBase = 2312;
   optional FloatAssetSwapBase FloatAssetSwapBase = 2509;
}
message BasisInterestRateSwap {
   optional Identifier DrivingInterestRate = 420;
   optional Identifier OpposingInterestRate = 421;
   optional Identifier DrivingBusinessDayRule = 422;
   optional Identifier DrivingCompoundingStyle = 423;
   optional int32 DrivingCompoundingStyleId = 424;
   optional Identifier DrivingCurrency = 425;
   optional int32 DrivingCurrencyId = 426;
   optional Identifier DrivingDateGenerationRule = 427;
   optional Identifier DrivingDateRollConvention = 428;
   optional Identifier DrivingDayCountBasis = 429;
   optional Identifier DrivingHolidayCalendar = 430;
   optional bool DrivingInterpolateFixingRateInd = 431;
   optional string DrivingPayRecFlag = 432;
   optional Identifier DrivingPrincipalType = 433;
   optional Identifier DrivingResetPattern = 434;
   optional int32 DrivingResetPatternId = 435;
   optional bcl.Decimal DrivingSpreadRate = 436;
   optional Identifier DrivingStubEndTenorPoint = 437;
   optional bcl.DateTime DrivingStubFirstPeriodEndDate = 438;
   optional bcl.DateTime DrivingStubLastPeriodStartDate = 439;
   optional Identifier DrivingStubStartTenorPoint = 440;
   optional Identifier DrivingStubType = 441;
   optional Identifier OpposingBusinessDayRule = 442;
   optional Identifier OpposingCompoundingStyle = 443;
   optional int32 OpposingCompoundingStyleId = 444;
   optional Identifier OpposingCurrency = 445;
   optional int32 OpposingCurrencyId = 446;
   optional Identifier OpposingDateGenerationRule = 447;
   optional Identifier OpposingDateRollConvention = 448;
   optional Identifier OpposingDayCountBasis = 449;
   optional Identifier OpposingHolidayCalendar = 450;
   optional bool OpposingInterpolateFixingRateInd = 451;
   optional string OpposingPayRecFlag = 452;
   optional Identifier OpposingPrincipalType = 453;
   optional Identifier OpposingResetPattern = 454;
   optional int32 OpposingResetPatternId = 455;
   optional bcl.Decimal OpposingSpreadRate = 456;
   optional Identifier OpposingStubEndTenorPoint = 457;
   optional bcl.DateTime OpposingStubFirstPeriodEndDate = 458;
   optional bcl.DateTime OpposingStubLastPeriodStartDate = 459;
   optional Identifier OpposingStubStartTenorPoint = 460;
   optional Identifier OpposingStubType = 461;
   optional string PricingStyleAlias = 462;
   optional string ForwardYieldCurve = 463;
   repeated AllocationBase Allocations = 464;
   optional string BuySellFlag = 465;
   optional Identifier ClearingHouse = 466;
   optional string ExecutionPlatformClearingHouseAlias = 467;
   optional int32 ClearingHouseId = 468;
   optional string ClonedContract = 469;
   optional string ContractSubType = 470;
   optional ContractSubType ContractSubTypeDetails = 471;
   optional string AgreementExternalAlias = 472;
   optional string ExecutionPlatformCounterpartyAlias = 473;
   optional Identifier ExecutionPlatform = 474;
   optional bcl.DateTime EndDate = 475;
   optional Identifier PriceCurrency = 476;
   optional int32 PriceCurrencyId = 477;
   optional string SourceContract = 478;
   optional bcl.DateTime StartDate = 479;
   optional bcl.Decimal PointValue = 480;
   optional string TT2Code = 481;
   optional string SubCategoryAlias = 482;
   optional int32 Id = 483;
   optional string ObjectIdAlias = 484;
   optional Identifier Counterparty = 485;
   optional BusinessEntity CounterpartyDetails = 486;
   optional string ShortName = 487;
}
message BusinessEntity {
   optional string Description = 1;
   optional string Code = 2;
   optional int32 Id = 3;
   // the following represent sub-types; at most 1 should have a value
   optional Counterparty Counterparty = 4;
   optional Portfolio Portfolio = 10;
}
message CalendarSpreadCommoditySwap {
   optional string SecondaryPayRecFlag = 489;
   optional Identifier SecondaryCommodityFuture = 490;
   optional Identifier SecondaryCalculationType = 491;
   optional string PayRecFlag = 492;
   optional bcl.Decimal StrikePrice = 493;
   optional Identifier CommodityFuture = 494;
   optional Identifier CalculationType = 495;
   optional Identifier ResetPattern = 496;
   optional Identifier HolidayCalendar = 497;
   optional Identifier DayCountBasis = 498;
   optional Identifier BusinessDayRule = 499;
   optional Identifier DateGenerationRule = 500;
   optional Identifier DateRollConvention = 501;
   optional Identifier SettlementMethod = 502;
   repeated AllocationBase Allocations = 503;
   optional string BuySellFlag = 504;
   optional Identifier ClearingHouse = 505;
   optional string ExecutionPlatformClearingHouseAlias = 506;
   optional int32 ClearingHouseId = 507;
   optional string ClonedContract = 508;
   optional string ContractSubType = 509;
   optional ContractSubType ContractSubTypeDetails = 510;
   optional string AgreementExternalAlias = 511;
   optional string ExecutionPlatformCounterpartyAlias = 512;
   optional Identifier ExecutionPlatform = 513;
   optional bcl.DateTime EndDate = 514;
   optional Identifier PriceCurrency = 515;
   optional int32 PriceCurrencyId = 516;
   optional string SourceContract = 517;
   optional bcl.DateTime StartDate = 518;
   optional bcl.Decimal PointValue = 519;
   optional string TT2Code = 520;
   optional string SubCategoryAlias = 521;
   optional int32 Id = 522;
   optional string ObjectIdAlias = 523;
   optional Identifier Counterparty = 524;
   optional BusinessEntity CounterpartyDetails = 525;
   optional string ShortName = 526;
}
message CashBackFixedInterestRateSwap {
   optional string FixedPayRecFlag = 528;
   optional bcl.Decimal FixedCouponRate = 529;
   optional Identifier FixedPrincipalType = 530;
   optional Identifier FixedCurrency = 531;
   optional int32 FixedCurrencyId = 532;
   optional Identifier FixedResetPattern = 533;
   optional int32 FixedResetPatternId = 534;
   optional Identifier FixedCompoundingStyle = 535;
   optional int32 FixedCompoundingStyleId = 536;
   optional Identifier FixedHolidayCalendar = 537;
   optional Identifier FixedDayCountBasis = 538;
   optional Identifier FixedBusinessDayRule = 539;
   optional Identifier FixedDateGenerationRule = 540;
   optional Identifier FixedDateRollConvention = 541;
   optional string PricingStyleAlias = 542;
   optional string ForwardYieldCurve = 543;
   repeated AllocationBase Allocations = 544;
   optional string BuySellFlag = 545;
   optional Identifier ClearingHouse = 546;
   optional string ExecutionPlatformClearingHouseAlias = 547;
   optional int32 ClearingHouseId = 548;
   optional string ClonedContract = 549;
   optional string ContractSubType = 550;
   optional ContractSubType ContractSubTypeDetails = 551;
   optional string AgreementExternalAlias = 552;
   optional string ExecutionPlatformCounterpartyAlias = 553;
   optional Identifier ExecutionPlatform = 554;
   optional bcl.DateTime EndDate = 555;
   optional Identifier PriceCurrency = 556;
   optional int32 PriceCurrencyId = 557;
   optional string SourceContract = 558;
   optional bcl.DateTime StartDate = 559;
   optional bcl.Decimal PointValue = 560;
   optional string TT2Code = 561;
   optional string SubCategoryAlias = 562;
   optional int32 Id = 563;
   optional string ObjectIdAlias = 564;
   optional Identifier Counterparty = 565;
   optional BusinessEntity CounterpartyDetails = 566;
   optional string ShortName = 567;
}
message CashBackFloatingInterestRateSwap {
   optional string FloatingPayRecFlag = 569;
   optional bcl.Decimal FloatingSpreadRate = 570;
   optional bool FloatingInterpolateFixingRateInd = 571;
   optional Identifier FloatingPrincipalType = 572;
   optional Identifier FloatingInterbankInterestRate = 573;
   optional Identifier FloatingCurrency = 574;
   optional int32 FloatingCurrencyId = 575;
   optional Identifier FloatingResetPattern = 576;
   optional int32 FloatingResetPatternId = 577;
   optional Identifier FloatingCompoundingStyle = 578;
   optional int32 FloatingCompoundingStyleId = 579;
   optional Identifier FloatingHolidayCalendar = 580;
   optional Identifier FloatingDayCountBasis = 581;
   optional Identifier FloatingBusinessDayRule = 582;
   optional Identifier FloatingDateGenerationRule = 583;
   optional Identifier FloatingDateRollConvention = 584;
   optional Identifier FloatingStubEndTenorPoint = 585;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 586;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 587;
   optional Identifier FloatingStubStartTenorPoint = 588;
   optional Identifier FloatingStubType = 589;
   optional string PricingStyleAlias = 590;
   optional string ForwardYieldCurve = 591;
   repeated AllocationBase Allocations = 592;
   optional string BuySellFlag = 593;
   optional Identifier ClearingHouse = 594;
   optional string ExecutionPlatformClearingHouseAlias = 595;
   optional int32 ClearingHouseId = 596;
   optional string ClonedContract = 597;
   optional string ContractSubType = 598;
   optional ContractSubType ContractSubTypeDetails = 599;
   optional string AgreementExternalAlias = 600;
   optional string ExecutionPlatformCounterpartyAlias = 601;
   optional Identifier ExecutionPlatform = 602;
   optional bcl.DateTime EndDate = 603;
   optional Identifier PriceCurrency = 604;
   optional int32 PriceCurrencyId = 605;
   optional string SourceContract = 606;
   optional bcl.DateTime StartDate = 607;
   optional bcl.Decimal PointValue = 608;
   optional string TT2Code = 609;
   optional string SubCategoryAlias = 610;
   optional int32 Id = 611;
   optional string ObjectIdAlias = 612;
   optional Identifier Counterparty = 613;
   optional BusinessEntity CounterpartyDetails = 614;
   optional string ShortName = 615;
}
message CommodityFixedIndexSwap {
   optional bcl.Decimal FinanceFixedCouponRate = 617;
   optional int32 MaturitySettlementLagDayCount = 618;
   optional string IndexPayRecFlag = 619;
   optional string FinancePayRecFlag = 620;
   optional bcl.Decimal StrikePrice = 621;
   optional Identifier IndexPrincipalType = 622;
   optional Identifier Index = 623;
   optional Identifier IndexCurrency = 624;
   optional int32 IndexCurrencyId = 625;
   optional Identifier IndexResetPattern = 626;
   optional int32 IndexResetPatternId = 627;
   optional Identifier IndexHolidayCalendar = 628;
   optional Identifier IndexDayCountBasis = 629;
   optional Identifier IndexBusinessDayRule = 630;
   optional Identifier IndexDateGenerationRule = 631;
   optional Identifier IndexDateRollConvention = 632;
   optional Identifier IndexCompoundingStyle = 633;
   optional int32 IndexCompoundingStyleId = 634;
   optional Identifier FinancePrincipalType = 635;
   optional Identifier FinanceCurrency = 636;
   optional int32 FinanceCurrencyId = 637;
   optional Identifier FinanceResetPattern = 638;
   optional int32 FinanceResetPatternId = 639;
   optional Identifier FinanceCompoundingStyle = 640;
   optional int32 FinanceCompoundingStyleId = 641;
   optional Identifier FinanceHolidayCalendar = 642;
   optional Identifier FinanceDayCountBasis = 643;
   optional Identifier FinanceBusinessDayRule = 644;
   optional Identifier FinanceDateGenerationRule = 645;
   optional Identifier FinanceDateRollConvention = 646;
   optional Identifier FinanceStubType = 647;
   repeated AllocationBase Allocations = 648;
   optional string BuySellFlag = 649;
   optional Identifier ClearingHouse = 650;
   optional string ExecutionPlatformClearingHouseAlias = 651;
   optional int32 ClearingHouseId = 652;
   optional string ClonedContract = 653;
   optional string ContractSubType = 654;
   optional ContractSubType ContractSubTypeDetails = 655;
   optional string AgreementExternalAlias = 656;
   optional string ExecutionPlatformCounterpartyAlias = 657;
   optional Identifier ExecutionPlatform = 658;
   optional bcl.DateTime EndDate = 659;
   optional Identifier PriceCurrency = 660;
   optional int32 PriceCurrencyId = 661;
   optional string SourceContract = 662;
   optional bcl.DateTime StartDate = 663;
   optional bcl.Decimal PointValue = 664;
   optional string TT2Code = 665;
   optional string SubCategoryAlias = 666;
   optional int32 Id = 667;
   optional string ObjectIdAlias = 668;
   optional Identifier Counterparty = 669;
   optional BusinessEntity CounterpartyDetails = 670;
   optional string ShortName = 671;
}
message CommodityFloatIndexSwap {
   optional bool FinanceFloatingInterpolateFixingRateInd = 673;
   optional bcl.Decimal FinanceFloatingSpreadRate = 674;
   optional Identifier FinanceFloatingInterbankInterestRate = 675;
   optional int32 MaturitySettlementLagDayCount = 676;
   optional string IndexPayRecFlag = 677;
   optional string FinancePayRecFlag = 678;
   optional bcl.Decimal StrikePrice = 679;
   optional Identifier IndexPrincipalType = 680;
   optional Identifier Index = 681;
   optional Identifier IndexCurrency = 682;
   optional int32 IndexCurrencyId = 683;
   optional Identifier IndexResetPattern = 684;
   optional int32 IndexResetPatternId = 685;
   optional Identifier IndexHolidayCalendar = 686;
   optional Identifier IndexDayCountBasis = 687;
   optional Identifier IndexBusinessDayRule = 688;
   optional Identifier IndexDateGenerationRule = 689;
   optional Identifier IndexDateRollConvention = 690;
   optional Identifier IndexCompoundingStyle = 691;
   optional int32 IndexCompoundingStyleId = 692;
   optional Identifier FinancePrincipalType = 693;
   optional Identifier FinanceCurrency = 694;
   optional int32 FinanceCurrencyId = 695;
   optional Identifier FinanceResetPattern = 696;
   optional int32 FinanceResetPatternId = 697;
   optional Identifier FinanceCompoundingStyle = 698;
   optional int32 FinanceCompoundingStyleId = 699;
   optional Identifier FinanceHolidayCalendar = 700;
   optional Identifier FinanceDayCountBasis = 701;
   optional Identifier FinanceBusinessDayRule = 702;
   optional Identifier FinanceDateGenerationRule = 703;
   optional Identifier FinanceDateRollConvention = 704;
   optional Identifier FinanceStubType = 705;
   repeated AllocationBase Allocations = 706;
   optional string BuySellFlag = 707;
   optional Identifier ClearingHouse = 708;
   optional string ExecutionPlatformClearingHouseAlias = 709;
   optional int32 ClearingHouseId = 710;
   optional string ClonedContract = 711;
   optional string ContractSubType = 712;
   optional ContractSubType ContractSubTypeDetails = 713;
   optional string AgreementExternalAlias = 714;
   optional string ExecutionPlatformCounterpartyAlias = 715;
   optional Identifier ExecutionPlatform = 716;
   optional bcl.DateTime EndDate = 717;
   optional Identifier PriceCurrency = 718;
   optional int32 PriceCurrencyId = 719;
   optional string SourceContract = 720;
   optional bcl.DateTime StartDate = 721;
   optional bcl.Decimal PointValue = 722;
   optional string TT2Code = 723;
   optional string SubCategoryAlias = 724;
   optional int32 Id = 725;
   optional string ObjectIdAlias = 726;
   optional Identifier Counterparty = 727;
   optional BusinessEntity CounterpartyDetails = 728;
   optional string ShortName = 729;
}
message CommoditySwapBase {
   optional string PayRecFlag = 731;
   optional bcl.Decimal StrikePrice = 732;
   optional Identifier CommodityFuture = 733;
   optional Identifier CalculationType = 734;
   optional Identifier ResetPattern = 735;
   optional Identifier HolidayCalendar = 736;
   optional Identifier DayCountBasis = 737;
   optional Identifier BusinessDayRule = 738;
   optional Identifier DateGenerationRule = 739;
   optional Identifier DateRollConvention = 740;
   optional Identifier SettlementMethod = 741;
   repeated AllocationBase Allocations = 742;
   optional string BuySellFlag = 743;
   optional Identifier ClearingHouse = 744;
   optional string ExecutionPlatformClearingHouseAlias = 745;
   optional int32 ClearingHouseId = 746;
   optional string ClonedContract = 747;
   optional string ContractSubType = 748;
   optional ContractSubType ContractSubTypeDetails = 749;
   optional string AgreementExternalAlias = 750;
   optional string ExecutionPlatformCounterpartyAlias = 751;
   optional Identifier ExecutionPlatform = 752;
   optional bcl.DateTime EndDate = 753;
   optional Identifier PriceCurrency = 754;
   optional int32 PriceCurrencyId = 755;
   optional string SourceContract = 756;
   optional bcl.DateTime StartDate = 757;
   optional bcl.Decimal PointValue = 758;
   optional string TT2Code = 759;
   optional string SubCategoryAlias = 760;
   optional int32 Id = 761;
   optional string ObjectIdAlias = 762;
   optional Identifier Counterparty = 763;
   optional BusinessEntity CounterpartyDetails = 764;
   optional string ShortName = 765;
   // the following represent sub-types; at most 1 should have a value
   optional CalendarSpreadCommoditySwap CalendarSpreadCommoditySwap = 488;
   optional CrackSpreadCommoditySwap CrackSpreadCommoditySwap = 1300;
   optional SingleCommoditySwap SingleCommoditySwap = 4777;
}
message CompositeBasketIndexOptionBase {
   optional Identifier Index = 767;
   optional bcl.Decimal StrikeRate = 768;
   optional bcl.Decimal StrikePrice = 769;
   optional bcl.DateTime StrikeDate = 770;
   optional bcl.Decimal IndexPrice = 771;
   optional string PutCallFlag = 772;
   optional bcl.DateTime ExpirySettlementDate = 773;
   optional Identifier HolidayCalendar = 774;
   optional Identifier OptionStyle = 775;
   optional Identifier SettlementMethod = 776;
   optional Identifier SettlementStyle = 777;
   repeated AllocationBase Allocations = 778;
   optional string BuySellFlag = 779;
   optional Identifier ClearingHouse = 780;
   optional string ExecutionPlatformClearingHouseAlias = 781;
   optional int32 ClearingHouseId = 782;
   optional string ClonedContract = 783;
   optional string ContractSubType = 784;
   optional ContractSubType ContractSubTypeDetails = 785;
   optional string AgreementExternalAlias = 786;
   optional string ExecutionPlatformCounterpartyAlias = 787;
   optional Identifier ExecutionPlatform = 788;
   optional bcl.DateTime EndDate = 789;
   optional Identifier PriceCurrency = 790;
   optional int32 PriceCurrencyId = 791;
   optional string SourceContract = 792;
   optional bcl.DateTime StartDate = 793;
   optional bcl.Decimal PointValue = 794;
   optional string TT2Code = 795;
   optional string SubCategoryAlias = 796;
   optional int32 Id = 797;
   optional string ObjectIdAlias = 798;
   optional Identifier Counterparty = 799;
   optional BusinessEntity CounterpartyDetails = 800;
   optional string ShortName = 801;
   // the following represent sub-types; at most 1 should have a value
   optional CompositeBasketIndexOptionNotional CompositeBasketIndexOptionNotional = 802;
   optional CompositeBasketIndexOptionQuantity CompositeBasketIndexOptionQuantity = 839;
}
message CompositeBasketIndexOptionNotional {
   optional int32 RoundingPrecisionCount = 803;
   optional Identifier Index = 804;
   optional bcl.Decimal StrikeRate = 805;
   optional bcl.Decimal StrikePrice = 806;
   optional bcl.DateTime StrikeDate = 807;
   optional bcl.Decimal IndexPrice = 808;
   optional string PutCallFlag = 809;
   optional bcl.DateTime ExpirySettlementDate = 810;
   optional Identifier HolidayCalendar = 811;
   optional Identifier OptionStyle = 812;
   optional Identifier SettlementMethod = 813;
   optional Identifier SettlementStyle = 814;
   repeated AllocationBase Allocations = 815;
   optional string BuySellFlag = 816;
   optional Identifier ClearingHouse = 817;
   optional string ExecutionPlatformClearingHouseAlias = 818;
   optional int32 ClearingHouseId = 819;
   optional string ClonedContract = 820;
   optional string ContractSubType = 821;
   optional ContractSubType ContractSubTypeDetails = 822;
   optional string AgreementExternalAlias = 823;
   optional string ExecutionPlatformCounterpartyAlias = 824;
   optional Identifier ExecutionPlatform = 825;
   optional bcl.DateTime EndDate = 826;
   optional Identifier PriceCurrency = 827;
   optional int32 PriceCurrencyId = 828;
   optional string SourceContract = 829;
   optional bcl.DateTime StartDate = 830;
   optional bcl.Decimal PointValue = 831;
   optional string TT2Code = 832;
   optional string SubCategoryAlias = 833;
   optional int32 Id = 834;
   optional string ObjectIdAlias = 835;
   optional Identifier Counterparty = 836;
   optional BusinessEntity CounterpartyDetails = 837;
   optional string ShortName = 838;
}
message CompositeBasketIndexOptionQuantity {
   optional Identifier Index = 840;
   optional bcl.Decimal StrikeRate = 841;
   optional bcl.Decimal StrikePrice = 842;
   optional bcl.DateTime StrikeDate = 843;
   optional bcl.Decimal IndexPrice = 844;
   optional string PutCallFlag = 845;
   optional bcl.DateTime ExpirySettlementDate = 846;
   optional Identifier HolidayCalendar = 847;
   optional Identifier OptionStyle = 848;
   optional Identifier SettlementMethod = 849;
   optional Identifier SettlementStyle = 850;
   repeated AllocationBase Allocations = 851;
   optional string BuySellFlag = 852;
   optional Identifier ClearingHouse = 853;
   optional string ExecutionPlatformClearingHouseAlias = 854;
   optional int32 ClearingHouseId = 855;
   optional string ClonedContract = 856;
   optional string ContractSubType = 857;
   optional ContractSubType ContractSubTypeDetails = 858;
   optional string AgreementExternalAlias = 859;
   optional string ExecutionPlatformCounterpartyAlias = 860;
   optional Identifier ExecutionPlatform = 861;
   optional bcl.DateTime EndDate = 862;
   optional Identifier PriceCurrency = 863;
   optional int32 PriceCurrencyId = 864;
   optional string SourceContract = 865;
   optional bcl.DateTime StartDate = 866;
   optional bcl.Decimal PointValue = 867;
   optional string TT2Code = 868;
   optional string SubCategoryAlias = 869;
   optional int32 Id = 870;
   optional string ObjectIdAlias = 871;
   optional Identifier Counterparty = 872;
   optional BusinessEntity CounterpartyDetails = 873;
   optional string ShortName = 874;
}
message CompositeIndexOptionBase {
   optional Identifier Index = 876;
   optional bcl.Decimal StrikeRate = 877;
   optional bcl.Decimal StrikePrice = 878;
   optional bcl.DateTime StrikeDate = 879;
   optional bcl.Decimal IndexPrice = 880;
   optional string PutCallFlag = 881;
   optional bcl.DateTime ExpirySettlementDate = 882;
   optional Identifier HolidayCalendar = 883;
   optional Identifier OptionStyle = 884;
   optional Identifier SettlementMethod = 885;
   optional Identifier SettlementStyle = 886;
   repeated AllocationBase Allocations = 887;
   optional string BuySellFlag = 888;
   optional Identifier ClearingHouse = 889;
   optional string ExecutionPlatformClearingHouseAlias = 890;
   optional int32 ClearingHouseId = 891;
   optional string ClonedContract = 892;
   optional string ContractSubType = 893;
   optional ContractSubType ContractSubTypeDetails = 894;
   optional string AgreementExternalAlias = 895;
   optional string ExecutionPlatformCounterpartyAlias = 896;
   optional Identifier ExecutionPlatform = 897;
   optional bcl.DateTime EndDate = 898;
   optional Identifier PriceCurrency = 899;
   optional int32 PriceCurrencyId = 900;
   optional string SourceContract = 901;
   optional bcl.DateTime StartDate = 902;
   optional bcl.Decimal PointValue = 903;
   optional string TT2Code = 904;
   optional string SubCategoryAlias = 905;
   optional int32 Id = 906;
   optional string ObjectIdAlias = 907;
   optional Identifier Counterparty = 908;
   optional BusinessEntity CounterpartyDetails = 909;
   optional string ShortName = 910;
   // the following represent sub-types; at most 1 should have a value
   optional CompositeIndexOptionNotional CompositeIndexOptionNotional = 911;
   optional CompositeIndexOptionQuantity CompositeIndexOptionQuantity = 948;
}
message CompositeIndexOptionNotional {
   optional int32 RoundingPrecisionCount = 912;
   optional Identifier Index = 913;
   optional bcl.Decimal StrikeRate = 914;
   optional bcl.Decimal StrikePrice = 915;
   optional bcl.DateTime StrikeDate = 916;
   optional bcl.Decimal IndexPrice = 917;
   optional string PutCallFlag = 918;
   optional bcl.DateTime ExpirySettlementDate = 919;
   optional Identifier HolidayCalendar = 920;
   optional Identifier OptionStyle = 921;
   optional Identifier SettlementMethod = 922;
   optional Identifier SettlementStyle = 923;
   repeated AllocationBase Allocations = 924;
   optional string BuySellFlag = 925;
   optional Identifier ClearingHouse = 926;
   optional string ExecutionPlatformClearingHouseAlias = 927;
   optional int32 ClearingHouseId = 928;
   optional string ClonedContract = 929;
   optional string ContractSubType = 930;
   optional ContractSubType ContractSubTypeDetails = 931;
   optional string AgreementExternalAlias = 932;
   optional string ExecutionPlatformCounterpartyAlias = 933;
   optional Identifier ExecutionPlatform = 934;
   optional bcl.DateTime EndDate = 935;
   optional Identifier PriceCurrency = 936;
   optional int32 PriceCurrencyId = 937;
   optional string SourceContract = 938;
   optional bcl.DateTime StartDate = 939;
   optional bcl.Decimal PointValue = 940;
   optional string TT2Code = 941;
   optional string SubCategoryAlias = 942;
   optional int32 Id = 943;
   optional string ObjectIdAlias = 944;
   optional Identifier Counterparty = 945;
   optional BusinessEntity CounterpartyDetails = 946;
   optional string ShortName = 947;
}
message CompositeIndexOptionQuantity {
   optional Identifier Index = 949;
   optional bcl.Decimal StrikeRate = 950;
   optional bcl.Decimal StrikePrice = 951;
   optional bcl.DateTime StrikeDate = 952;
   optional bcl.Decimal IndexPrice = 953;
   optional string PutCallFlag = 954;
   optional bcl.DateTime ExpirySettlementDate = 955;
   optional Identifier HolidayCalendar = 956;
   optional Identifier OptionStyle = 957;
   optional Identifier SettlementMethod = 958;
   optional Identifier SettlementStyle = 959;
   repeated AllocationBase Allocations = 960;
   optional string BuySellFlag = 961;
   optional Identifier ClearingHouse = 962;
   optional string ExecutionPlatformClearingHouseAlias = 963;
   optional int32 ClearingHouseId = 964;
   optional string ClonedContract = 965;
   optional string ContractSubType = 966;
   optional ContractSubType ContractSubTypeDetails = 967;
   optional string AgreementExternalAlias = 968;
   optional string ExecutionPlatformCounterpartyAlias = 969;
   optional Identifier ExecutionPlatform = 970;
   optional bcl.DateTime EndDate = 971;
   optional Identifier PriceCurrency = 972;
   optional int32 PriceCurrencyId = 973;
   optional string SourceContract = 974;
   optional bcl.DateTime StartDate = 975;
   optional bcl.Decimal PointValue = 976;
   optional string TT2Code = 977;
   optional string SubCategoryAlias = 978;
   optional int32 Id = 979;
   optional string ObjectIdAlias = 980;
   optional Identifier Counterparty = 981;
   optional BusinessEntity CounterpartyDetails = 982;
   optional string ShortName = 983;
}
message CompositeTotalReturnIndexOptionBase {
   optional Identifier Index = 985;
   optional bcl.Decimal StrikeRate = 986;
   optional bcl.Decimal StrikePrice = 987;
   optional bcl.DateTime StrikeDate = 988;
   optional bcl.Decimal IndexPrice = 989;
   optional string PutCallFlag = 990;
   optional bcl.DateTime ExpirySettlementDate = 991;
   optional Identifier HolidayCalendar = 992;
   optional Identifier OptionStyle = 993;
   optional Identifier SettlementMethod = 994;
   optional Identifier SettlementStyle = 995;
   repeated AllocationBase Allocations = 996;
   optional string BuySellFlag = 997;
   optional Identifier ClearingHouse = 998;
   optional string ExecutionPlatformClearingHouseAlias = 999;
   optional int32 ClearingHouseId = 1000;
   optional string ClonedContract = 1001;
   optional string ContractSubType = 1002;
   optional ContractSubType ContractSubTypeDetails = 1003;
   optional string AgreementExternalAlias = 1004;
   optional string ExecutionPlatformCounterpartyAlias = 1005;
   optional Identifier ExecutionPlatform = 1006;
   optional bcl.DateTime EndDate = 1007;
   optional Identifier PriceCurrency = 1008;
   optional int32 PriceCurrencyId = 1009;
   optional string SourceContract = 1010;
   optional bcl.DateTime StartDate = 1011;
   optional bcl.Decimal PointValue = 1012;
   optional string TT2Code = 1013;
   optional string SubCategoryAlias = 1014;
   optional int32 Id = 1015;
   optional string ObjectIdAlias = 1016;
   optional Identifier Counterparty = 1017;
   optional BusinessEntity CounterpartyDetails = 1018;
   optional string ShortName = 1019;
   // the following represent sub-types; at most 1 should have a value
   optional CompositeTotalReturnIndexOptionNotional CompositeTotalReturnIndexOptionNotional = 1020;
   optional CompositeTotalReturnIndexOptionQuantity CompositeTotalReturnIndexOptionQuantity = 1057;
}
message CompositeTotalReturnIndexOptionNotional {
   optional int32 RoundingPrecisionCount = 1021;
   optional Identifier Index = 1022;
   optional bcl.Decimal StrikeRate = 1023;
   optional bcl.Decimal StrikePrice = 1024;
   optional bcl.DateTime StrikeDate = 1025;
   optional bcl.Decimal IndexPrice = 1026;
   optional string PutCallFlag = 1027;
   optional bcl.DateTime ExpirySettlementDate = 1028;
   optional Identifier HolidayCalendar = 1029;
   optional Identifier OptionStyle = 1030;
   optional Identifier SettlementMethod = 1031;
   optional Identifier SettlementStyle = 1032;
   repeated AllocationBase Allocations = 1033;
   optional string BuySellFlag = 1034;
   optional Identifier ClearingHouse = 1035;
   optional string ExecutionPlatformClearingHouseAlias = 1036;
   optional int32 ClearingHouseId = 1037;
   optional string ClonedContract = 1038;
   optional string ContractSubType = 1039;
   optional ContractSubType ContractSubTypeDetails = 1040;
   optional string AgreementExternalAlias = 1041;
   optional string ExecutionPlatformCounterpartyAlias = 1042;
   optional Identifier ExecutionPlatform = 1043;
   optional bcl.DateTime EndDate = 1044;
   optional Identifier PriceCurrency = 1045;
   optional int32 PriceCurrencyId = 1046;
   optional string SourceContract = 1047;
   optional bcl.DateTime StartDate = 1048;
   optional bcl.Decimal PointValue = 1049;
   optional string TT2Code = 1050;
   optional string SubCategoryAlias = 1051;
   optional int32 Id = 1052;
   optional string ObjectIdAlias = 1053;
   optional Identifier Counterparty = 1054;
   optional BusinessEntity CounterpartyDetails = 1055;
   optional string ShortName = 1056;
}
message CompositeTotalReturnIndexOptionQuantity {
   optional Identifier Index = 1058;
   optional bcl.Decimal StrikeRate = 1059;
   optional bcl.Decimal StrikePrice = 1060;
   optional bcl.DateTime StrikeDate = 1061;
   optional bcl.Decimal IndexPrice = 1062;
   optional string PutCallFlag = 1063;
   optional bcl.DateTime ExpirySettlementDate = 1064;
   optional Identifier HolidayCalendar = 1065;
   optional Identifier OptionStyle = 1066;
   optional Identifier SettlementMethod = 1067;
   optional Identifier SettlementStyle = 1068;
   repeated AllocationBase Allocations = 1069;
   optional string BuySellFlag = 1070;
   optional Identifier ClearingHouse = 1071;
   optional string ExecutionPlatformClearingHouseAlias = 1072;
   optional int32 ClearingHouseId = 1073;
   optional string ClonedContract = 1074;
   optional string ContractSubType = 1075;
   optional ContractSubType ContractSubTypeDetails = 1076;
   optional string AgreementExternalAlias = 1077;
   optional string ExecutionPlatformCounterpartyAlias = 1078;
   optional Identifier ExecutionPlatform = 1079;
   optional bcl.DateTime EndDate = 1080;
   optional Identifier PriceCurrency = 1081;
   optional int32 PriceCurrencyId = 1082;
   optional string SourceContract = 1083;
   optional bcl.DateTime StartDate = 1084;
   optional bcl.Decimal PointValue = 1085;
   optional string TT2Code = 1086;
   optional string SubCategoryAlias = 1087;
   optional int32 Id = 1088;
   optional string ObjectIdAlias = 1089;
   optional Identifier Counterparty = 1090;
   optional BusinessEntity CounterpartyDetails = 1091;
   optional string ShortName = 1092;
}
message CompressedPosition {
   optional string HiportAlias = 25;
   optional string SedolAlias = 26;
   optional string InsightIdAlias = 27;
   optional string OtcPositionAlias = 28;
   optional string CounterpartyAlias = 29;
   optional string DownstreamDescription = 30;
   repeated PositionMirror PositionMirrorCollection = 31;
   optional string NTAlias = 32;
   optional AllocationBase ContractAllocation = 33;
   optional bcl.NetObjectProxy CurrentContractBlock = 34; // reference-tracked ContractBase
   optional bcl.Decimal DrivingPrincipalAmount = 35;
   optional bcl.Decimal OpposingPrincipalAmount = 36;
   optional string XenoGuidAlias = 37;
   optional PositionHistory LatestPositionHistory = 38;
   optional PositionHistory PositionHistory = 39;
   optional PositionHistory PreviousPositionHistory = 40;
   optional string MarkitServAlias = 41;
   optional bcl.Decimal Quantity = 42;
   optional bool IsCompressedFully = 43;
}
message ConstantMaturityInterestRateSwap {
   optional BusinessEntity DrivingInterestRate = 1094;
   optional BusinessEntity OpposingInterestRate = 1095;
   optional Identifier DrivingBusinessDayRule = 1096;
   optional Identifier DrivingCompoundingStyle = 1097;
   optional int32 DrivingCompoundingStyleId = 1098;
   optional Identifier DrivingCurrency = 1099;
   optional int32 DrivingCurrencyId = 1100;
   optional Identifier DrivingDateGenerationRule = 1101;
   optional Identifier DrivingDateRollConvention = 1102;
   optional Identifier DrivingDayCountBasis = 1103;
   optional Identifier DrivingHolidayCalendar = 1104;
   optional bool DrivingInterpolateFixingRateInd = 1105;
   optional string DrivingPayRecFlag = 1106;
   optional Identifier DrivingPrincipalType = 1107;
   optional Identifier DrivingResetPattern = 1108;
   optional int32 DrivingResetPatternId = 1109;
   optional bcl.Decimal DrivingSpreadRate = 1110;
   optional Identifier DrivingStubEndTenorPoint = 1111;
   optional bcl.DateTime DrivingStubFirstPeriodEndDate = 1112;
   optional bcl.DateTime DrivingStubLastPeriodStartDate = 1113;
   optional Identifier DrivingStubStartTenorPoint = 1114;
   optional Identifier DrivingStubType = 1115;
   optional Identifier OpposingBusinessDayRule = 1116;
   optional Identifier OpposingCompoundingStyle = 1117;
   optional int32 OpposingCompoundingStyleId = 1118;
   optional Identifier OpposingCurrency = 1119;
   optional int32 OpposingCurrencyId = 1120;
   optional Identifier OpposingDateGenerationRule = 1121;
   optional Identifier OpposingDateRollConvention = 1122;
   optional Identifier OpposingDayCountBasis = 1123;
   optional Identifier OpposingHolidayCalendar = 1124;
   optional bool OpposingInterpolateFixingRateInd = 1125;
   optional string OpposingPayRecFlag = 1126;
   optional Identifier OpposingPrincipalType = 1127;
   optional Identifier OpposingResetPattern = 1128;
   optional int32 OpposingResetPatternId = 1129;
   optional bcl.Decimal OpposingSpreadRate = 1130;
   optional Identifier OpposingStubEndTenorPoint = 1131;
   optional bcl.DateTime OpposingStubFirstPeriodEndDate = 1132;
   optional bcl.DateTime OpposingStubLastPeriodStartDate = 1133;
   optional Identifier OpposingStubStartTenorPoint = 1134;
   optional Identifier OpposingStubType = 1135;
   optional string PricingStyleAlias = 1136;
   optional string ForwardYieldCurve = 1137;
   repeated AllocationBase Allocations = 1138;
   optional string BuySellFlag = 1139;
   optional Identifier ClearingHouse = 1140;
   optional string ExecutionPlatformClearingHouseAlias = 1141;
   optional int32 ClearingHouseId = 1142;
   optional string ClonedContract = 1143;
   optional string ContractSubType = 1144;
   optional ContractSubType ContractSubTypeDetails = 1145;
   optional string AgreementExternalAlias = 1146;
   optional string ExecutionPlatformCounterpartyAlias = 1147;
   optional Identifier ExecutionPlatform = 1148;
   optional bcl.DateTime EndDate = 1149;
   optional Identifier PriceCurrency = 1150;
   optional int32 PriceCurrencyId = 1151;
   optional string SourceContract = 1152;
   optional bcl.DateTime StartDate = 1153;
   optional bcl.Decimal PointValue = 1154;
   optional string TT2Code = 1155;
   optional string SubCategoryAlias = 1156;
   optional int32 Id = 1157;
   optional string ObjectIdAlias = 1158;
   optional Identifier Counterparty = 1159;
   optional BusinessEntity CounterpartyDetails = 1160;
   optional string ShortName = 1161;
}
message ContractAllocationBase {
   optional string PortfolioExternalAlias = 56;
   optional string PortfolioNTAlias = 57;
   optional Identifier GiveUpCounterparty = 58;
   optional Identifier ClearingCounterparty = 59;
   optional string ExecutionPlatformClearingCounterpartyAlias = 60;
   optional string AgreementExternalAlias = 61;
   optional string AlphaUsiAlias = 62;
   optional string GammaUsiAlias = 63;
   optional string DrivingDiscountingCurve = 64;
   optional string OpposingDiscountingCurve = 65;
   optional string ClearingHouseAssignedAlias = 66;
   optional string AllocationAlias = 67;
   optional int32 Id = 68;
   optional string ObjectIdAlias = 69;
   optional Position Position = 70;
   optional Identifier Portfolio = 71;
   optional BusinessEntity PortfolioDetails = 72;
   optional bcl.NetObjectProxy Contract = 73; // reference-tracked ContractBase
   optional Pricing Pricing = 74;
   // the following represent sub-types; at most 1 should have a value
   optional DualPrincipalAllocation DualPrincipalAllocation = 87;
   optional QuantityAllocation QuantityAllocation = 129;
   optional SinglePrincipalAllocation SinglePrincipalAllocation = 167;
}
message ContractBase {
   optional int32 Id = 1162;
   optional string ObjectIdAlias = 1163;
   optional Identifier Counterparty = 1164;
   optional BusinessEntity CounterpartyDetails = 1165;
   optional string ShortName = 1166;
   // the following represent sub-types; at most 1 should have a value
   optional ContractBlockBase ContractBlockBase = 1167;
   optional ContractUnwindBlock ContractUnwindBlock = 1245;
}
message ContractBlockBase {
   repeated AllocationBase Allocations = 1168;
   optional string BuySellFlag = 1169;
   optional Identifier ClearingHouse = 1170;
   optional string ExecutionPlatformClearingHouseAlias = 1171;
   optional int32 ClearingHouseId = 1172;
   optional string ClonedContract = 1173;
   optional string ContractSubType = 1174;
   optional ContractSubType ContractSubTypeDetails = 1175;
   optional string AgreementExternalAlias = 1176;
   optional string ExecutionPlatformCounterpartyAlias = 1177;
   optional Identifier ExecutionPlatform = 1178;
   optional bcl.DateTime EndDate = 1179;
   optional Identifier PriceCurrency = 1180;
   optional int32 PriceCurrencyId = 1181;
   optional string SourceContract = 1182;
   optional bcl.DateTime StartDate = 1183;
   optional bcl.Decimal PointValue = 1184;
   optional string TT2Code = 1185;
   optional string SubCategoryAlias = 1186;
   optional int32 Id = 1187;
   optional string ObjectIdAlias = 1188;
   optional Identifier Counterparty = 1189;
   optional BusinessEntity CounterpartyDetails = 1190;
   optional string ShortName = 1191;
   // the following represent sub-types; at most 1 should have a value
   optional AssetSwapBase AssetSwapBase = 373;
   optional CommoditySwapBase CommoditySwapBase = 730;
   optional CreditDefaultSwapBase CreditDefaultSwapBase = 1336;
   optional CreditDefaultSwapOptionBase CreditDefaultSwapOptionBase = 1408;
   optional EquitySwapBase EquitySwapBase = 2260;
   optional FXOptionBase FXOptionBase = 2931;
   optional IndexSwapBase IndexSwapBase = 3481;
   optional InflationSwapBase InflationSwapBase = 3610;
   optional InterestRateOptionBase InterestRateOptionBase = 3723;
   optional InterestRateSwapBase InterestRateSwapBase = 3826;
   optional SwaptionBase SwaptionBase = 5045;
   optional UnderlyerOptionBase UnderlyerOptionBase = 5105;
   optional VarianceSwapBase VarianceSwapBase = 5421;
}
message ContractForDifference {
   optional Identifier EquityInstrument = 1193;
   optional string EquityPayRecFlag = 1194;
   optional string FloatingPayRecFlag = 1195;
   optional bcl.Decimal FloatingSpreadRate = 1196;
   optional bcl.Decimal StrikePrice = 1197;
   optional bcl.Decimal GrossPrice = 1198;
   optional bcl.Decimal CommissionRate = 1199;
   optional Identifier EquityCurrency = 1200;
   optional int32 EquityCurrencyId = 1201;
   optional Identifier EquityResetPattern = 1202;
   optional int32 EquityResetPatternId = 1203;
   optional Identifier EquityHolidayCalendar = 1204;
   optional Identifier EquityDayCountBasis = 1205;
   optional Identifier EquityBusinessDayRule = 1206;
   optional Identifier EquityDateGenerationRule = 1207;
   optional Identifier EquityDateRollConvention = 1208;
   optional Identifier FloatingInterbankInterestRate = 1209;
   optional Identifier FloatingCurrency = 1210;
   optional int32 FloatingCurrencyId = 1211;
   optional Identifier FloatingResetPattern = 1212;
   optional int32 FloatingResetPatternId = 1213;
   optional Identifier FloatingHolidayCalendar = 1214;
   optional Identifier FloatingDayCountBasis = 1215;
   optional Identifier FloatingBusinessDayRule = 1216;
   optional Identifier FloatingDateGenerationRule = 1217;
   optional Identifier FloatingDateRollConvention = 1218;
   optional Identifier SettlementMethod = 1219;
   optional Identifier FloatingStubType = 1220;
   repeated AllocationBase Allocations = 1221;
   optional string BuySellFlag = 1222;
   optional Identifier ClearingHouse = 1223;
   optional string ExecutionPlatformClearingHouseAlias = 1224;
   optional int32 ClearingHouseId = 1225;
   optional string ClonedContract = 1226;
   optional string ContractSubType = 1227;
   optional ContractSubType ContractSubTypeDetails = 1228;
   optional string AgreementExternalAlias = 1229;
   optional string ExecutionPlatformCounterpartyAlias = 1230;
   optional Identifier ExecutionPlatform = 1231;
   optional bcl.DateTime EndDate = 1232;
   optional Identifier PriceCurrency = 1233;
   optional int32 PriceCurrencyId = 1234;
   optional string SourceContract = 1235;
   optional bcl.DateTime StartDate = 1236;
   optional bcl.Decimal PointValue = 1237;
   optional string TT2Code = 1238;
   optional string SubCategoryAlias = 1239;
   optional int32 Id = 1240;
   optional string ObjectIdAlias = 1241;
   optional Identifier Counterparty = 1242;
   optional BusinessEntity CounterpartyDetails = 1243;
   optional string ShortName = 1244;
}
message ContractSubType {
   optional string FullDescription = 5518;
   optional string ContractTypeDescription = 5519;
   optional string ContractSubTypeCode = 5520;
   optional bcl.Decimal PointValue = 5521;
   optional bcl.Decimal InsightPointValue = 5522;
   optional string XenoSubCategoryAlias = 5523;
   optional Identifier TT2 = 5524;
   optional int32 Id = 5525;
   optional int32 ExternalContractTypeId = 5526;
}
message ContractUnwindAllocationBase {
   optional string PositionInsightId = 76;
   optional string Sedol = 77;
   optional string PortfolioExternalAlias = 78;
   optional string AllocationAlias = 79;
   optional int32 Id = 80;
   optional string ObjectIdAlias = 81;
   optional Position Position = 82;
   optional Identifier Portfolio = 83;
   optional BusinessEntity PortfolioDetails = 84;
   optional bcl.NetObjectProxy Contract = 85; // reference-tracked ContractBase
   optional Pricing Pricing = 86;
   // the following represent sub-types; at most 1 should have a value
   optional DualPrincipalUnwindAllocation DualPrincipalUnwindAllocation = 112;
   optional QuantityUnwindAllocation QuantityUnwindAllocation = 152;
   optional SinglePrincipalUnwindAllocation SinglePrincipalUnwindAllocation = 191;
}
message ContractUnwindBlock {
   optional bcl.NetObjectProxy ContractBlock = 1246; // reference-tracked ContractBase
   repeated AllocationBase Allocations = 1247;
   optional string ContractSubTypeCode = 1248;
   optional bcl.Decimal UnwindCommissionRate = 1249;
   optional bcl.Decimal UnwindGrossPrice = 1250;
   optional bcl.Decimal UnwindRate = 1251;
   optional bcl.Decimal UnwindStrikePrice = 1252;
   optional int32 Id = 1253;
   optional string ObjectIdAlias = 1254;
   optional Identifier Counterparty = 1255;
   optional BusinessEntity CounterpartyDetails = 1256;
   optional string ShortName = 1257;
}
message CorporateCreditDefaultSwap {
   optional Identifier FixedIncomeInstrument = 1259;
   optional Identifier DebtTier = 1260;
   optional string ProtectionBuySellFlag = 1261;
   optional bcl.Decimal CouponRate = 1262;
   optional bcl.Decimal RecoveryRate = 1263;
   optional bcl.DateTime StubFirstPeriodEndDate = 1264;
   optional bool AccruedPaidDefaultInd = 1265;
   optional Identifier Company = 1266;
   optional Identifier DocumentationClause = 1267;
   optional Identifier PayoffPoint = 1268;
   optional Identifier SettlementMethod = 1269;
   optional Identifier ResetPattern = 1270;
   optional Identifier HolidayCalendar = 1271;
   optional Identifier DayCountBasis = 1272;
   optional Identifier BusinessDayRule = 1273;
   optional Identifier DateGenerationRule = 1274;
   optional Identifier DateRollConvention = 1275;
   repeated AllocationBase Allocations = 1276;
   optional string BuySellFlag = 1277;
   optional Identifier ClearingHouse = 1278;
   optional string ExecutionPlatformClearingHouseAlias = 1279;
   optional int32 ClearingHouseId = 1280;
   optional string ClonedContract = 1281;
   optional string ContractSubType = 1282;
   optional ContractSubType ContractSubTypeDetails = 1283;
   optional string AgreementExternalAlias = 1284;
   optional string ExecutionPlatformCounterpartyAlias = 1285;
   optional Identifier ExecutionPlatform = 1286;
   optional bcl.DateTime EndDate = 1287;
   optional Identifier PriceCurrency = 1288;
   optional int32 PriceCurrencyId = 1289;
   optional string SourceContract = 1290;
   optional bcl.DateTime StartDate = 1291;
   optional bcl.Decimal PointValue = 1292;
   optional string TT2Code = 1293;
   optional string SubCategoryAlias = 1294;
   optional int32 Id = 1295;
   optional string ObjectIdAlias = 1296;
   optional Identifier Counterparty = 1297;
   optional BusinessEntity CounterpartyDetails = 1298;
   optional string ShortName = 1299;
}
message Counterparty {
   optional string CounterpartyCode = 5;
   optional string CounterpartyName = 6;
   optional string Description = 7;
   optional string Code = 8;
   optional int32 Id = 9;
}
message CrackSpreadCommoditySwap {
   optional string PayRecFlag = 1301;
   optional bcl.Decimal StrikePrice = 1302;
   optional Identifier CommodityFuture = 1303;
   optional Identifier CalculationType = 1304;
   optional Identifier ResetPattern = 1305;
   optional Identifier HolidayCalendar = 1306;
   optional Identifier DayCountBasis = 1307;
   optional Identifier BusinessDayRule = 1308;
   optional Identifier DateGenerationRule = 1309;
   optional Identifier DateRollConvention = 1310;
   optional Identifier SettlementMethod = 1311;
   repeated AllocationBase Allocations = 1312;
   optional string BuySellFlag = 1313;
   optional Identifier ClearingHouse = 1314;
   optional string ExecutionPlatformClearingHouseAlias = 1315;
   optional int32 ClearingHouseId = 1316;
   optional string ClonedContract = 1317;
   optional string ContractSubType = 1318;
   optional ContractSubType ContractSubTypeDetails = 1319;
   optional string AgreementExternalAlias = 1320;
   optional string ExecutionPlatformCounterpartyAlias = 1321;
   optional Identifier ExecutionPlatform = 1322;
   optional bcl.DateTime EndDate = 1323;
   optional Identifier PriceCurrency = 1324;
   optional int32 PriceCurrencyId = 1325;
   optional string SourceContract = 1326;
   optional bcl.DateTime StartDate = 1327;
   optional bcl.Decimal PointValue = 1328;
   optional string TT2Code = 1329;
   optional string SubCategoryAlias = 1330;
   optional int32 Id = 1331;
   optional string ObjectIdAlias = 1332;
   optional Identifier Counterparty = 1333;
   optional BusinessEntity CounterpartyDetails = 1334;
   optional string ShortName = 1335;
}
message CreditDefaultSwapBase {
   optional string ProtectionBuySellFlag = 1337;
   optional bcl.Decimal CouponRate = 1338;
   optional bcl.Decimal RecoveryRate = 1339;
   optional bcl.DateTime StubFirstPeriodEndDate = 1340;
   optional bool AccruedPaidDefaultInd = 1341;
   optional Identifier Company = 1342;
   optional Identifier DocumentationClause = 1343;
   optional Identifier PayoffPoint = 1344;
   optional Identifier SettlementMethod = 1345;
   optional Identifier ResetPattern = 1346;
   optional Identifier HolidayCalendar = 1347;
   optional Identifier DayCountBasis = 1348;
   optional Identifier BusinessDayRule = 1349;
   optional Identifier DateGenerationRule = 1350;
   optional Identifier DateRollConvention = 1351;
   repeated AllocationBase Allocations = 1352;
   optional string BuySellFlag = 1353;
   optional Identifier ClearingHouse = 1354;
   optional string ExecutionPlatformClearingHouseAlias = 1355;
   optional int32 ClearingHouseId = 1356;
   optional string ClonedContract = 1357;
   optional string ContractSubType = 1358;
   optional ContractSubType ContractSubTypeDetails = 1359;
   optional string AgreementExternalAlias = 1360;
   optional string ExecutionPlatformCounterpartyAlias = 1361;
   optional Identifier ExecutionPlatform = 1362;
   optional bcl.DateTime EndDate = 1363;
   optional Identifier PriceCurrency = 1364;
   optional int32 PriceCurrencyId = 1365;
   optional string SourceContract = 1366;
   optional bcl.DateTime StartDate = 1367;
   optional bcl.Decimal PointValue = 1368;
   optional string TT2Code = 1369;
   optional string SubCategoryAlias = 1370;
   optional int32 Id = 1371;
   optional string ObjectIdAlias = 1372;
   optional Identifier Counterparty = 1373;
   optional BusinessEntity CounterpartyDetails = 1374;
   optional string ShortName = 1375;
   // the following represent sub-types; at most 1 should have a value
   optional AssetBackedCreditDefaultSwap AssetBackedCreditDefaultSwap = 319;
   optional IndexCreditDefaultSwapBase IndexCreditDefaultSwapBase = 3250;
   optional SingleNameCreditDefaultSwapBase SingleNameCreditDefaultSwapBase = 4813;
}
message CreditDefaultSwapOption {
   optional ContractBase CreditDefaultSwap = 1377;
   optional Identifier ExchangeMethod = 1378;
   optional string PutCallFlag = 1379;
   optional bcl.DateTime ExpirySettlementDate = 1380;
   optional bcl.Decimal StrikeRate = 1381;
   optional Identifier HolidayCalendar = 1382;
   optional Identifier OptionStyle = 1383;
   repeated AllocationBase Allocations = 1384;
   optional string BuySellFlag = 1385;
   optional Identifier ClearingHouse = 1386;
   optional string ExecutionPlatformClearingHouseAlias = 1387;
   optional int32 ClearingHouseId = 1388;
   optional string ClonedContract = 1389;
   optional string ContractSubType = 1390;
   optional ContractSubType ContractSubTypeDetails = 1391;
   optional string AgreementExternalAlias = 1392;
   optional string ExecutionPlatformCounterpartyAlias = 1393;
   optional Identifier ExecutionPlatform = 1394;
   optional bcl.DateTime EndDate = 1395;
   optional Identifier PriceCurrency = 1396;
   optional int32 PriceCurrencyId = 1397;
   optional string SourceContract = 1398;
   optional bcl.DateTime StartDate = 1399;
   optional bcl.Decimal PointValue = 1400;
   optional string TT2Code = 1401;
   optional string SubCategoryAlias = 1402;
   optional int32 Id = 1403;
   optional string ObjectIdAlias = 1404;
   optional Identifier Counterparty = 1405;
   optional BusinessEntity CounterpartyDetails = 1406;
   optional string ShortName = 1407;
   // the following represent sub-types; at most 1 should have a value
   optional CreditDefaultSwapPriceTradedIndexOption CreditDefaultSwapPriceTradedIndexOption = 1439;
   optional CreditDefaultSwapYieldTradedIndexOption CreditDefaultSwapYieldTradedIndexOption = 1471;
}
message CreditDefaultSwapOptionBase {
   optional Identifier ExchangeMethod = 1409;
   optional string PutCallFlag = 1410;
   optional bcl.DateTime ExpirySettlementDate = 1411;
   optional bcl.Decimal StrikeRate = 1412;
   optional Identifier HolidayCalendar = 1413;
   optional Identifier OptionStyle = 1414;
   repeated AllocationBase Allocations = 1415;
   optional string BuySellFlag = 1416;
   optional Identifier ClearingHouse = 1417;
   optional string ExecutionPlatformClearingHouseAlias = 1418;
   optional int32 ClearingHouseId = 1419;
   optional string ClonedContract = 1420;
   optional string ContractSubType = 1421;
   optional ContractSubType ContractSubTypeDetails = 1422;
   optional string AgreementExternalAlias = 1423;
   optional string ExecutionPlatformCounterpartyAlias = 1424;
   optional Identifier ExecutionPlatform = 1425;
   optional bcl.DateTime EndDate = 1426;
   optional Identifier PriceCurrency = 1427;
   optional int32 PriceCurrencyId = 1428;
   optional string SourceContract = 1429;
   optional bcl.DateTime StartDate = 1430;
   optional bcl.Decimal PointValue = 1431;
   optional string TT2Code = 1432;
   optional string SubCategoryAlias = 1433;
   optional int32 Id = 1434;
   optional string ObjectIdAlias = 1435;
   optional Identifier Counterparty = 1436;
   optional BusinessEntity CounterpartyDetails = 1437;
   optional string ShortName = 1438;
   // the following represent sub-types; at most 1 should have a value
   optional CreditDefaultSwapOption CreditDefaultSwapOption = 1376;
}
message CreditDefaultSwapPriceTradedIndexOption {
   optional ContractBase CreditDefaultSwap = 1440;
   optional Identifier ExchangeMethod = 1441;
   optional string PutCallFlag = 1442;
   optional bcl.DateTime ExpirySettlementDate = 1443;
   optional bcl.Decimal StrikeRate = 1444;
   optional Identifier HolidayCalendar = 1445;
   optional Identifier OptionStyle = 1446;
   repeated AllocationBase Allocations = 1447;
   optional string BuySellFlag = 1448;
   optional Identifier ClearingHouse = 1449;
   optional string ExecutionPlatformClearingHouseAlias = 1450;
   optional int32 ClearingHouseId = 1451;
   optional string ClonedContract = 1452;
   optional string ContractSubType = 1453;
   optional ContractSubType ContractSubTypeDetails = 1454;
   optional string AgreementExternalAlias = 1455;
   optional string ExecutionPlatformCounterpartyAlias = 1456;
   optional Identifier ExecutionPlatform = 1457;
   optional bcl.DateTime EndDate = 1458;
   optional Identifier PriceCurrency = 1459;
   optional int32 PriceCurrencyId = 1460;
   optional string SourceContract = 1461;
   optional bcl.DateTime StartDate = 1462;
   optional bcl.Decimal PointValue = 1463;
   optional string TT2Code = 1464;
   optional string SubCategoryAlias = 1465;
   optional int32 Id = 1466;
   optional string ObjectIdAlias = 1467;
   optional Identifier Counterparty = 1468;
   optional BusinessEntity CounterpartyDetails = 1469;
   optional string ShortName = 1470;
}
message CreditDefaultSwapYieldTradedIndexOption {
   optional ContractBase CreditDefaultSwap = 1472;
   optional Identifier ExchangeMethod = 1473;
   optional string PutCallFlag = 1474;
   optional bcl.DateTime ExpirySettlementDate = 1475;
   optional bcl.Decimal StrikeRate = 1476;
   optional Identifier HolidayCalendar = 1477;
   optional Identifier OptionStyle = 1478;
   repeated AllocationBase Allocations = 1479;
   optional string BuySellFlag = 1480;
   optional Identifier ClearingHouse = 1481;
   optional string ExecutionPlatformClearingHouseAlias = 1482;
   optional int32 ClearingHouseId = 1483;
   optional string ClonedContract = 1484;
   optional string ContractSubType = 1485;
   optional ContractSubType ContractSubTypeDetails = 1486;
   optional string AgreementExternalAlias = 1487;
   optional string ExecutionPlatformCounterpartyAlias = 1488;
   optional Identifier ExecutionPlatform = 1489;
   optional bcl.DateTime EndDate = 1490;
   optional Identifier PriceCurrency = 1491;
   optional int32 PriceCurrencyId = 1492;
   optional string SourceContract = 1493;
   optional bcl.DateTime StartDate = 1494;
   optional bcl.Decimal PointValue = 1495;
   optional string TT2Code = 1496;
   optional string SubCategoryAlias = 1497;
   optional int32 Id = 1498;
   optional string ObjectIdAlias = 1499;
   optional Identifier Counterparty = 1500;
   optional BusinessEntity CounterpartyDetails = 1501;
   optional string ShortName = 1502;
}
message CreditIndex {
   optional Identifier Company = 5527;
   optional string CreditIndexFamilyName = 5528;
   optional string CreditIndexName = 5529;
   optional Identifier Currency = 5530;
   optional bcl.DateTime EffectiveDate = 5531;
   optional bcl.DateTime FirstPaymentDate = 5532;
   optional bcl.Decimal FixedCouponRate = 5533;
   optional bcl.Decimal IndexFactorRate = 5534;
   optional string MarkitRedAlias = 5535;
   optional string MarkitTradeIdAlias = 5536;
   optional bcl.DateTime MaturityDate = 5537;
   optional Identifier ResetPattern = 5538;
   optional int32 SeriesNumber = 5539;
   optional int32 Tenor = 5540;
   optional bool DirectionMatchInd = 5541;
   optional int32 VersionNumber = 5542;
}
message CrossCurrencyFixedFixed {
   optional Identifier DrivingBusinessDayRule = 1504;
   optional Identifier DrivingCompoundingStyle = 1505;
   optional int32 DrivingCompoundingStyleId = 1506;
   optional bcl.Decimal DrivingCouponRate = 1507;
   optional Identifier DrivingCurrency = 1508;
   optional int32 DrivingCurrencyId = 1509;
   optional Identifier DrivingDateGenerationRule = 1510;
   optional Identifier DrivingDateRollConvention = 1511;
   optional Identifier DrivingDayCountBasis = 1512;
   optional Identifier DrivingHolidayCalendar = 1513;
   optional string DrivingPayRecFlag = 1514;
   optional Identifier DrivingPrincipalType = 1515;
   optional Identifier DrivingResetPattern = 1516;
   optional int32 DrivingResetPatternId = 1517;
   optional bcl.DateTime DrivingStubFirstPeriodEndDate = 1518;
   optional bcl.DateTime DrivingStubLastPeriodStartDate = 1519;
   optional Identifier DrivingStubType = 1520;
   optional Identifier OpposingBusinessDayRule = 1521;
   optional Identifier OpposingCompoundingStyle = 1522;
   optional int32 OpposingCompoundingStyleId = 1523;
   optional bcl.Decimal OpposingCouponRate = 1524;
   optional Identifier OpposingCurrency = 1525;
   optional int32 OpposingCurrencyId = 1526;
   optional Identifier OpposingDateGenerationRule = 1527;
   optional Identifier OpposingDateRollConvention = 1528;
   optional Identifier OpposingDayCountBasis = 1529;
   optional Identifier OpposingHolidayCalendar = 1530;
   optional string OpposingPayRecFlag = 1531;
   optional Identifier OpposingPrincipalType = 1532;
   optional Identifier OpposingResetPattern = 1533;
   optional int32 OpposingResetPatternId = 1534;
   optional bcl.DateTime OpposingStubFirstPeriodEndDate = 1535;
   optional bcl.DateTime OpposingStubLastPeriodStartDate = 1536;
   optional Identifier OpposingStubType = 1537;
   optional string PricingStyleAlias = 1538;
   optional string ForwardYieldCurve = 1539;
   repeated AllocationBase Allocations = 1540;
   optional string BuySellFlag = 1541;
   optional Identifier ClearingHouse = 1542;
   optional string ExecutionPlatformClearingHouseAlias = 1543;
   optional int32 ClearingHouseId = 1544;
   optional string ClonedContract = 1545;
   optional string ContractSubType = 1546;
   optional ContractSubType ContractSubTypeDetails = 1547;
   optional string AgreementExternalAlias = 1548;
   optional string ExecutionPlatformCounterpartyAlias = 1549;
   optional Identifier ExecutionPlatform = 1550;
   optional bcl.DateTime EndDate = 1551;
   optional Identifier PriceCurrency = 1552;
   optional int32 PriceCurrencyId = 1553;
   optional string SourceContract = 1554;
   optional bcl.DateTime StartDate = 1555;
   optional bcl.Decimal PointValue = 1556;
   optional string TT2Code = 1557;
   optional string SubCategoryAlias = 1558;
   optional int32 Id = 1559;
   optional string ObjectIdAlias = 1560;
   optional Identifier Counterparty = 1561;
   optional BusinessEntity CounterpartyDetails = 1562;
   optional string ShortName = 1563;
}
message CrossCurrencyFixedFloating {
   optional string FloatingPayRecFlag = 1565;
   optional string FixedPayRecFlag = 1566;
   optional bcl.Decimal FloatingSpreadRate = 1567;
   optional bool FloatingInterpolateFixingRateInd = 1568;
   optional bcl.Decimal FixedCouponRate = 1569;
   optional Identifier FloatingPrincipalType = 1570;
   optional Identifier FloatingCurrency = 1571;
   optional int32 FloatingCurrencyId = 1572;
   optional Identifier FloatingResetPattern = 1573;
   optional int32 FloatingResetPatternId = 1574;
   optional Identifier FloatingCompoundingStyle = 1575;
   optional int32 FloatingCompoundingStyleId = 1576;
   optional Identifier FloatingHolidayCalendar = 1577;
   optional Identifier FloatingDayCountBasis = 1578;
   optional Identifier FloatingBusinessDayRule = 1579;
   optional Identifier FloatingDateGenerationRule = 1580;
   optional Identifier FloatingDateRollConvention = 1581;
   optional Identifier FloatingStubType = 1582;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 1583;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 1584;
   optional Identifier FloatingStubStartTenorPoint = 1585;
   optional Identifier FloatingStubEndTenorPoint = 1586;
   optional Identifier FixedPrincipalType = 1587;
   optional Identifier FixedCurrency = 1588;
   optional int32 FixedCurrencyId = 1589;
   optional Identifier FixedResetPattern = 1590;
   optional int32 FixedResetPatternId = 1591;
   optional Identifier FixedCompoundingStyle = 1592;
   optional int32 FixedCompoundingStyleId = 1593;
   optional Identifier FixedHolidayCalendar = 1594;
   optional Identifier FixedDayCountBasis = 1595;
   optional Identifier FixedBusinessDayRule = 1596;
   optional Identifier FixedDateGenerationRule = 1597;
   optional Identifier FixedDateRollConvention = 1598;
   optional Identifier FixedStubType = 1599;
   optional bcl.DateTime FixedStubFirstPeriodEndDate = 1600;
   optional bcl.DateTime FixedStubLastPeriodStartDate = 1601;
   optional BusinessEntity FloatingInterestRate = 1602;
   optional InterestRateBase FloatingInterestRateDetail = 1603;
   optional string PricingStyleAlias = 1604;
   optional string ForwardYieldCurve = 1605;
   repeated AllocationBase Allocations = 1606;
   optional string BuySellFlag = 1607;
   optional Identifier ClearingHouse = 1608;
   optional string ExecutionPlatformClearingHouseAlias = 1609;
   optional int32 ClearingHouseId = 1610;
   optional string ClonedContract = 1611;
   optional string ContractSubType = 1612;
   optional ContractSubType ContractSubTypeDetails = 1613;
   optional string AgreementExternalAlias = 1614;
   optional string ExecutionPlatformCounterpartyAlias = 1615;
   optional Identifier ExecutionPlatform = 1616;
   optional bcl.DateTime EndDate = 1617;
   optional Identifier PriceCurrency = 1618;
   optional int32 PriceCurrencyId = 1619;
   optional string SourceContract = 1620;
   optional bcl.DateTime StartDate = 1621;
   optional bcl.Decimal PointValue = 1622;
   optional string TT2Code = 1623;
   optional string SubCategoryAlias = 1624;
   optional int32 Id = 1625;
   optional string ObjectIdAlias = 1626;
   optional Identifier Counterparty = 1627;
   optional BusinessEntity CounterpartyDetails = 1628;
   optional string ShortName = 1629;
}
message CrossCurrencyFloatFloat {
   optional Identifier DrivingInterbankInterestRate = 1631;
   optional Identifier OpposingInterbankInterestRate = 1632;
   optional Identifier DrivingBusinessDayRule = 1633;
   optional Identifier DrivingCompoundingStyle = 1634;
   optional int32 DrivingCompoundingStyleId = 1635;
   optional Identifier DrivingCurrency = 1636;
   optional int32 DrivingCurrencyId = 1637;
   optional Identifier DrivingDateGenerationRule = 1638;
   optional Identifier DrivingDateRollConvention = 1639;
   optional Identifier DrivingDayCountBasis = 1640;
   optional Identifier DrivingHolidayCalendar = 1641;
   optional bool DrivingInterpolateFixingRateInd = 1642;
   optional string DrivingPayRecFlag = 1643;
   optional Identifier DrivingPrincipalType = 1644;
   optional Identifier DrivingResetPattern = 1645;
   optional int32 DrivingResetPatternId = 1646;
   optional bcl.Decimal DrivingSpreadRate = 1647;
   optional Identifier DrivingStubEndTenorPoint = 1648;
   optional bcl.DateTime DrivingStubFirstPeriodEndDate = 1649;
   optional bcl.DateTime DrivingStubLastPeriodStartDate = 1650;
   optional Identifier DrivingStubStartTenorPoint = 1651;
   optional Identifier DrivingStubType = 1652;
   optional Identifier OpposingBusinessDayRule = 1653;
   optional Identifier OpposingCompoundingStyle = 1654;
   optional int32 OpposingCompoundingStyleId = 1655;
   optional Identifier OpposingCurrency = 1656;
   optional int32 OpposingCurrencyId = 1657;
   optional Identifier OpposingDateGenerationRule = 1658;
   optional Identifier OpposingDateRollConvention = 1659;
   optional Identifier OpposingDayCountBasis = 1660;
   optional Identifier OpposingHolidayCalendar = 1661;
   optional bool OpposingInterpolateFixingRateInd = 1662;
   optional string OpposingPayRecFlag = 1663;
   optional Identifier OpposingPrincipalType = 1664;
   optional Identifier OpposingResetPattern = 1665;
   optional int32 OpposingResetPatternId = 1666;
   optional bcl.Decimal OpposingSpreadRate = 1667;
   optional Identifier OpposingStubEndTenorPoint = 1668;
   optional bcl.DateTime OpposingStubFirstPeriodEndDate = 1669;
   optional bcl.DateTime OpposingStubLastPeriodStartDate = 1670;
   optional Identifier OpposingStubStartTenorPoint = 1671;
   optional Identifier OpposingStubType = 1672;
   optional string PricingStyleAlias = 1673;
   optional string ForwardYieldCurve = 1674;
   repeated AllocationBase Allocations = 1675;
   optional string BuySellFlag = 1676;
   optional Identifier ClearingHouse = 1677;
   optional string ExecutionPlatformClearingHouseAlias = 1678;
   optional int32 ClearingHouseId = 1679;
   optional string ClonedContract = 1680;
   optional string ContractSubType = 1681;
   optional ContractSubType ContractSubTypeDetails = 1682;
   optional string AgreementExternalAlias = 1683;
   optional string ExecutionPlatformCounterpartyAlias = 1684;
   optional Identifier ExecutionPlatform = 1685;
   optional bcl.DateTime EndDate = 1686;
   optional Identifier PriceCurrency = 1687;
   optional int32 PriceCurrencyId = 1688;
   optional string SourceContract = 1689;
   optional bcl.DateTime StartDate = 1690;
   optional bcl.Decimal PointValue = 1691;
   optional string TT2Code = 1692;
   optional string SubCategoryAlias = 1693;
   optional int32 Id = 1694;
   optional string ObjectIdAlias = 1695;
   optional Identifier Counterparty = 1696;
   optional BusinessEntity CounterpartyDetails = 1697;
   optional string ShortName = 1698;
}
message CrossCurrencyFloatingFixed {
   optional string FloatingPayRecFlag = 1700;
   optional string FixedPayRecFlag = 1701;
   optional bcl.Decimal FloatingSpreadRate = 1702;
   optional bool FloatingInterpolateFixingRateInd = 1703;
   optional bcl.Decimal FixedCouponRate = 1704;
   optional Identifier FloatingPrincipalType = 1705;
   optional Identifier FloatingCurrency = 1706;
   optional int32 FloatingCurrencyId = 1707;
   optional Identifier FloatingResetPattern = 1708;
   optional int32 FloatingResetPatternId = 1709;
   optional Identifier FloatingCompoundingStyle = 1710;
   optional int32 FloatingCompoundingStyleId = 1711;
   optional Identifier FloatingHolidayCalendar = 1712;
   optional Identifier FloatingDayCountBasis = 1713;
   optional Identifier FloatingBusinessDayRule = 1714;
   optional Identifier FloatingDateGenerationRule = 1715;
   optional Identifier FloatingDateRollConvention = 1716;
   optional Identifier FloatingStubType = 1717;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 1718;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 1719;
   optional Identifier FloatingStubStartTenorPoint = 1720;
   optional Identifier FloatingStubEndTenorPoint = 1721;
   optional Identifier FixedPrincipalType = 1722;
   optional Identifier FixedCurrency = 1723;
   optional int32 FixedCurrencyId = 1724;
   optional Identifier FixedResetPattern = 1725;
   optional int32 FixedResetPatternId = 1726;
   optional Identifier FixedCompoundingStyle = 1727;
   optional int32 FixedCompoundingStyleId = 1728;
   optional Identifier FixedHolidayCalendar = 1729;
   optional Identifier FixedDayCountBasis = 1730;
   optional Identifier FixedBusinessDayRule = 1731;
   optional Identifier FixedDateGenerationRule = 1732;
   optional Identifier FixedDateRollConvention = 1733;
   optional Identifier FixedStubType = 1734;
   optional bcl.DateTime FixedStubFirstPeriodEndDate = 1735;
   optional bcl.DateTime FixedStubLastPeriodStartDate = 1736;
   optional BusinessEntity FloatingInterestRate = 1737;
   optional InterestRateBase FloatingInterestRateDetail = 1738;
   optional string PricingStyleAlias = 1739;
   optional string ForwardYieldCurve = 1740;
   repeated AllocationBase Allocations = 1741;
   optional string BuySellFlag = 1742;
   optional Identifier ClearingHouse = 1743;
   optional string ExecutionPlatformClearingHouseAlias = 1744;
   optional int32 ClearingHouseId = 1745;
   optional string ClonedContract = 1746;
   optional string ContractSubType = 1747;
   optional ContractSubType ContractSubTypeDetails = 1748;
   optional string AgreementExternalAlias = 1749;
   optional string ExecutionPlatformCounterpartyAlias = 1750;
   optional Identifier ExecutionPlatform = 1751;
   optional bcl.DateTime EndDate = 1752;
   optional Identifier PriceCurrency = 1753;
   optional int32 PriceCurrencyId = 1754;
   optional string SourceContract = 1755;
   optional bcl.DateTime StartDate = 1756;
   optional bcl.Decimal PointValue = 1757;
   optional string TT2Code = 1758;
   optional string SubCategoryAlias = 1759;
   optional int32 Id = 1760;
   optional string ObjectIdAlias = 1761;
   optional Identifier Counterparty = 1762;
   optional BusinessEntity CounterpartyDetails = 1763;
   optional string ShortName = 1764;
}
message CurrencyOptionExpiryOverride {
}
message DualPrincipalAllocation {
   optional bcl.Decimal DrivingPrincipalAmount = 88;
   optional bcl.Decimal OpposingPrincipalAmount = 89;
   optional bcl.Decimal ConsiderationAmount = 90;
   optional bcl.Decimal MidConsiderationAmount = 91;
   optional bcl.Decimal AdditionalFeeAmount = 92;
   optional string PortfolioExternalAlias = 93;
   optional string PortfolioNTAlias = 94;
   optional Identifier GiveUpCounterparty = 95;
   optional Identifier ClearingCounterparty = 96;
   optional string ExecutionPlatformClearingCounterpartyAlias = 97;
   optional string AgreementExternalAlias = 98;
   optional string AlphaUsiAlias = 99;
   optional string GammaUsiAlias = 100;
   optional string DrivingDiscountingCurve = 101;
   optional string OpposingDiscountingCurve = 102;
   optional string ClearingHouseAssignedAlias = 103;
   optional string AllocationAlias = 104;
   optional int32 Id = 105;
   optional string ObjectIdAlias = 106;
   optional Position Position = 107;
   optional Identifier Portfolio = 108;
   optional BusinessEntity PortfolioDetails = 109;
   optional bcl.NetObjectProxy Contract = 110; // reference-tracked ContractBase
   optional Pricing Pricing = 111;
}
message DualPrincipalUnwindAllocation {
   optional bcl.Decimal DrivingPrincipalAmount = 113;
   optional bcl.Decimal OpposingPrincipalAmount = 114;
   optional bcl.Decimal ConsiderationAmount = 115;
   optional bcl.Decimal MidConsiderationAmount = 116;
   optional bcl.Decimal AdditionalFeeAmount = 117;
   optional string PositionInsightId = 118;
   optional string Sedol = 119;
   optional string PortfolioExternalAlias = 120;
   optional string AllocationAlias = 121;
   optional int32 Id = 122;
   optional string ObjectIdAlias = 123;
   optional Position Position = 124;
   optional Identifier Portfolio = 125;
   optional BusinessEntity PortfolioDetails = 126;
   optional bcl.NetObjectProxy Contract = 127; // reference-tracked ContractBase
   optional Pricing Pricing = 128;
}
message EquityIndexSwapBase {
   optional Identifier EquityIndex = 1766;
   optional string EquityPayRecFlag = 1767;
   optional string FloatingPayRecFlag = 1768;
   optional bcl.Decimal FloatingSpreadRate = 1769;
   optional bcl.Decimal StrikePrice = 1770;
   optional bcl.Decimal GrossPrice = 1771;
   optional bcl.Decimal CommissionRate = 1772;
   optional Identifier EquityCurrency = 1773;
   optional int32 EquityCurrencyId = 1774;
   optional Identifier EquityResetPattern = 1775;
   optional int32 EquityResetPatternId = 1776;
   optional Identifier EquityHolidayCalendar = 1777;
   optional Identifier EquityDayCountBasis = 1778;
   optional Identifier EquityBusinessDayRule = 1779;
   optional Identifier EquityDateGenerationRule = 1780;
   optional Identifier EquityDateRollConvention = 1781;
   optional Identifier FloatingInterbankInterestRate = 1782;
   optional Identifier FloatingCurrency = 1783;
   optional int32 FloatingCurrencyId = 1784;
   optional Identifier FloatingResetPattern = 1785;
   optional int32 FloatingResetPatternId = 1786;
   optional Identifier FloatingHolidayCalendar = 1787;
   optional Identifier FloatingDayCountBasis = 1788;
   optional Identifier FloatingBusinessDayRule = 1789;
   optional Identifier FloatingDateGenerationRule = 1790;
   optional Identifier FloatingDateRollConvention = 1791;
   optional Identifier SettlementMethod = 1792;
   optional Identifier FloatingStubType = 1793;
   repeated AllocationBase Allocations = 1794;
   optional string BuySellFlag = 1795;
   optional Identifier ClearingHouse = 1796;
   optional string ExecutionPlatformClearingHouseAlias = 1797;
   optional int32 ClearingHouseId = 1798;
   optional string ClonedContract = 1799;
   optional string ContractSubType = 1800;
   optional ContractSubType ContractSubTypeDetails = 1801;
   optional string AgreementExternalAlias = 1802;
   optional string ExecutionPlatformCounterpartyAlias = 1803;
   optional Identifier ExecutionPlatform = 1804;
   optional bcl.DateTime EndDate = 1805;
   optional Identifier PriceCurrency = 1806;
   optional int32 PriceCurrencyId = 1807;
   optional string SourceContract = 1808;
   optional bcl.DateTime StartDate = 1809;
   optional bcl.Decimal PointValue = 1810;
   optional string TT2Code = 1811;
   optional string SubCategoryAlias = 1812;
   optional int32 Id = 1813;
   optional string ObjectIdAlias = 1814;
   optional Identifier Counterparty = 1815;
   optional BusinessEntity CounterpartyDetails = 1816;
   optional string ShortName = 1817;
   // the following represent sub-types; at most 1 should have a value
   optional EquityIndexSwapNotional EquityIndexSwapNotional = 1818;
   optional EquityIndexSwapQuantity EquityIndexSwapQuantity = 1872;
}
message EquityIndexSwapNotional {
   optional int32 RoundingPrecisionCount = 1819;
   optional Identifier EquityIndex = 1820;
   optional string EquityPayRecFlag = 1821;
   optional string FloatingPayRecFlag = 1822;
   optional bcl.Decimal FloatingSpreadRate = 1823;
   optional bcl.Decimal StrikePrice = 1824;
   optional bcl.Decimal GrossPrice = 1825;
   optional bcl.Decimal CommissionRate = 1826;
   optional Identifier EquityCurrency = 1827;
   optional int32 EquityCurrencyId = 1828;
   optional Identifier EquityResetPattern = 1829;
   optional int32 EquityResetPatternId = 1830;
   optional Identifier EquityHolidayCalendar = 1831;
   optional Identifier EquityDayCountBasis = 1832;
   optional Identifier EquityBusinessDayRule = 1833;
   optional Identifier EquityDateGenerationRule = 1834;
   optional Identifier EquityDateRollConvention = 1835;
   optional Identifier FloatingInterbankInterestRate = 1836;
   optional Identifier FloatingCurrency = 1837;
   optional int32 FloatingCurrencyId = 1838;
   optional Identifier FloatingResetPattern = 1839;
   optional int32 FloatingResetPatternId = 1840;
   optional Identifier FloatingHolidayCalendar = 1841;
   optional Identifier FloatingDayCountBasis = 1842;
   optional Identifier FloatingBusinessDayRule = 1843;
   optional Identifier FloatingDateGenerationRule = 1844;
   optional Identifier FloatingDateRollConvention = 1845;
   optional Identifier SettlementMethod = 1846;
   optional Identifier FloatingStubType = 1847;
   repeated AllocationBase Allocations = 1848;
   optional string BuySellFlag = 1849;
   optional Identifier ClearingHouse = 1850;
   optional string ExecutionPlatformClearingHouseAlias = 1851;
   optional int32 ClearingHouseId = 1852;
   optional string ClonedContract = 1853;
   optional string ContractSubType = 1854;
   optional ContractSubType ContractSubTypeDetails = 1855;
   optional string AgreementExternalAlias = 1856;
   optional string ExecutionPlatformCounterpartyAlias = 1857;
   optional Identifier ExecutionPlatform = 1858;
   optional bcl.DateTime EndDate = 1859;
   optional Identifier PriceCurrency = 1860;
   optional int32 PriceCurrencyId = 1861;
   optional string SourceContract = 1862;
   optional bcl.DateTime StartDate = 1863;
   optional bcl.Decimal PointValue = 1864;
   optional string TT2Code = 1865;
   optional string SubCategoryAlias = 1866;
   optional int32 Id = 1867;
   optional string ObjectIdAlias = 1868;
   optional Identifier Counterparty = 1869;
   optional BusinessEntity CounterpartyDetails = 1870;
   optional string ShortName = 1871;
}
message EquityIndexSwapQuantity {
   optional Identifier EquityIndex = 1873;
   optional string EquityPayRecFlag = 1874;
   optional string FloatingPayRecFlag = 1875;
   optional bcl.Decimal FloatingSpreadRate = 1876;
   optional bcl.Decimal StrikePrice = 1877;
   optional bcl.Decimal GrossPrice = 1878;
   optional bcl.Decimal CommissionRate = 1879;
   optional Identifier EquityCurrency = 1880;
   optional int32 EquityCurrencyId = 1881;
   optional Identifier EquityResetPattern = 1882;
   optional int32 EquityResetPatternId = 1883;
   optional Identifier EquityHolidayCalendar = 1884;
   optional Identifier EquityDayCountBasis = 1885;
   optional Identifier EquityBusinessDayRule = 1886;
   optional Identifier EquityDateGenerationRule = 1887;
   optional Identifier EquityDateRollConvention = 1888;
   optional Identifier FloatingInterbankInterestRate = 1889;
   optional Identifier FloatingCurrency = 1890;
   optional int32 FloatingCurrencyId = 1891;
   optional Identifier FloatingResetPattern = 1892;
   optional int32 FloatingResetPatternId = 1893;
   optional Identifier FloatingHolidayCalendar = 1894;
   optional Identifier FloatingDayCountBasis = 1895;
   optional Identifier FloatingBusinessDayRule = 1896;
   optional Identifier FloatingDateGenerationRule = 1897;
   optional Identifier FloatingDateRollConvention = 1898;
   optional Identifier SettlementMethod = 1899;
   optional Identifier FloatingStubType = 1900;
   repeated AllocationBase Allocations = 1901;
   optional string BuySellFlag = 1902;
   optional Identifier ClearingHouse = 1903;
   optional string ExecutionPlatformClearingHouseAlias = 1904;
   optional int32 ClearingHouseId = 1905;
   optional string ClonedContract = 1906;
   optional string ContractSubType = 1907;
   optional ContractSubType ContractSubTypeDetails = 1908;
   optional string AgreementExternalAlias = 1909;
   optional string ExecutionPlatformCounterpartyAlias = 1910;
   optional Identifier ExecutionPlatform = 1911;
   optional bcl.DateTime EndDate = 1912;
   optional Identifier PriceCurrency = 1913;
   optional int32 PriceCurrencyId = 1914;
   optional string SourceContract = 1915;
   optional bcl.DateTime StartDate = 1916;
   optional bcl.Decimal PointValue = 1917;
   optional string TT2Code = 1918;
   optional string SubCategoryAlias = 1919;
   optional int32 Id = 1920;
   optional string ObjectIdAlias = 1921;
   optional Identifier Counterparty = 1922;
   optional BusinessEntity CounterpartyDetails = 1923;
   optional string ShortName = 1924;
}
message EquityIndexTotalReturnSwapBase {
   optional Identifier FloatingCompoundingStyle = 1926;
   optional int32 FloatingCompoundingStyleId = 1927;
   optional Identifier EquityTotalReturnIndex = 1928;
   optional bcl.Decimal FXRate = 1929;
   optional bcl.DateTime FloatingFirstAccrualDate = 1930;
   optional bcl.DateTime FloatingLastAccrualDate = 1931;
   optional string EquityPayRecFlag = 1932;
   optional string FloatingPayRecFlag = 1933;
   optional bcl.Decimal FloatingSpreadRate = 1934;
   optional bcl.Decimal StrikePrice = 1935;
   optional bcl.Decimal GrossPrice = 1936;
   optional bcl.Decimal CommissionRate = 1937;
   optional Identifier EquityCurrency = 1938;
   optional int32 EquityCurrencyId = 1939;
   optional Identifier EquityResetPattern = 1940;
   optional int32 EquityResetPatternId = 1941;
   optional Identifier EquityHolidayCalendar = 1942;
   optional Identifier EquityDayCountBasis = 1943;
   optional Identifier EquityBusinessDayRule = 1944;
   optional Identifier EquityDateGenerationRule = 1945;
   optional Identifier EquityDateRollConvention = 1946;
   optional Identifier FloatingInterbankInterestRate = 1947;
   optional Identifier FloatingCurrency = 1948;
   optional int32 FloatingCurrencyId = 1949;
   optional Identifier FloatingResetPattern = 1950;
   optional int32 FloatingResetPatternId = 1951;
   optional Identifier FloatingHolidayCalendar = 1952;
   optional Identifier FloatingDayCountBasis = 1953;
   optional Identifier FloatingBusinessDayRule = 1954;
   optional Identifier FloatingDateGenerationRule = 1955;
   optional Identifier FloatingDateRollConvention = 1956;
   optional Identifier SettlementMethod = 1957;
   optional Identifier FloatingStubType = 1958;
   repeated AllocationBase Allocations = 1959;
   optional string BuySellFlag = 1960;
   optional Identifier ClearingHouse = 1961;
   optional string ExecutionPlatformClearingHouseAlias = 1962;
   optional int32 ClearingHouseId = 1963;
   optional string ClonedContract = 1964;
   optional string ContractSubType = 1965;
   optional ContractSubType ContractSubTypeDetails = 1966;
   optional string AgreementExternalAlias = 1967;
   optional string ExecutionPlatformCounterpartyAlias = 1968;
   optional Identifier ExecutionPlatform = 1969;
   optional bcl.DateTime EndDate = 1970;
   optional Identifier PriceCurrency = 1971;
   optional int32 PriceCurrencyId = 1972;
   optional string SourceContract = 1973;
   optional bcl.DateTime StartDate = 1974;
   optional bcl.Decimal PointValue = 1975;
   optional string TT2Code = 1976;
   optional string SubCategoryAlias = 1977;
   optional int32 Id = 1978;
   optional string ObjectIdAlias = 1979;
   optional Identifier Counterparty = 1980;
   optional BusinessEntity CounterpartyDetails = 1981;
   optional string ShortName = 1982;
   // the following represent sub-types; at most 1 should have a value
   optional EquityIndexTotalReturnSwapNotional EquityIndexTotalReturnSwapNotional = 1983;
   optional EquityIndexTotalReturnSwapQuantity EquityIndexTotalReturnSwapQuantity = 2042;
}
message EquityIndexTotalReturnSwapNotional {
   optional int32 RoundingPrecisionCount = 1984;
   optional Identifier FloatingCompoundingStyle = 1985;
   optional int32 FloatingCompoundingStyleId = 1986;
   optional Identifier EquityTotalReturnIndex = 1987;
   optional bcl.Decimal FXRate = 1988;
   optional bcl.DateTime FloatingFirstAccrualDate = 1989;
   optional bcl.DateTime FloatingLastAccrualDate = 1990;
   optional string EquityPayRecFlag = 1991;
   optional string FloatingPayRecFlag = 1992;
   optional bcl.Decimal FloatingSpreadRate = 1993;
   optional bcl.Decimal StrikePrice = 1994;
   optional bcl.Decimal GrossPrice = 1995;
   optional bcl.Decimal CommissionRate = 1996;
   optional Identifier EquityCurrency = 1997;
   optional int32 EquityCurrencyId = 1998;
   optional Identifier EquityResetPattern = 1999;
   optional int32 EquityResetPatternId = 2000;
   optional Identifier EquityHolidayCalendar = 2001;
   optional Identifier EquityDayCountBasis = 2002;
   optional Identifier EquityBusinessDayRule = 2003;
   optional Identifier EquityDateGenerationRule = 2004;
   optional Identifier EquityDateRollConvention = 2005;
   optional Identifier FloatingInterbankInterestRate = 2006;
   optional Identifier FloatingCurrency = 2007;
   optional int32 FloatingCurrencyId = 2008;
   optional Identifier FloatingResetPattern = 2009;
   optional int32 FloatingResetPatternId = 2010;
   optional Identifier FloatingHolidayCalendar = 2011;
   optional Identifier FloatingDayCountBasis = 2012;
   optional Identifier FloatingBusinessDayRule = 2013;
   optional Identifier FloatingDateGenerationRule = 2014;
   optional Identifier FloatingDateRollConvention = 2015;
   optional Identifier SettlementMethod = 2016;
   optional Identifier FloatingStubType = 2017;
   repeated AllocationBase Allocations = 2018;
   optional string BuySellFlag = 2019;
   optional Identifier ClearingHouse = 2020;
   optional string ExecutionPlatformClearingHouseAlias = 2021;
   optional int32 ClearingHouseId = 2022;
   optional string ClonedContract = 2023;
   optional string ContractSubType = 2024;
   optional ContractSubType ContractSubTypeDetails = 2025;
   optional string AgreementExternalAlias = 2026;
   optional string ExecutionPlatformCounterpartyAlias = 2027;
   optional Identifier ExecutionPlatform = 2028;
   optional bcl.DateTime EndDate = 2029;
   optional Identifier PriceCurrency = 2030;
   optional int32 PriceCurrencyId = 2031;
   optional string SourceContract = 2032;
   optional bcl.DateTime StartDate = 2033;
   optional bcl.Decimal PointValue = 2034;
   optional string TT2Code = 2035;
   optional string SubCategoryAlias = 2036;
   optional int32 Id = 2037;
   optional string ObjectIdAlias = 2038;
   optional Identifier Counterparty = 2039;
   optional BusinessEntity CounterpartyDetails = 2040;
   optional string ShortName = 2041;
}
message EquityIndexTotalReturnSwapQuantity {
   optional Identifier FloatingCompoundingStyle = 2043;
   optional int32 FloatingCompoundingStyleId = 2044;
   optional Identifier EquityTotalReturnIndex = 2045;
   optional bcl.Decimal FXRate = 2046;
   optional bcl.DateTime FloatingFirstAccrualDate = 2047;
   optional bcl.DateTime FloatingLastAccrualDate = 2048;
   optional string EquityPayRecFlag = 2049;
   optional string FloatingPayRecFlag = 2050;
   optional bcl.Decimal FloatingSpreadRate = 2051;
   optional bcl.Decimal StrikePrice = 2052;
   optional bcl.Decimal GrossPrice = 2053;
   optional bcl.Decimal CommissionRate = 2054;
   optional Identifier EquityCurrency = 2055;
   optional int32 EquityCurrencyId = 2056;
   optional Identifier EquityResetPattern = 2057;
   optional int32 EquityResetPatternId = 2058;
   optional Identifier EquityHolidayCalendar = 2059;
   optional Identifier EquityDayCountBasis = 2060;
   optional Identifier EquityBusinessDayRule = 2061;
   optional Identifier EquityDateGenerationRule = 2062;
   optional Identifier EquityDateRollConvention = 2063;
   optional Identifier FloatingInterbankInterestRate = 2064;
   optional Identifier FloatingCurrency = 2065;
   optional int32 FloatingCurrencyId = 2066;
   optional Identifier FloatingResetPattern = 2067;
   optional int32 FloatingResetPatternId = 2068;
   optional Identifier FloatingHolidayCalendar = 2069;
   optional Identifier FloatingDayCountBasis = 2070;
   optional Identifier FloatingBusinessDayRule = 2071;
   optional Identifier FloatingDateGenerationRule = 2072;
   optional Identifier FloatingDateRollConvention = 2073;
   optional Identifier SettlementMethod = 2074;
   optional Identifier FloatingStubType = 2075;
   repeated AllocationBase Allocations = 2076;
   optional string BuySellFlag = 2077;
   optional Identifier ClearingHouse = 2078;
   optional string ExecutionPlatformClearingHouseAlias = 2079;
   optional int32 ClearingHouseId = 2080;
   optional string ClonedContract = 2081;
   optional string ContractSubType = 2082;
   optional ContractSubType ContractSubTypeDetails = 2083;
   optional string AgreementExternalAlias = 2084;
   optional string ExecutionPlatformCounterpartyAlias = 2085;
   optional Identifier ExecutionPlatform = 2086;
   optional bcl.DateTime EndDate = 2087;
   optional Identifier PriceCurrency = 2088;
   optional int32 PriceCurrencyId = 2089;
   optional string SourceContract = 2090;
   optional bcl.DateTime StartDate = 2091;
   optional bcl.Decimal PointValue = 2092;
   optional string TT2Code = 2093;
   optional string SubCategoryAlias = 2094;
   optional int32 Id = 2095;
   optional string ObjectIdAlias = 2096;
   optional Identifier Counterparty = 2097;
   optional BusinessEntity CounterpartyDetails = 2098;
   optional string ShortName = 2099;
}
message EquityOptionBase {
   optional Identifier EquityInstrument = 2101;
   optional bcl.Decimal StrikeRate = 2102;
   optional bcl.Decimal StrikePrice = 2103;
   optional bcl.DateTime StrikeDate = 2104;
   optional string PutCallFlag = 2105;
   optional bcl.DateTime ExpirySettlementDate = 2106;
   optional Identifier HolidayCalendar = 2107;
   optional Identifier OptionStyle = 2108;
   optional Identifier SettlementMethod = 2109;
   optional Identifier SettlementStyle = 2110;
   repeated AllocationBase Allocations = 2111;
   optional string BuySellFlag = 2112;
   optional Identifier ClearingHouse = 2113;
   optional string ExecutionPlatformClearingHouseAlias = 2114;
   optional int32 ClearingHouseId = 2115;
   optional string ClonedContract = 2116;
   optional string ContractSubType = 2117;
   optional ContractSubType ContractSubTypeDetails = 2118;
   optional string AgreementExternalAlias = 2119;
   optional string ExecutionPlatformCounterpartyAlias = 2120;
   optional Identifier ExecutionPlatform = 2121;
   optional bcl.DateTime EndDate = 2122;
   optional Identifier PriceCurrency = 2123;
   optional int32 PriceCurrencyId = 2124;
   optional string SourceContract = 2125;
   optional bcl.DateTime StartDate = 2126;
   optional bcl.Decimal PointValue = 2127;
   optional string TT2Code = 2128;
   optional string SubCategoryAlias = 2129;
   optional int32 Id = 2130;
   optional string ObjectIdAlias = 2131;
   optional Identifier Counterparty = 2132;
   optional BusinessEntity CounterpartyDetails = 2133;
   optional string ShortName = 2134;
   // the following represent sub-types; at most 1 should have a value
   optional EquityOptionNotional EquityOptionNotional = 2135;
   optional EquityOptionQuantity EquityOptionQuantity = 2172;
}
message EquityOptionNotional {
   optional bcl.Decimal SpotPrice = 2136;
   optional int32 RoundingPrecisionCount = 2137;
   optional Identifier EquityInstrument = 2138;
   optional bcl.Decimal StrikeRate = 2139;
   optional bcl.Decimal StrikePrice = 2140;
   optional bcl.DateTime StrikeDate = 2141;
   optional string PutCallFlag = 2142;
   optional bcl.DateTime ExpirySettlementDate = 2143;
   optional Identifier HolidayCalendar = 2144;
   optional Identifier OptionStyle = 2145;
   optional Identifier SettlementMethod = 2146;
   optional Identifier SettlementStyle = 2147;
   repeated AllocationBase Allocations = 2148;
   optional string BuySellFlag = 2149;
   optional Identifier ClearingHouse = 2150;
   optional string ExecutionPlatformClearingHouseAlias = 2151;
   optional int32 ClearingHouseId = 2152;
   optional string ClonedContract = 2153;
   optional string ContractSubType = 2154;
   optional ContractSubType ContractSubTypeDetails = 2155;
   optional string AgreementExternalAlias = 2156;
   optional string ExecutionPlatformCounterpartyAlias = 2157;
   optional Identifier ExecutionPlatform = 2158;
   optional bcl.DateTime EndDate = 2159;
   optional Identifier PriceCurrency = 2160;
   optional int32 PriceCurrencyId = 2161;
   optional string SourceContract = 2162;
   optional bcl.DateTime StartDate = 2163;
   optional bcl.Decimal PointValue = 2164;
   optional string TT2Code = 2165;
   optional string SubCategoryAlias = 2166;
   optional int32 Id = 2167;
   optional string ObjectIdAlias = 2168;
   optional Identifier Counterparty = 2169;
   optional BusinessEntity CounterpartyDetails = 2170;
   optional string ShortName = 2171;
}
message EquityOptionQuantity {
   optional Identifier EquityInstrument = 2173;
   optional bcl.Decimal StrikeRate = 2174;
   optional bcl.Decimal StrikePrice = 2175;
   optional bcl.DateTime StrikeDate = 2176;
   optional string PutCallFlag = 2177;
   optional bcl.DateTime ExpirySettlementDate = 2178;
   optional Identifier HolidayCalendar = 2179;
   optional Identifier OptionStyle = 2180;
   optional Identifier SettlementMethod = 2181;
   optional Identifier SettlementStyle = 2182;
   repeated AllocationBase Allocations = 2183;
   optional string BuySellFlag = 2184;
   optional Identifier ClearingHouse = 2185;
   optional string ExecutionPlatformClearingHouseAlias = 2186;
   optional int32 ClearingHouseId = 2187;
   optional string ClonedContract = 2188;
   optional string ContractSubType = 2189;
   optional ContractSubType ContractSubTypeDetails = 2190;
   optional string AgreementExternalAlias = 2191;
   optional string ExecutionPlatformCounterpartyAlias = 2192;
   optional Identifier ExecutionPlatform = 2193;
   optional bcl.DateTime EndDate = 2194;
   optional Identifier PriceCurrency = 2195;
   optional int32 PriceCurrencyId = 2196;
   optional string SourceContract = 2197;
   optional bcl.DateTime StartDate = 2198;
   optional bcl.Decimal PointValue = 2199;
   optional string TT2Code = 2200;
   optional string SubCategoryAlias = 2201;
   optional int32 Id = 2202;
   optional string ObjectIdAlias = 2203;
   optional Identifier Counterparty = 2204;
   optional BusinessEntity CounterpartyDetails = 2205;
   optional string ShortName = 2206;
}
message EquitySwap {
   optional Identifier EquityInstrument = 2208;
   optional string EquityPayRecFlag = 2209;
   optional string FloatingPayRecFlag = 2210;
   optional bcl.Decimal FloatingSpreadRate = 2211;
   optional bcl.Decimal StrikePrice = 2212;
   optional bcl.Decimal GrossPrice = 2213;
   optional bcl.Decimal CommissionRate = 2214;
   optional Identifier EquityCurrency = 2215;
   optional int32 EquityCurrencyId = 2216;
   optional Identifier EquityResetPattern = 2217;
   optional int32 EquityResetPatternId = 2218;
   optional Identifier EquityHolidayCalendar = 2219;
   optional Identifier EquityDayCountBasis = 2220;
   optional Identifier EquityBusinessDayRule = 2221;
   optional Identifier EquityDateGenerationRule = 2222;
   optional Identifier EquityDateRollConvention = 2223;
   optional Identifier FloatingInterbankInterestRate = 2224;
   optional Identifier FloatingCurrency = 2225;
   optional int32 FloatingCurrencyId = 2226;
   optional Identifier FloatingResetPattern = 2227;
   optional int32 FloatingResetPatternId = 2228;
   optional Identifier FloatingHolidayCalendar = 2229;
   optional Identifier FloatingDayCountBasis = 2230;
   optional Identifier FloatingBusinessDayRule = 2231;
   optional Identifier FloatingDateGenerationRule = 2232;
   optional Identifier FloatingDateRollConvention = 2233;
   optional Identifier SettlementMethod = 2234;
   optional Identifier FloatingStubType = 2235;
   repeated AllocationBase Allocations = 2236;
   optional string BuySellFlag = 2237;
   optional Identifier ClearingHouse = 2238;
   optional string ExecutionPlatformClearingHouseAlias = 2239;
   optional int32 ClearingHouseId = 2240;
   optional string ClonedContract = 2241;
   optional string ContractSubType = 2242;
   optional ContractSubType ContractSubTypeDetails = 2243;
   optional string AgreementExternalAlias = 2244;
   optional string ExecutionPlatformCounterpartyAlias = 2245;
   optional Identifier ExecutionPlatform = 2246;
   optional bcl.DateTime EndDate = 2247;
   optional Identifier PriceCurrency = 2248;
   optional int32 PriceCurrencyId = 2249;
   optional string SourceContract = 2250;
   optional bcl.DateTime StartDate = 2251;
   optional bcl.Decimal PointValue = 2252;
   optional string TT2Code = 2253;
   optional string SubCategoryAlias = 2254;
   optional int32 Id = 2255;
   optional string ObjectIdAlias = 2256;
   optional Identifier Counterparty = 2257;
   optional BusinessEntity CounterpartyDetails = 2258;
   optional string ShortName = 2259;
}
message EquitySwapBase {
   optional string EquityPayRecFlag = 2261;
   optional string FloatingPayRecFlag = 2262;
   optional bcl.Decimal FloatingSpreadRate = 2263;
   optional bcl.Decimal StrikePrice = 2264;
   optional bcl.Decimal GrossPrice = 2265;
   optional bcl.Decimal CommissionRate = 2266;
   optional Identifier EquityCurrency = 2267;
   optional int32 EquityCurrencyId = 2268;
   optional Identifier EquityResetPattern = 2269;
   optional int32 EquityResetPatternId = 2270;
   optional Identifier EquityHolidayCalendar = 2271;
   optional Identifier EquityDayCountBasis = 2272;
   optional Identifier EquityBusinessDayRule = 2273;
   optional Identifier EquityDateGenerationRule = 2274;
   optional Identifier EquityDateRollConvention = 2275;
   optional Identifier FloatingInterbankInterestRate = 2276;
   optional Identifier FloatingCurrency = 2277;
   optional int32 FloatingCurrencyId = 2278;
   optional Identifier FloatingResetPattern = 2279;
   optional int32 FloatingResetPatternId = 2280;
   optional Identifier FloatingHolidayCalendar = 2281;
   optional Identifier FloatingDayCountBasis = 2282;
   optional Identifier FloatingBusinessDayRule = 2283;
   optional Identifier FloatingDateGenerationRule = 2284;
   optional Identifier FloatingDateRollConvention = 2285;
   optional Identifier SettlementMethod = 2286;
   optional Identifier FloatingStubType = 2287;
   repeated AllocationBase Allocations = 2288;
   optional string BuySellFlag = 2289;
   optional Identifier ClearingHouse = 2290;
   optional string ExecutionPlatformClearingHouseAlias = 2291;
   optional int32 ClearingHouseId = 2292;
   optional string ClonedContract = 2293;
   optional string ContractSubType = 2294;
   optional ContractSubType ContractSubTypeDetails = 2295;
   optional string AgreementExternalAlias = 2296;
   optional string ExecutionPlatformCounterpartyAlias = 2297;
   optional Identifier ExecutionPlatform = 2298;
   optional bcl.DateTime EndDate = 2299;
   optional Identifier PriceCurrency = 2300;
   optional int32 PriceCurrencyId = 2301;
   optional string SourceContract = 2302;
   optional bcl.DateTime StartDate = 2303;
   optional bcl.Decimal PointValue = 2304;
   optional string TT2Code = 2305;
   optional string SubCategoryAlias = 2306;
   optional int32 Id = 2307;
   optional string ObjectIdAlias = 2308;
   optional Identifier Counterparty = 2309;
   optional BusinessEntity CounterpartyDetails = 2310;
   optional string ShortName = 2311;
   // the following represent sub-types; at most 1 should have a value
   optional ContractForDifference ContractForDifference = 1192;
   optional EquityIndexSwapBase EquityIndexSwapBase = 1765;
   optional EquityIndexTotalReturnSwapBase EquityIndexTotalReturnSwapBase = 1925;
   optional EquitySwap EquitySwap = 2207;
}
message ExecutionBase {
   optional int32 Id = 5619;
   optional string ObjectIdAlias = 5620;
   optional bcl.DateTime TradeDate = 5621;
   optional bcl.DateTime TradeDateTime = 5622;
   optional bcl.DateTime UnadjustedTradeDate = 5623;
   optional bcl.DateTime SettlementDate = 5624;
   optional int32 SettlementDelay = 5625;
   optional bcl.Decimal TotalConsiderationAmount = 5626;
   optional string CreatorUser = 5627;
   optional User CreatorUserDetails = 5628;
   optional string ExecutorUser = 5629;
   optional User ExecutorUserDetails = 5630;
   optional string ExecutorExecutionPlatformUserName = 5631;
   optional string NotesText = 5632;
   optional string Description = 5633;
   optional int32 OrderId = 5634;
   optional string ExecutionPlatformIdAlias = 5635;
   optional Identifier ExecutionPlatformStatus = 5636;
   optional bool SaveDraft = 5637;
   optional MessageItemBase Order = 5638;
   optional bool IsAmendment = 5639;
   optional bcl.DateTime CreatedDateTime = 5640;
   optional string SourceExternalSystem = 5641;
   // the following represent sub-types; at most 1 should have a value
   optional ExecutionCancel ExecutionCancel = 5642;
   optional ExecutionNew ExecutionNew = 5667;
}
message ExecutionCancel {
   optional bcl.NetObjectProxy Contract = 5643; // reference-tracked ContractBase
   optional int32 Id = 5644;
   optional string ObjectIdAlias = 5645;
   optional bcl.DateTime TradeDate = 5646;
   optional bcl.DateTime TradeDateTime = 5647;
   optional bcl.DateTime UnadjustedTradeDate = 5648;
   optional bcl.DateTime SettlementDate = 5649;
   optional int32 SettlementDelay = 5650;
   optional bcl.Decimal TotalConsiderationAmount = 5651;
   optional string CreatorUser = 5652;
   optional User CreatorUserDetails = 5653;
   optional string ExecutorUser = 5654;
   optional User ExecutorUserDetails = 5655;
   optional string ExecutorExecutionPlatformUserName = 5656;
   optional string NotesText = 5657;
   optional string Description = 5658;
   optional int32 OrderId = 5659;
   optional string ExecutionPlatformIdAlias = 5660;
   optional Identifier ExecutionPlatformStatus = 5661;
   optional bool SaveDraft = 5662;
   optional MessageItemBase Order = 5663;
   optional bool IsAmendment = 5664;
   optional bcl.DateTime CreatedDateTime = 5665;
   optional string SourceExternalSystem = 5666;
}
message ExecutionNew {
   optional bcl.NetObjectProxy ContractData = 5668; // reference-tracked ContractBase
   optional bool Resize = 5669;
   optional int32 Id = 5670;
   optional string ObjectIdAlias = 5671;
   optional bcl.DateTime TradeDate = 5672;
   optional bcl.DateTime TradeDateTime = 5673;
   optional bcl.DateTime UnadjustedTradeDate = 5674;
   optional bcl.DateTime SettlementDate = 5675;
   optional int32 SettlementDelay = 5676;
   optional bcl.Decimal TotalConsiderationAmount = 5677;
   optional string CreatorUser = 5678;
   optional User CreatorUserDetails = 5679;
   optional string ExecutorUser = 5680;
   optional User ExecutorUserDetails = 5681;
   optional string ExecutorExecutionPlatformUserName = 5682;
   optional string NotesText = 5683;
   optional string Description = 5684;
   optional int32 OrderId = 5685;
   optional string ExecutionPlatformIdAlias = 5686;
   optional Identifier ExecutionPlatformStatus = 5687;
   optional bool SaveDraft = 5688;
   optional MessageItemBase Order = 5689;
   optional bool IsAmendment = 5690;
   optional bcl.DateTime CreatedDateTime = 5691;
   optional string SourceExternalSystem = 5692;
}
message FXOption {
   optional bcl.Decimal StrikeRate = 2859;
   optional CurrencyOptionExpiryOverride DrivingCurrencyOptionExpiryOverride = 2860;
   optional CurrencyOptionExpiryOverride OpposingCurrencyOptionExpiryOverride = 2861;
   optional string PutCallFlag = 2862;
   optional bcl.DateTime ExpirySettlementDate = 2863;
   optional Identifier DrivingCurrency = 2864;
   optional Identifier OpposingCurrency = 2865;
   optional Identifier HolidayCalendar = 2866;
   optional Identifier OptionStyle = 2867;
   optional Identifier SettlementMethod = 2868;
   repeated AllocationBase Allocations = 2869;
   optional string BuySellFlag = 2870;
   optional Identifier ClearingHouse = 2871;
   optional string ExecutionPlatformClearingHouseAlias = 2872;
   optional int32 ClearingHouseId = 2873;
   optional string ClonedContract = 2874;
   optional string ContractSubType = 2875;
   optional ContractSubType ContractSubTypeDetails = 2876;
   optional string AgreementExternalAlias = 2877;
   optional string ExecutionPlatformCounterpartyAlias = 2878;
   optional Identifier ExecutionPlatform = 2879;
   optional bcl.DateTime EndDate = 2880;
   optional Identifier PriceCurrency = 2881;
   optional int32 PriceCurrencyId = 2882;
   optional string SourceContract = 2883;
   optional bcl.DateTime StartDate = 2884;
   optional bcl.Decimal PointValue = 2885;
   optional string TT2Code = 2886;
   optional string SubCategoryAlias = 2887;
   optional int32 Id = 2888;
   optional string ObjectIdAlias = 2889;
   optional Identifier Counterparty = 2890;
   optional BusinessEntity CounterpartyDetails = 2891;
   optional string ShortName = 2892;
}
message FXOptionBarrierBase {
   optional bcl.DateTime WindowStartDate = 2894;
   optional bcl.DateTime WindowEndDate = 2895;
   optional Identifier BarrierType = 2896;
   optional Identifier BarrierMonitoringMethod = 2897;
   optional CurrencyOptionExpiryOverride DrivingCurrencyOptionExpiryOverride = 2898;
   optional CurrencyOptionExpiryOverride OpposingCurrencyOptionExpiryOverride = 2899;
   optional string PutCallFlag = 2900;
   optional bcl.DateTime ExpirySettlementDate = 2901;
   optional Identifier DrivingCurrency = 2902;
   optional Identifier OpposingCurrency = 2903;
   optional Identifier HolidayCalendar = 2904;
   optional Identifier OptionStyle = 2905;
   optional Identifier SettlementMethod = 2906;
   repeated AllocationBase Allocations = 2907;
   optional string BuySellFlag = 2908;
   optional Identifier ClearingHouse = 2909;
   optional string ExecutionPlatformClearingHouseAlias = 2910;
   optional int32 ClearingHouseId = 2911;
   optional string ClonedContract = 2912;
   optional string ContractSubType = 2913;
   optional ContractSubType ContractSubTypeDetails = 2914;
   optional string AgreementExternalAlias = 2915;
   optional string ExecutionPlatformCounterpartyAlias = 2916;
   optional Identifier ExecutionPlatform = 2917;
   optional bcl.DateTime EndDate = 2918;
   optional Identifier PriceCurrency = 2919;
   optional int32 PriceCurrencyId = 2920;
   optional string SourceContract = 2921;
   optional bcl.DateTime StartDate = 2922;
   optional bcl.Decimal PointValue = 2923;
   optional string TT2Code = 2924;
   optional string SubCategoryAlias = 2925;
   optional int32 Id = 2926;
   optional string ObjectIdAlias = 2927;
   optional Identifier Counterparty = 2928;
   optional BusinessEntity CounterpartyDetails = 2929;
   optional string ShortName = 2930;
   // the following represent sub-types; at most 1 should have a value
   optional FXOptionDoubleBarrierBase FXOptionDoubleBarrierBase = 3006;
   optional FXOptionSingleBarrierBase FXOptionSingleBarrierBase = 3128;
}
message FXOptionBase {
   optional CurrencyOptionExpiryOverride DrivingCurrencyOptionExpiryOverride = 2932;
   optional CurrencyOptionExpiryOverride OpposingCurrencyOptionExpiryOverride = 2933;
   optional string PutCallFlag = 2934;
   optional bcl.DateTime ExpirySettlementDate = 2935;
   optional Identifier DrivingCurrency = 2936;
   optional Identifier OpposingCurrency = 2937;
   optional Identifier HolidayCalendar = 2938;
   optional Identifier OptionStyle = 2939;
   optional Identifier SettlementMethod = 2940;
   repeated AllocationBase Allocations = 2941;
   optional string BuySellFlag = 2942;
   optional Identifier ClearingHouse = 2943;
   optional string ExecutionPlatformClearingHouseAlias = 2944;
   optional int32 ClearingHouseId = 2945;
   optional string ClonedContract = 2946;
   optional string ContractSubType = 2947;
   optional ContractSubType ContractSubTypeDetails = 2948;
   optional string AgreementExternalAlias = 2949;
   optional string ExecutionPlatformCounterpartyAlias = 2950;
   optional Identifier ExecutionPlatform = 2951;
   optional bcl.DateTime EndDate = 2952;
   optional Identifier PriceCurrency = 2953;
   optional int32 PriceCurrencyId = 2954;
   optional string SourceContract = 2955;
   optional bcl.DateTime StartDate = 2956;
   optional bcl.Decimal PointValue = 2957;
   optional string TT2Code = 2958;
   optional string SubCategoryAlias = 2959;
   optional int32 Id = 2960;
   optional string ObjectIdAlias = 2961;
   optional Identifier Counterparty = 2962;
   optional BusinessEntity CounterpartyDetails = 2963;
   optional string ShortName = 2964;
   // the following represent sub-types; at most 1 should have a value
   optional FXOption FXOption = 2858;
   optional FXOptionBarrierBase FXOptionBarrierBase = 2893;
}
message FXOptionDoubleBarrier {
   optional bcl.Decimal StrikeRate = 2966;
   optional bcl.Decimal BarrierLevelLowerRate = 2967;
   optional bcl.Decimal BarrierLevelUpperRate = 2968;
   optional bcl.DateTime WindowStartDate = 2969;
   optional bcl.DateTime WindowEndDate = 2970;
   optional Identifier BarrierType = 2971;
   optional Identifier BarrierMonitoringMethod = 2972;
   optional CurrencyOptionExpiryOverride DrivingCurrencyOptionExpiryOverride = 2973;
   optional CurrencyOptionExpiryOverride OpposingCurrencyOptionExpiryOverride = 2974;
   optional string PutCallFlag = 2975;
   optional bcl.DateTime ExpirySettlementDate = 2976;
   optional Identifier DrivingCurrency = 2977;
   optional Identifier OpposingCurrency = 2978;
   optional Identifier HolidayCalendar = 2979;
   optional Identifier OptionStyle = 2980;
   optional Identifier SettlementMethod = 2981;
   repeated AllocationBase Allocations = 2982;
   optional string BuySellFlag = 2983;
   optional Identifier ClearingHouse = 2984;
   optional string ExecutionPlatformClearingHouseAlias = 2985;
   optional int32 ClearingHouseId = 2986;
   optional string ClonedContract = 2987;
   optional string ContractSubType = 2988;
   optional ContractSubType ContractSubTypeDetails = 2989;
   optional string AgreementExternalAlias = 2990;
   optional string ExecutionPlatformCounterpartyAlias = 2991;
   optional Identifier ExecutionPlatform = 2992;
   optional bcl.DateTime EndDate = 2993;
   optional Identifier PriceCurrency = 2994;
   optional int32 PriceCurrencyId = 2995;
   optional string SourceContract = 2996;
   optional bcl.DateTime StartDate = 2997;
   optional bcl.Decimal PointValue = 2998;
   optional string TT2Code = 2999;
   optional string SubCategoryAlias = 3000;
   optional int32 Id = 3001;
   optional string ObjectIdAlias = 3002;
   optional Identifier Counterparty = 3003;
   optional BusinessEntity CounterpartyDetails = 3004;
   optional string ShortName = 3005;
}
message FXOptionDoubleBarrierBase {
   optional bcl.Decimal BarrierLevelLowerRate = 3007;
   optional bcl.Decimal BarrierLevelUpperRate = 3008;
   optional bcl.DateTime WindowStartDate = 3009;
   optional bcl.DateTime WindowEndDate = 3010;
   optional Identifier BarrierType = 3011;
   optional Identifier BarrierMonitoringMethod = 3012;
   optional CurrencyOptionExpiryOverride DrivingCurrencyOptionExpiryOverride = 3013;
   optional CurrencyOptionExpiryOverride OpposingCurrencyOptionExpiryOverride = 3014;
   optional string PutCallFlag = 3015;
   optional bcl.DateTime ExpirySettlementDate = 3016;
   optional Identifier DrivingCurrency = 3017;
   optional Identifier OpposingCurrency = 3018;
   optional Identifier HolidayCalendar = 3019;
   optional Identifier OptionStyle = 3020;
   optional Identifier SettlementMethod = 3021;
   repeated AllocationBase Allocations = 3022;
   optional string BuySellFlag = 3023;
   optional Identifier ClearingHouse = 3024;
   optional string ExecutionPlatformClearingHouseAlias = 3025;
   optional int32 ClearingHouseId = 3026;
   optional string ClonedContract = 3027;
   optional string ContractSubType = 3028;
   optional ContractSubType ContractSubTypeDetails = 3029;
   optional string AgreementExternalAlias = 3030;
   optional string ExecutionPlatformCounterpartyAlias = 3031;
   optional Identifier ExecutionPlatform = 3032;
   optional bcl.DateTime EndDate = 3033;
   optional Identifier PriceCurrency = 3034;
   optional int32 PriceCurrencyId = 3035;
   optional string SourceContract = 3036;
   optional bcl.DateTime StartDate = 3037;
   optional bcl.Decimal PointValue = 3038;
   optional string TT2Code = 3039;
   optional string SubCategoryAlias = 3040;
   optional int32 Id = 3041;
   optional string ObjectIdAlias = 3042;
   optional Identifier Counterparty = 3043;
   optional BusinessEntity CounterpartyDetails = 3044;
   optional string ShortName = 3045;
   // the following represent sub-types; at most 1 should have a value
   optional FXOptionDoubleBarrier FXOptionDoubleBarrier = 2965;
   optional FXOptionDoubleBarrierDigital FXOptionDoubleBarrierDigital = 3046;
}
message FXOptionDoubleBarrierDigital {
   optional bcl.Decimal BarrierPayoffAmount = 3047;
   optional bcl.Decimal BarrierLevelLowerRate = 3048;
   optional bcl.Decimal BarrierLevelUpperRate = 3049;
   optional bcl.DateTime WindowStartDate = 3050;
   optional bcl.DateTime WindowEndDate = 3051;
   optional Identifier BarrierType = 3052;
   optional Identifier BarrierMonitoringMethod = 3053;
   optional CurrencyOptionExpiryOverride DrivingCurrencyOptionExpiryOverride = 3054;
   optional CurrencyOptionExpiryOverride OpposingCurrencyOptionExpiryOverride = 3055;
   optional string PutCallFlag = 3056;
   optional bcl.DateTime ExpirySettlementDate = 3057;
   optional Identifier DrivingCurrency = 3058;
   optional Identifier OpposingCurrency = 3059;
   optional Identifier HolidayCalendar = 3060;
   optional Identifier OptionStyle = 3061;
   optional Identifier SettlementMethod = 3062;
   repeated AllocationBase Allocations = 3063;
   optional string BuySellFlag = 3064;
   optional Identifier ClearingHouse = 3065;
   optional string ExecutionPlatformClearingHouseAlias = 3066;
   optional int32 ClearingHouseId = 3067;
   optional string ClonedContract = 3068;
   optional string ContractSubType = 3069;
   optional ContractSubType ContractSubTypeDetails = 3070;
   optional string AgreementExternalAlias = 3071;
   optional string ExecutionPlatformCounterpartyAlias = 3072;
   optional Identifier ExecutionPlatform = 3073;
   optional bcl.DateTime EndDate = 3074;
   optional Identifier PriceCurrency = 3075;
   optional int32 PriceCurrencyId = 3076;
   optional string SourceContract = 3077;
   optional bcl.DateTime StartDate = 3078;
   optional bcl.Decimal PointValue = 3079;
   optional string TT2Code = 3080;
   optional string SubCategoryAlias = 3081;
   optional int32 Id = 3082;
   optional string ObjectIdAlias = 3083;
   optional Identifier Counterparty = 3084;
   optional BusinessEntity CounterpartyDetails = 3085;
   optional string ShortName = 3086;
}
message FXOptionSingleBarrier {
   optional bcl.Decimal StrikeRate = 3088;
   optional Identifier BarrierDirection = 3089;
   optional bcl.Decimal BarrierLevelRate = 3090;
   optional bcl.DateTime WindowStartDate = 3091;
   optional bcl.DateTime WindowEndDate = 3092;
   optional Identifier BarrierType = 3093;
   optional Identifier BarrierMonitoringMethod = 3094;
   optional CurrencyOptionExpiryOverride DrivingCurrencyOptionExpiryOverride = 3095;
   optional CurrencyOptionExpiryOverride OpposingCurrencyOptionExpiryOverride = 3096;
   optional string PutCallFlag = 3097;
   optional bcl.DateTime ExpirySettlementDate = 3098;
   optional Identifier DrivingCurrency = 3099;
   optional Identifier OpposingCurrency = 3100;
   optional Identifier HolidayCalendar = 3101;
   optional Identifier OptionStyle = 3102;
   optional Identifier SettlementMethod = 3103;
   repeated AllocationBase Allocations = 3104;
   optional string BuySellFlag = 3105;
   optional Identifier ClearingHouse = 3106;
   optional string ExecutionPlatformClearingHouseAlias = 3107;
   optional int32 ClearingHouseId = 3108;
   optional string ClonedContract = 3109;
   optional string ContractSubType = 3110;
   optional ContractSubType ContractSubTypeDetails = 3111;
   optional string AgreementExternalAlias = 3112;
   optional string ExecutionPlatformCounterpartyAlias = 3113;
   optional Identifier ExecutionPlatform = 3114;
   optional bcl.DateTime EndDate = 3115;
   optional Identifier PriceCurrency = 3116;
   optional int32 PriceCurrencyId = 3117;
   optional string SourceContract = 3118;
   optional bcl.DateTime StartDate = 3119;
   optional bcl.Decimal PointValue = 3120;
   optional string TT2Code = 3121;
   optional string SubCategoryAlias = 3122;
   optional int32 Id = 3123;
   optional string ObjectIdAlias = 3124;
   optional Identifier Counterparty = 3125;
   optional BusinessEntity CounterpartyDetails = 3126;
   optional string ShortName = 3127;
}
message FXOptionSingleBarrierBase {
   optional bcl.Decimal BarrierLevelRate = 3129;
   optional bcl.DateTime WindowStartDate = 3130;
   optional bcl.DateTime WindowEndDate = 3131;
   optional Identifier BarrierType = 3132;
   optional Identifier BarrierMonitoringMethod = 3133;
   optional CurrencyOptionExpiryOverride DrivingCurrencyOptionExpiryOverride = 3134;
   optional CurrencyOptionExpiryOverride OpposingCurrencyOptionExpiryOverride = 3135;
   optional string PutCallFlag = 3136;
   optional bcl.DateTime ExpirySettlementDate = 3137;
   optional Identifier DrivingCurrency = 3138;
   optional Identifier OpposingCurrency = 3139;
   optional Identifier HolidayCalendar = 3140;
   optional Identifier OptionStyle = 3141;
   optional Identifier SettlementMethod = 3142;
   repeated AllocationBase Allocations = 3143;
   optional string BuySellFlag = 3144;
   optional Identifier ClearingHouse = 3145;
   optional string ExecutionPlatformClearingHouseAlias = 3146;
   optional int32 ClearingHouseId = 3147;
   optional string ClonedContract = 3148;
   optional string ContractSubType = 3149;
   optional ContractSubType ContractSubTypeDetails = 3150;
   optional string AgreementExternalAlias = 3151;
   optional string ExecutionPlatformCounterpartyAlias = 3152;
   optional Identifier ExecutionPlatform = 3153;
   optional bcl.DateTime EndDate = 3154;
   optional Identifier PriceCurrency = 3155;
   optional int32 PriceCurrencyId = 3156;
   optional string SourceContract = 3157;
   optional bcl.DateTime StartDate = 3158;
   optional bcl.Decimal PointValue = 3159;
   optional string TT2Code = 3160;
   optional string SubCategoryAlias = 3161;
   optional int32 Id = 3162;
   optional string ObjectIdAlias = 3163;
   optional Identifier Counterparty = 3164;
   optional BusinessEntity CounterpartyDetails = 3165;
   optional string ShortName = 3166;
   // the following represent sub-types; at most 1 should have a value
   optional FXOptionSingleBarrier FXOptionSingleBarrier = 3087;
   optional FXOptionSingleBarrierDigital FXOptionSingleBarrierDigital = 3167;
}
message FXOptionSingleBarrierDigital {
   optional bcl.Decimal BarrierPayoffAmount = 3168;
   optional bcl.Decimal BarrierLevelRate = 3169;
   optional bcl.DateTime WindowStartDate = 3170;
   optional bcl.DateTime WindowEndDate = 3171;
   optional Identifier BarrierType = 3172;
   optional Identifier BarrierMonitoringMethod = 3173;
   optional CurrencyOptionExpiryOverride DrivingCurrencyOptionExpiryOverride = 3174;
   optional CurrencyOptionExpiryOverride OpposingCurrencyOptionExpiryOverride = 3175;
   optional string PutCallFlag = 3176;
   optional bcl.DateTime ExpirySettlementDate = 3177;
   optional Identifier DrivingCurrency = 3178;
   optional Identifier OpposingCurrency = 3179;
   optional Identifier HolidayCalendar = 3180;
   optional Identifier OptionStyle = 3181;
   optional Identifier SettlementMethod = 3182;
   repeated AllocationBase Allocations = 3183;
   optional string BuySellFlag = 3184;
   optional Identifier ClearingHouse = 3185;
   optional string ExecutionPlatformClearingHouseAlias = 3186;
   optional int32 ClearingHouseId = 3187;
   optional string ClonedContract = 3188;
   optional string ContractSubType = 3189;
   optional ContractSubType ContractSubTypeDetails = 3190;
   optional string AgreementExternalAlias = 3191;
   optional string ExecutionPlatformCounterpartyAlias = 3192;
   optional Identifier ExecutionPlatform = 3193;
   optional bcl.DateTime EndDate = 3194;
   optional Identifier PriceCurrency = 3195;
   optional int32 PriceCurrencyId = 3196;
   optional string SourceContract = 3197;
   optional bcl.DateTime StartDate = 3198;
   optional bcl.Decimal PointValue = 3199;
   optional string TT2Code = 3200;
   optional string SubCategoryAlias = 3201;
   optional int32 Id = 3202;
   optional string ObjectIdAlias = 3203;
   optional Identifier Counterparty = 3204;
   optional BusinessEntity CounterpartyDetails = 3205;
   optional string ShortName = 3206;
}
message FixedAssetSwapBase {
   optional bcl.Decimal FinanceFixedCouponRate = 2313;
   optional string FixedIncomePayRecFlag = 2314;
   optional string FinancePayRecFlag = 2315;
   optional Identifier FixedIncomePrincipalType = 2316;
   optional Identifier FixedIncomeCurrency = 2317;
   optional int32 FixedIncomeCurrencyId = 2318;
   optional Identifier FixedIncomeInstrument = 2319;
   optional Identifier FixedIncomeHolidayCalendar = 2320;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 2321;
   optional int32 MaturitySettlementLagDayCount = 2322;
   optional Identifier FinancePrincipalType = 2323;
   optional Identifier FinanceCurrency = 2324;
   optional int32 FinanceCurrencyId = 2325;
   optional Identifier FinanceResetPattern = 2326;
   optional int32 FinanceResetPatternId = 2327;
   optional Identifier FinanceCompoundingStyle = 2328;
   optional int32 FinanceCompoundingStyleId = 2329;
   optional Identifier FinanceHolidayCalendar = 2330;
   optional Identifier FinanceDayCountBasis = 2331;
   optional Identifier FinanceBusinessDayRule = 2332;
   optional Identifier FinanceDateGenerationRule = 2333;
   optional Identifier FinanceDateRollConvention = 2334;
   repeated AllocationBase Allocations = 2335;
   optional string BuySellFlag = 2336;
   optional Identifier ClearingHouse = 2337;
   optional string ExecutionPlatformClearingHouseAlias = 2338;
   optional int32 ClearingHouseId = 2339;
   optional string ClonedContract = 2340;
   optional string ContractSubType = 2341;
   optional ContractSubType ContractSubTypeDetails = 2342;
   optional string AgreementExternalAlias = 2343;
   optional string ExecutionPlatformCounterpartyAlias = 2344;
   optional Identifier ExecutionPlatform = 2345;
   optional bcl.DateTime EndDate = 2346;
   optional Identifier PriceCurrency = 2347;
   optional int32 PriceCurrencyId = 2348;
   optional string SourceContract = 2349;
   optional bcl.DateTime StartDate = 2350;
   optional bcl.Decimal PointValue = 2351;
   optional string TT2Code = 2352;
   optional string SubCategoryAlias = 2353;
   optional int32 Id = 2354;
   optional string ObjectIdAlias = 2355;
   optional Identifier Counterparty = 2356;
   optional BusinessEntity CounterpartyDetails = 2357;
   optional string ShortName = 2358;
   // the following represent sub-types; at most 1 should have a value
   optional IndexLinkedFixedTotalReturnSwap IndexLinkedFixedTotalReturnSwap = 3293;
   optional NominalFixedTotalReturnSwap NominalFixedTotalReturnSwap = 3914;
}
message FixedOnlyInterestRateSwapBase {
   optional string FixedPayRecFlag = 2360;
   optional bcl.Decimal FixedCouponRate = 2361;
   optional Identifier FixedPrincipalType = 2362;
   optional Identifier FixedCurrency = 2363;
   optional int32 FixedCurrencyId = 2364;
   optional Identifier FixedResetPattern = 2365;
   optional int32 FixedResetPatternId = 2366;
   optional Identifier FixedCompoundingStyle = 2367;
   optional int32 FixedCompoundingStyleId = 2368;
   optional Identifier FixedHolidayCalendar = 2369;
   optional Identifier FixedDayCountBasis = 2370;
   optional Identifier FixedBusinessDayRule = 2371;
   optional Identifier FixedDateGenerationRule = 2372;
   optional Identifier FixedDateRollConvention = 2373;
   optional string PricingStyleAlias = 2374;
   optional string ForwardYieldCurve = 2375;
   repeated AllocationBase Allocations = 2376;
   optional string BuySellFlag = 2377;
   optional Identifier ClearingHouse = 2378;
   optional string ExecutionPlatformClearingHouseAlias = 2379;
   optional int32 ClearingHouseId = 2380;
   optional string ClonedContract = 2381;
   optional string ContractSubType = 2382;
   optional ContractSubType ContractSubTypeDetails = 2383;
   optional string AgreementExternalAlias = 2384;
   optional string ExecutionPlatformCounterpartyAlias = 2385;
   optional Identifier ExecutionPlatform = 2386;
   optional bcl.DateTime EndDate = 2387;
   optional Identifier PriceCurrency = 2388;
   optional int32 PriceCurrencyId = 2389;
   optional string SourceContract = 2390;
   optional bcl.DateTime StartDate = 2391;
   optional bcl.Decimal PointValue = 2392;
   optional string TT2Code = 2393;
   optional string SubCategoryAlias = 2394;
   optional int32 Id = 2395;
   optional string ObjectIdAlias = 2396;
   optional Identifier Counterparty = 2397;
   optional BusinessEntity CounterpartyDetails = 2398;
   optional string ShortName = 2399;
   // the following represent sub-types; at most 1 should have a value
   optional CashBackFixedInterestRateSwap CashBackFixedInterestRateSwap = 527;
}
message FlexIndexOptionBase {
   optional Identifier Index = 2401;
   optional bcl.Decimal StrikeRate = 2402;
   optional bcl.Decimal StrikePrice = 2403;
   optional bcl.DateTime StrikeDate = 2404;
   optional bcl.Decimal IndexPrice = 2405;
   optional string PutCallFlag = 2406;
   optional bcl.DateTime ExpirySettlementDate = 2407;
   optional Identifier HolidayCalendar = 2408;
   optional Identifier OptionStyle = 2409;
   optional Identifier SettlementMethod = 2410;
   optional Identifier SettlementStyle = 2411;
   repeated AllocationBase Allocations = 2412;
   optional string BuySellFlag = 2413;
   optional Identifier ClearingHouse = 2414;
   optional string ExecutionPlatformClearingHouseAlias = 2415;
   optional int32 ClearingHouseId = 2416;
   optional string ClonedContract = 2417;
   optional string ContractSubType = 2418;
   optional ContractSubType ContractSubTypeDetails = 2419;
   optional string AgreementExternalAlias = 2420;
   optional string ExecutionPlatformCounterpartyAlias = 2421;
   optional Identifier ExecutionPlatform = 2422;
   optional bcl.DateTime EndDate = 2423;
   optional Identifier PriceCurrency = 2424;
   optional int32 PriceCurrencyId = 2425;
   optional string SourceContract = 2426;
   optional bcl.DateTime StartDate = 2427;
   optional bcl.Decimal PointValue = 2428;
   optional string TT2Code = 2429;
   optional string SubCategoryAlias = 2430;
   optional int32 Id = 2431;
   optional string ObjectIdAlias = 2432;
   optional Identifier Counterparty = 2433;
   optional BusinessEntity CounterpartyDetails = 2434;
   optional string ShortName = 2435;
   // the following represent sub-types; at most 1 should have a value
   optional FlexIndexOptionNotional FlexIndexOptionNotional = 2436;
   optional FlexIndexOptionQuantity FlexIndexOptionQuantity = 2473;
}
message FlexIndexOptionNotional {
   optional int32 RoundingPrecisionCount = 2437;
   optional Identifier Index = 2438;
   optional bcl.Decimal StrikeRate = 2439;
   optional bcl.Decimal StrikePrice = 2440;
   optional bcl.DateTime StrikeDate = 2441;
   optional bcl.Decimal IndexPrice = 2442;
   optional string PutCallFlag = 2443;
   optional bcl.DateTime ExpirySettlementDate = 2444;
   optional Identifier HolidayCalendar = 2445;
   optional Identifier OptionStyle = 2446;
   optional Identifier SettlementMethod = 2447;
   optional Identifier SettlementStyle = 2448;
   repeated AllocationBase Allocations = 2449;
   optional string BuySellFlag = 2450;
   optional Identifier ClearingHouse = 2451;
   optional string ExecutionPlatformClearingHouseAlias = 2452;
   optional int32 ClearingHouseId = 2453;
   optional string ClonedContract = 2454;
   optional string ContractSubType = 2455;
   optional ContractSubType ContractSubTypeDetails = 2456;
   optional string AgreementExternalAlias = 2457;
   optional string ExecutionPlatformCounterpartyAlias = 2458;
   optional Identifier ExecutionPlatform = 2459;
   optional bcl.DateTime EndDate = 2460;
   optional Identifier PriceCurrency = 2461;
   optional int32 PriceCurrencyId = 2462;
   optional string SourceContract = 2463;
   optional bcl.DateTime StartDate = 2464;
   optional bcl.Decimal PointValue = 2465;
   optional string TT2Code = 2466;
   optional string SubCategoryAlias = 2467;
   optional int32 Id = 2468;
   optional string ObjectIdAlias = 2469;
   optional Identifier Counterparty = 2470;
   optional BusinessEntity CounterpartyDetails = 2471;
   optional string ShortName = 2472;
}
message FlexIndexOptionQuantity {
   optional Identifier Index = 2474;
   optional bcl.Decimal StrikeRate = 2475;
   optional bcl.Decimal StrikePrice = 2476;
   optional bcl.DateTime StrikeDate = 2477;
   optional bcl.Decimal IndexPrice = 2478;
   optional string PutCallFlag = 2479;
   optional bcl.DateTime ExpirySettlementDate = 2480;
   optional Identifier HolidayCalendar = 2481;
   optional Identifier OptionStyle = 2482;
   optional Identifier SettlementMethod = 2483;
   optional Identifier SettlementStyle = 2484;
   repeated AllocationBase Allocations = 2485;
   optional string BuySellFlag = 2486;
   optional Identifier ClearingHouse = 2487;
   optional string ExecutionPlatformClearingHouseAlias = 2488;
   optional int32 ClearingHouseId = 2489;
   optional string ClonedContract = 2490;
   optional string ContractSubType = 2491;
   optional ContractSubType ContractSubTypeDetails = 2492;
   optional string AgreementExternalAlias = 2493;
   optional string ExecutionPlatformCounterpartyAlias = 2494;
   optional Identifier ExecutionPlatform = 2495;
   optional bcl.DateTime EndDate = 2496;
   optional Identifier PriceCurrency = 2497;
   optional int32 PriceCurrencyId = 2498;
   optional string SourceContract = 2499;
   optional bcl.DateTime StartDate = 2500;
   optional bcl.Decimal PointValue = 2501;
   optional string TT2Code = 2502;
   optional string SubCategoryAlias = 2503;
   optional int32 Id = 2504;
   optional string ObjectIdAlias = 2505;
   optional Identifier Counterparty = 2506;
   optional BusinessEntity CounterpartyDetails = 2507;
   optional string ShortName = 2508;
}
message FloatAssetSwapBase {
   optional bcl.Decimal FinanceFloatingSpreadRate = 2510;
   optional bool FinanceFloatingInterpolateFixingRateInd = 2511;
   optional Identifier FinanceFloatingInterbankInterestRate = 2512;
   optional Identifier FinanceFloatingStubType = 2513;
   optional string FixedIncomePayRecFlag = 2514;
   optional string FinancePayRecFlag = 2515;
   optional Identifier FixedIncomePrincipalType = 2516;
   optional Identifier FixedIncomeCurrency = 2517;
   optional int32 FixedIncomeCurrencyId = 2518;
   optional Identifier FixedIncomeInstrument = 2519;
   optional Identifier FixedIncomeHolidayCalendar = 2520;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 2521;
   optional int32 MaturitySettlementLagDayCount = 2522;
   optional Identifier FinancePrincipalType = 2523;
   optional Identifier FinanceCurrency = 2524;
   optional int32 FinanceCurrencyId = 2525;
   optional Identifier FinanceResetPattern = 2526;
   optional int32 FinanceResetPatternId = 2527;
   optional Identifier FinanceCompoundingStyle = 2528;
   optional int32 FinanceCompoundingStyleId = 2529;
   optional Identifier FinanceHolidayCalendar = 2530;
   optional Identifier FinanceDayCountBasis = 2531;
   optional Identifier FinanceBusinessDayRule = 2532;
   optional Identifier FinanceDateGenerationRule = 2533;
   optional Identifier FinanceDateRollConvention = 2534;
   repeated AllocationBase Allocations = 2535;
   optional string BuySellFlag = 2536;
   optional Identifier ClearingHouse = 2537;
   optional string ExecutionPlatformClearingHouseAlias = 2538;
   optional int32 ClearingHouseId = 2539;
   optional string ClonedContract = 2540;
   optional string ContractSubType = 2541;
   optional ContractSubType ContractSubTypeDetails = 2542;
   optional string AgreementExternalAlias = 2543;
   optional string ExecutionPlatformCounterpartyAlias = 2544;
   optional Identifier ExecutionPlatform = 2545;
   optional bcl.DateTime EndDate = 2546;
   optional Identifier PriceCurrency = 2547;
   optional int32 PriceCurrencyId = 2548;
   optional string SourceContract = 2549;
   optional bcl.DateTime StartDate = 2550;
   optional bcl.Decimal PointValue = 2551;
   optional string TT2Code = 2552;
   optional string SubCategoryAlias = 2553;
   optional int32 Id = 2554;
   optional string ObjectIdAlias = 2555;
   optional Identifier Counterparty = 2556;
   optional BusinessEntity CounterpartyDetails = 2557;
   optional string ShortName = 2558;
   // the following represent sub-types; at most 1 should have a value
   optional IndexLinkedFloatTotalReturnSwap IndexLinkedFloatTotalReturnSwap = 3346;
   optional NominalFloatTotalReturnSwap NominalFloatTotalReturnSwap = 3964;
   optional ParParIndexLinkedAssetSwap ParParIndexLinkedAssetSwap = 4083;
   optional ParParNominalAssetSwap ParParNominalAssetSwap = 4133;
   optional ProceedsIndexLinkedAssetSwap ProceedsIndexLinkedAssetSwap = 4183;
   optional ProceedsNominalAssetSwap ProceedsNominalAssetSwap = 4233;
}
message FloatFixedInflationSwapBase {
   optional bcl.Decimal InflationSpreadRate = 2560;
   optional bcl.Decimal FixedCouponRate = 2561;
   optional string FixedPayRecFlag = 2562;
   optional Identifier FixedPrincipalType = 2563;
   optional Identifier FixedCurrency = 2564;
   optional int32 FixedCurrencyId = 2565;
   optional Identifier FixedResetPattern = 2566;
   optional int32 FixedResetPatternId = 2567;
   optional Identifier FixedCompoundingStyle = 2568;
   optional int32 FixedCompoundingStyleId = 2569;
   optional Identifier FixedHolidayCalendar = 2570;
   optional Identifier FixedDayCountBasis = 2571;
   optional Identifier FixedBusinessDayRule = 2572;
   optional Identifier FixedDateGenerationRule = 2573;
   optional Identifier FixedDateRollConvention = 2574;
   optional string InflationPayRecFlag = 2575;
   optional bcl.Decimal InflationBaseIndexValue = 2576;
   optional int32 InflationIndexationLagMonthCount = 2577;
   optional Identifier InflationPrincipalType = 2578;
   optional Identifier InflationPriceIndex = 2579;
   optional Identifier InflationCurrency = 2580;
   optional int32 InflationCurrencyId = 2581;
   optional Identifier InflationResetPattern = 2582;
   optional int32 InflationResetPatternId = 2583;
   optional Identifier InflationCompoundingStyle = 2584;
   optional int32 InflationCompoundingStyleId = 2585;
   optional Identifier InflationHolidayCalendar = 2586;
   optional Identifier InflationDayCountBasis = 2587;
   optional Identifier InflationBusinessDayRule = 2588;
   optional Identifier InflationDateGenerationRule = 2589;
   optional Identifier InflationDateRollConvention = 2590;
   repeated AllocationBase Allocations = 2591;
   optional string BuySellFlag = 2592;
   optional Identifier ClearingHouse = 2593;
   optional string ExecutionPlatformClearingHouseAlias = 2594;
   optional int32 ClearingHouseId = 2595;
   optional string ClonedContract = 2596;
   optional string ContractSubType = 2597;
   optional ContractSubType ContractSubTypeDetails = 2598;
   optional string AgreementExternalAlias = 2599;
   optional string ExecutionPlatformCounterpartyAlias = 2600;
   optional Identifier ExecutionPlatform = 2601;
   optional bcl.DateTime EndDate = 2602;
   optional Identifier PriceCurrency = 2603;
   optional int32 PriceCurrencyId = 2604;
   optional string SourceContract = 2605;
   optional bcl.DateTime StartDate = 2606;
   optional bcl.Decimal PointValue = 2607;
   optional string TT2Code = 2608;
   optional string SubCategoryAlias = 2609;
   optional int32 Id = 2610;
   optional string ObjectIdAlias = 2611;
   optional Identifier Counterparty = 2612;
   optional BusinessEntity CounterpartyDetails = 2613;
   optional string ShortName = 2614;
   // the following represent sub-types; at most 1 should have a value
   optional LimitedPriceIndexSwap LimitedPriceIndexSwap = 3853;
   optional RetailPriceIndexSwap RetailPriceIndexSwap = 4721;
}
message FloatFixedInterestRateSwapBase {
   optional string FloatingPayRecFlag = 2616;
   optional string FixedPayRecFlag = 2617;
   optional bcl.Decimal FloatingSpreadRate = 2618;
   optional bool FloatingInterpolateFixingRateInd = 2619;
   optional bcl.Decimal FixedCouponRate = 2620;
   optional Identifier FloatingPrincipalType = 2621;
   optional Identifier FloatingCurrency = 2622;
   optional int32 FloatingCurrencyId = 2623;
   optional Identifier FloatingResetPattern = 2624;
   optional int32 FloatingResetPatternId = 2625;
   optional Identifier FloatingCompoundingStyle = 2626;
   optional int32 FloatingCompoundingStyleId = 2627;
   optional Identifier FloatingHolidayCalendar = 2628;
   optional Identifier FloatingDayCountBasis = 2629;
   optional Identifier FloatingBusinessDayRule = 2630;
   optional Identifier FloatingDateGenerationRule = 2631;
   optional Identifier FloatingDateRollConvention = 2632;
   optional Identifier FloatingStubType = 2633;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 2634;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 2635;
   optional Identifier FloatingStubStartTenorPoint = 2636;
   optional Identifier FloatingStubEndTenorPoint = 2637;
   optional Identifier FixedPrincipalType = 2638;
   optional Identifier FixedCurrency = 2639;
   optional int32 FixedCurrencyId = 2640;
   optional Identifier FixedResetPattern = 2641;
   optional int32 FixedResetPatternId = 2642;
   optional Identifier FixedCompoundingStyle = 2643;
   optional int32 FixedCompoundingStyleId = 2644;
   optional Identifier FixedHolidayCalendar = 2645;
   optional Identifier FixedDayCountBasis = 2646;
   optional Identifier FixedBusinessDayRule = 2647;
   optional Identifier FixedDateGenerationRule = 2648;
   optional Identifier FixedDateRollConvention = 2649;
   optional Identifier FixedStubType = 2650;
   optional bcl.DateTime FixedStubFirstPeriodEndDate = 2651;
   optional bcl.DateTime FixedStubLastPeriodStartDate = 2652;
   optional BusinessEntity FloatingInterestRate = 2653;
   optional InterestRateBase FloatingInterestRateDetail = 2654;
   optional string PricingStyleAlias = 2655;
   optional string ForwardYieldCurve = 2656;
   repeated AllocationBase Allocations = 2657;
   optional string BuySellFlag = 2658;
   optional Identifier ClearingHouse = 2659;
   optional string ExecutionPlatformClearingHouseAlias = 2660;
   optional int32 ClearingHouseId = 2661;
   optional string ClonedContract = 2662;
   optional string ContractSubType = 2663;
   optional ContractSubType ContractSubTypeDetails = 2664;
   optional string AgreementExternalAlias = 2665;
   optional string ExecutionPlatformCounterpartyAlias = 2666;
   optional Identifier ExecutionPlatform = 2667;
   optional bcl.DateTime EndDate = 2668;
   optional Identifier PriceCurrency = 2669;
   optional int32 PriceCurrencyId = 2670;
   optional string SourceContract = 2671;
   optional bcl.DateTime StartDate = 2672;
   optional bcl.Decimal PointValue = 2673;
   optional string TT2Code = 2674;
   optional string SubCategoryAlias = 2675;
   optional int32 Id = 2676;
   optional string ObjectIdAlias = 2677;
   optional Identifier Counterparty = 2678;
   optional BusinessEntity CounterpartyDetails = 2679;
   optional string ShortName = 2680;
   // the following represent sub-types; at most 1 should have a value
   optional CrossCurrencyFixedFloating CrossCurrencyFixedFloating = 1564;
   optional CrossCurrencyFloatingFixed CrossCurrencyFloatingFixed = 1699;
   optional InterestRateSwap InterestRateSwap = 3759;
   optional OvernightInterestRateSwap OvernightInterestRateSwap = 4017;
   optional VariableNotionalInterestRateSwap VariableNotionalInterestRateSwap = 5354;
   optional ZeroCouponInterestRateSwap ZeroCouponInterestRateSwap = 5452;
}
message FloatFloatInflationSwapBase {
   optional bcl.Decimal RealCouponRate = 2682;
   optional bool FloatingInterpolateFixingRateInd = 2683;
   optional string FloatingPayRecFlag = 2684;
   optional Identifier FloatingPrincipalType = 2685;
   optional Identifier FloatingInterbankInterestRate = 2686;
   optional Identifier FloatingCurrency = 2687;
   optional int32 FloatingCurrencyId = 2688;
   optional Identifier FloatingResetPattern = 2689;
   optional int32 FloatingResetPatternId = 2690;
   optional Identifier FloatingCompoundingStyle = 2691;
   optional int32 FloatingCompoundingStyleId = 2692;
   optional Identifier FloatingHolidayCalendar = 2693;
   optional Identifier FloatingDayCountBasis = 2694;
   optional Identifier FloatingBusinessDayRule = 2695;
   optional Identifier FloatingDateGenerationRule = 2696;
   optional Identifier FloatingDateRollConvention = 2697;
   optional Identifier FloatingStubType = 2698;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 2699;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 2700;
   optional Identifier FloatingStubStartTenorPoint = 2701;
   optional Identifier FloatingStubEndTenorPoint = 2702;
   optional string InflationPayRecFlag = 2703;
   optional bcl.Decimal InflationBaseIndexValue = 2704;
   optional int32 InflationIndexationLagMonthCount = 2705;
   optional Identifier InflationPrincipalType = 2706;
   optional Identifier InflationPriceIndex = 2707;
   optional Identifier InflationCurrency = 2708;
   optional int32 InflationCurrencyId = 2709;
   optional Identifier InflationResetPattern = 2710;
   optional int32 InflationResetPatternId = 2711;
   optional Identifier InflationCompoundingStyle = 2712;
   optional int32 InflationCompoundingStyleId = 2713;
   optional Identifier InflationHolidayCalendar = 2714;
   optional Identifier InflationDayCountBasis = 2715;
   optional Identifier InflationBusinessDayRule = 2716;
   optional Identifier InflationDateGenerationRule = 2717;
   optional Identifier InflationDateRollConvention = 2718;
   repeated AllocationBase Allocations = 2719;
   optional string BuySellFlag = 2720;
   optional Identifier ClearingHouse = 2721;
   optional string ExecutionPlatformClearingHouseAlias = 2722;
   optional int32 ClearingHouseId = 2723;
   optional string ClonedContract = 2724;
   optional string ContractSubType = 2725;
   optional ContractSubType ContractSubTypeDetails = 2726;
   optional string AgreementExternalAlias = 2727;
   optional string ExecutionPlatformCounterpartyAlias = 2728;
   optional Identifier ExecutionPlatform = 2729;
   optional bcl.DateTime EndDate = 2730;
   optional Identifier PriceCurrency = 2731;
   optional int32 PriceCurrencyId = 2732;
   optional string SourceContract = 2733;
   optional bcl.DateTime StartDate = 2734;
   optional bcl.Decimal PointValue = 2735;
   optional string TT2Code = 2736;
   optional string SubCategoryAlias = 2737;
   optional int32 Id = 2738;
   optional string ObjectIdAlias = 2739;
   optional Identifier Counterparty = 2740;
   optional BusinessEntity CounterpartyDetails = 2741;
   optional string ShortName = 2742;
   // the following represent sub-types; at most 1 should have a value
   optional RealRateLPISwap RealRateLPISwap = 4592;
   optional RealRateSwap RealRateSwap = 4659;
}
message FloatFloatInterestRateSwapBase {
   optional Identifier DrivingBusinessDayRule = 2744;
   optional Identifier DrivingCompoundingStyle = 2745;
   optional int32 DrivingCompoundingStyleId = 2746;
   optional Identifier DrivingCurrency = 2747;
   optional int32 DrivingCurrencyId = 2748;
   optional Identifier DrivingDateGenerationRule = 2749;
   optional Identifier DrivingDateRollConvention = 2750;
   optional Identifier DrivingDayCountBasis = 2751;
   optional Identifier DrivingHolidayCalendar = 2752;
   optional bool DrivingInterpolateFixingRateInd = 2753;
   optional string DrivingPayRecFlag = 2754;
   optional Identifier DrivingPrincipalType = 2755;
   optional Identifier DrivingResetPattern = 2756;
   optional int32 DrivingResetPatternId = 2757;
   optional bcl.Decimal DrivingSpreadRate = 2758;
   optional Identifier DrivingStubEndTenorPoint = 2759;
   optional bcl.DateTime DrivingStubFirstPeriodEndDate = 2760;
   optional bcl.DateTime DrivingStubLastPeriodStartDate = 2761;
   optional Identifier DrivingStubStartTenorPoint = 2762;
   optional Identifier DrivingStubType = 2763;
   optional Identifier OpposingBusinessDayRule = 2764;
   optional Identifier OpposingCompoundingStyle = 2765;
   optional int32 OpposingCompoundingStyleId = 2766;
   optional Identifier OpposingCurrency = 2767;
   optional int32 OpposingCurrencyId = 2768;
   optional Identifier OpposingDateGenerationRule = 2769;
   optional Identifier OpposingDateRollConvention = 2770;
   optional Identifier OpposingDayCountBasis = 2771;
   optional Identifier OpposingHolidayCalendar = 2772;
   optional bool OpposingInterpolateFixingRateInd = 2773;
   optional string OpposingPayRecFlag = 2774;
   optional Identifier OpposingPrincipalType = 2775;
   optional Identifier OpposingResetPattern = 2776;
   optional int32 OpposingResetPatternId = 2777;
   optional bcl.Decimal OpposingSpreadRate = 2778;
   optional Identifier OpposingStubEndTenorPoint = 2779;
   optional bcl.DateTime OpposingStubFirstPeriodEndDate = 2780;
   optional bcl.DateTime OpposingStubLastPeriodStartDate = 2781;
   optional Identifier OpposingStubStartTenorPoint = 2782;
   optional Identifier OpposingStubType = 2783;
   optional string PricingStyleAlias = 2784;
   optional string ForwardYieldCurve = 2785;
   repeated AllocationBase Allocations = 2786;
   optional string BuySellFlag = 2787;
   optional Identifier ClearingHouse = 2788;
   optional string ExecutionPlatformClearingHouseAlias = 2789;
   optional int32 ClearingHouseId = 2790;
   optional string ClonedContract = 2791;
   optional string ContractSubType = 2792;
   optional ContractSubType ContractSubTypeDetails = 2793;
   optional string AgreementExternalAlias = 2794;
   optional string ExecutionPlatformCounterpartyAlias = 2795;
   optional Identifier ExecutionPlatform = 2796;
   optional bcl.DateTime EndDate = 2797;
   optional Identifier PriceCurrency = 2798;
   optional int32 PriceCurrencyId = 2799;
   optional string SourceContract = 2800;
   optional bcl.DateTime StartDate = 2801;
   optional bcl.Decimal PointValue = 2802;
   optional string TT2Code = 2803;
   optional string SubCategoryAlias = 2804;
   optional int32 Id = 2805;
   optional string ObjectIdAlias = 2806;
   optional Identifier Counterparty = 2807;
   optional BusinessEntity CounterpartyDetails = 2808;
   optional string ShortName = 2809;
   // the following represent sub-types; at most 1 should have a value
   optional BasisInterestRateSwap BasisInterestRateSwap = 419;
   optional ConstantMaturityInterestRateSwap ConstantMaturityInterestRateSwap = 1093;
   optional CrossCurrencyFloatFloat CrossCurrencyFloatFloat = 1630;
}
message FloatOnlyInterestRateSwapBase {
   optional string FloatingPayRecFlag = 2811;
   optional bcl.Decimal FloatingSpreadRate = 2812;
   optional bool FloatingInterpolateFixingRateInd = 2813;
   optional Identifier FloatingPrincipalType = 2814;
   optional Identifier FloatingInterbankInterestRate = 2815;
   optional Identifier FloatingCurrency = 2816;
   optional int32 FloatingCurrencyId = 2817;
   optional Identifier FloatingResetPattern = 2818;
   optional int32 FloatingResetPatternId = 2819;
   optional Identifier FloatingCompoundingStyle = 2820;
   optional int32 FloatingCompoundingStyleId = 2821;
   optional Identifier FloatingHolidayCalendar = 2822;
   optional Identifier FloatingDayCountBasis = 2823;
   optional Identifier FloatingBusinessDayRule = 2824;
   optional Identifier FloatingDateGenerationRule = 2825;
   optional Identifier FloatingDateRollConvention = 2826;
   optional Identifier FloatingStubEndTenorPoint = 2827;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 2828;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 2829;
   optional Identifier FloatingStubStartTenorPoint = 2830;
   optional Identifier FloatingStubType = 2831;
   optional string PricingStyleAlias = 2832;
   optional string ForwardYieldCurve = 2833;
   repeated AllocationBase Allocations = 2834;
   optional string BuySellFlag = 2835;
   optional Identifier ClearingHouse = 2836;
   optional string ExecutionPlatformClearingHouseAlias = 2837;
   optional int32 ClearingHouseId = 2838;
   optional string ClonedContract = 2839;
   optional string ContractSubType = 2840;
   optional ContractSubType ContractSubTypeDetails = 2841;
   optional string AgreementExternalAlias = 2842;
   optional string ExecutionPlatformCounterpartyAlias = 2843;
   optional Identifier ExecutionPlatform = 2844;
   optional bcl.DateTime EndDate = 2845;
   optional Identifier PriceCurrency = 2846;
   optional int32 PriceCurrencyId = 2847;
   optional string SourceContract = 2848;
   optional bcl.DateTime StartDate = 2849;
   optional bcl.Decimal PointValue = 2850;
   optional string TT2Code = 2851;
   optional string SubCategoryAlias = 2852;
   optional int32 Id = 2853;
   optional string ObjectIdAlias = 2854;
   optional Identifier Counterparty = 2855;
   optional BusinessEntity CounterpartyDetails = 2856;
   optional string ShortName = 2857;
   // the following represent sub-types; at most 1 should have a value
   optional CashBackFloatingInterestRateSwap CashBackFloatingInterestRateSwap = 568;
}
message Identifier {
   optional string Id = 5543;
   optional IdentifierType Type = 5544;
}
enum IdentifierType {
   Id = 0;
   InsightId = 1;
   Sedol = 2;
   Surrogate = 3;
   RedCode = 4;
   Isin = 5;
   BloombergAlias = 6;
   BloombergUniqueId = 7;
   BloombergTicker = 8;
   MarkitRED = 9;
   MarkitTicker = 10;
   MarkitTradeId = 11;
}
message IndexCreditDefaultSwap {
   optional bcl.Decimal IndexInitialCouponRate = 3208;
   optional Identifier CreditIndex = 3209;
   optional CreditIndex CreditIndexDetail = 3210;
   optional string ProtectionBuySellFlag = 3211;
   optional bcl.Decimal CouponRate = 3212;
   optional bcl.Decimal RecoveryRate = 3213;
   optional bcl.DateTime StubFirstPeriodEndDate = 3214;
   optional bool AccruedPaidDefaultInd = 3215;
   optional Identifier Company = 3216;
   optional Identifier DocumentationClause = 3217;
   optional Identifier PayoffPoint = 3218;
   optional Identifier SettlementMethod = 3219;
   optional Identifier ResetPattern = 3220;
   optional Identifier HolidayCalendar = 3221;
   optional Identifier DayCountBasis = 3222;
   optional Identifier BusinessDayRule = 3223;
   optional Identifier DateGenerationRule = 3224;
   optional Identifier DateRollConvention = 3225;
   repeated AllocationBase Allocations = 3226;
   optional string BuySellFlag = 3227;
   optional Identifier ClearingHouse = 3228;
   optional string ExecutionPlatformClearingHouseAlias = 3229;
   optional int32 ClearingHouseId = 3230;
   optional string ClonedContract = 3231;
   optional string ContractSubType = 3232;
   optional ContractSubType ContractSubTypeDetails = 3233;
   optional string AgreementExternalAlias = 3234;
   optional string ExecutionPlatformCounterpartyAlias = 3235;
   optional Identifier ExecutionPlatform = 3236;
   optional bcl.DateTime EndDate = 3237;
   optional Identifier PriceCurrency = 3238;
   optional int32 PriceCurrencyId = 3239;
   optional string SourceContract = 3240;
   optional bcl.DateTime StartDate = 3241;
   optional bcl.Decimal PointValue = 3242;
   optional string TT2Code = 3243;
   optional string SubCategoryAlias = 3244;
   optional int32 Id = 3245;
   optional string ObjectIdAlias = 3246;
   optional Identifier Counterparty = 3247;
   optional BusinessEntity CounterpartyDetails = 3248;
   optional string ShortName = 3249;
   // the following represent sub-types; at most 1 should have a value
   optional IndexPriceTradedCreditDefaultSwap IndexPriceTradedCreditDefaultSwap = 3438;
   optional IndexYieldTradedCreditDefaultSwap IndexYieldTradedCreditDefaultSwap = 3567;
}
message IndexCreditDefaultSwapBase {
   optional bcl.Decimal IndexInitialCouponRate = 3251;
   optional Identifier CreditIndex = 3252;
   optional CreditIndex CreditIndexDetail = 3253;
   optional string ProtectionBuySellFlag = 3254;
   optional bcl.Decimal CouponRate = 3255;
   optional bcl.Decimal RecoveryRate = 3256;
   optional bcl.DateTime StubFirstPeriodEndDate = 3257;
   optional bool AccruedPaidDefaultInd = 3258;
   optional Identifier Company = 3259;
   optional Identifier DocumentationClause = 3260;
   optional Identifier PayoffPoint = 3261;
   optional Identifier SettlementMethod = 3262;
   optional Identifier ResetPattern = 3263;
   optional Identifier HolidayCalendar = 3264;
   optional Identifier DayCountBasis = 3265;
   optional Identifier BusinessDayRule = 3266;
   optional Identifier DateGenerationRule = 3267;
   optional Identifier DateRollConvention = 3268;
   repeated AllocationBase Allocations = 3269;
   optional string BuySellFlag = 3270;
   optional Identifier ClearingHouse = 3271;
   optional string ExecutionPlatformClearingHouseAlias = 3272;
   optional int32 ClearingHouseId = 3273;
   optional string ClonedContract = 3274;
   optional string ContractSubType = 3275;
   optional ContractSubType ContractSubTypeDetails = 3276;
   optional string AgreementExternalAlias = 3277;
   optional string ExecutionPlatformCounterpartyAlias = 3278;
   optional Identifier ExecutionPlatform = 3279;
   optional bcl.DateTime EndDate = 3280;
   optional Identifier PriceCurrency = 3281;
   optional int32 PriceCurrencyId = 3282;
   optional string SourceContract = 3283;
   optional bcl.DateTime StartDate = 3284;
   optional bcl.Decimal PointValue = 3285;
   optional string TT2Code = 3286;
   optional string SubCategoryAlias = 3287;
   optional int32 Id = 3288;
   optional string ObjectIdAlias = 3289;
   optional Identifier Counterparty = 3290;
   optional BusinessEntity CounterpartyDetails = 3291;
   optional string ShortName = 3292;
   // the following represent sub-types; at most 1 should have a value
   optional IndexCreditDefaultSwap IndexCreditDefaultSwap = 3207;
}
message IndexLinkedFixedTotalReturnSwap {
   optional bcl.Decimal FixedIncomeInitialIndexValue = 3294;
   optional bcl.DateTime FixedIncomeInitialIndexDate = 3295;
   optional bcl.Decimal FixedIncomeCurrentIndexValue = 3296;
   optional bcl.Decimal DirtyPrice = 3297;
   optional Identifier SettlementMethod = 3298;
   optional bcl.DateTime FixedIncomeLastFixingDate = 3299;
   optional bcl.Decimal FinanceFixedCouponRate = 3300;
   optional string FixedIncomePayRecFlag = 3301;
   optional string FinancePayRecFlag = 3302;
   optional Identifier FixedIncomePrincipalType = 3303;
   optional Identifier FixedIncomeCurrency = 3304;
   optional int32 FixedIncomeCurrencyId = 3305;
   optional Identifier FixedIncomeInstrument = 3306;
   optional Identifier FixedIncomeHolidayCalendar = 3307;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 3308;
   optional int32 MaturitySettlementLagDayCount = 3309;
   optional Identifier FinancePrincipalType = 3310;
   optional Identifier FinanceCurrency = 3311;
   optional int32 FinanceCurrencyId = 3312;
   optional Identifier FinanceResetPattern = 3313;
   optional int32 FinanceResetPatternId = 3314;
   optional Identifier FinanceCompoundingStyle = 3315;
   optional int32 FinanceCompoundingStyleId = 3316;
   optional Identifier FinanceHolidayCalendar = 3317;
   optional Identifier FinanceDayCountBasis = 3318;
   optional Identifier FinanceBusinessDayRule = 3319;
   optional Identifier FinanceDateGenerationRule = 3320;
   optional Identifier FinanceDateRollConvention = 3321;
   repeated AllocationBase Allocations = 3322;
   optional string BuySellFlag = 3323;
   optional Identifier ClearingHouse = 3324;
   optional string ExecutionPlatformClearingHouseAlias = 3325;
   optional int32 ClearingHouseId = 3326;
   optional string ClonedContract = 3327;
   optional string ContractSubType = 3328;
   optional ContractSubType ContractSubTypeDetails = 3329;
   optional string AgreementExternalAlias = 3330;
   optional string ExecutionPlatformCounterpartyAlias = 3331;
   optional Identifier ExecutionPlatform = 3332;
   optional bcl.DateTime EndDate = 3333;
   optional Identifier PriceCurrency = 3334;
   optional int32 PriceCurrencyId = 3335;
   optional string SourceContract = 3336;
   optional bcl.DateTime StartDate = 3337;
   optional bcl.Decimal PointValue = 3338;
   optional string TT2Code = 3339;
   optional string SubCategoryAlias = 3340;
   optional int32 Id = 3341;
   optional string ObjectIdAlias = 3342;
   optional Identifier Counterparty = 3343;
   optional BusinessEntity CounterpartyDetails = 3344;
   optional string ShortName = 3345;
}
message IndexLinkedFloatTotalReturnSwap {
   optional bcl.Decimal FixedIncomeInitialIndexValue = 3347;
   optional bcl.DateTime FixedIncomeInitialIndexDate = 3348;
   optional bcl.Decimal FixedIncomeCurrentIndexValue = 3349;
   optional bcl.Decimal DirtyPrice = 3350;
   optional Identifier SettlementMethod = 3351;
   optional bcl.DateTime FixedIncomeLastFixingDate = 3352;
   optional bcl.Decimal FinanceFloatingSpreadRate = 3353;
   optional bool FinanceFloatingInterpolateFixingRateInd = 3354;
   optional Identifier FinanceFloatingInterbankInterestRate = 3355;
   optional Identifier FinanceFloatingStubType = 3356;
   optional string FixedIncomePayRecFlag = 3357;
   optional string FinancePayRecFlag = 3358;
   optional Identifier FixedIncomePrincipalType = 3359;
   optional Identifier FixedIncomeCurrency = 3360;
   optional int32 FixedIncomeCurrencyId = 3361;
   optional Identifier FixedIncomeInstrument = 3362;
   optional Identifier FixedIncomeHolidayCalendar = 3363;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 3364;
   optional int32 MaturitySettlementLagDayCount = 3365;
   optional Identifier FinancePrincipalType = 3366;
   optional Identifier FinanceCurrency = 3367;
   optional int32 FinanceCurrencyId = 3368;
   optional Identifier FinanceResetPattern = 3369;
   optional int32 FinanceResetPatternId = 3370;
   optional Identifier FinanceCompoundingStyle = 3371;
   optional int32 FinanceCompoundingStyleId = 3372;
   optional Identifier FinanceHolidayCalendar = 3373;
   optional Identifier FinanceDayCountBasis = 3374;
   optional Identifier FinanceBusinessDayRule = 3375;
   optional Identifier FinanceDateGenerationRule = 3376;
   optional Identifier FinanceDateRollConvention = 3377;
   repeated AllocationBase Allocations = 3378;
   optional string BuySellFlag = 3379;
   optional Identifier ClearingHouse = 3380;
   optional string ExecutionPlatformClearingHouseAlias = 3381;
   optional int32 ClearingHouseId = 3382;
   optional string ClonedContract = 3383;
   optional string ContractSubType = 3384;
   optional ContractSubType ContractSubTypeDetails = 3385;
   optional string AgreementExternalAlias = 3386;
   optional string ExecutionPlatformCounterpartyAlias = 3387;
   optional Identifier ExecutionPlatform = 3388;
   optional bcl.DateTime EndDate = 3389;
   optional Identifier PriceCurrency = 3390;
   optional int32 PriceCurrencyId = 3391;
   optional string SourceContract = 3392;
   optional bcl.DateTime StartDate = 3393;
   optional bcl.Decimal PointValue = 3394;
   optional string TT2Code = 3395;
   optional string SubCategoryAlias = 3396;
   optional int32 Id = 3397;
   optional string ObjectIdAlias = 3398;
   optional Identifier Counterparty = 3399;
   optional BusinessEntity CounterpartyDetails = 3400;
   optional string ShortName = 3401;
}
message IndexOptionBase {
   optional Identifier Index = 3403;
   optional bcl.Decimal StrikeRate = 3404;
   optional bcl.Decimal StrikePrice = 3405;
   optional bcl.DateTime StrikeDate = 3406;
   optional bcl.Decimal IndexPrice = 3407;
   optional string PutCallFlag = 3408;
   optional bcl.DateTime ExpirySettlementDate = 3409;
   optional Identifier HolidayCalendar = 3410;
   optional Identifier OptionStyle = 3411;
   optional Identifier SettlementMethod = 3412;
   optional Identifier SettlementStyle = 3413;
   repeated AllocationBase Allocations = 3414;
   optional string BuySellFlag = 3415;
   optional Identifier ClearingHouse = 3416;
   optional string ExecutionPlatformClearingHouseAlias = 3417;
   optional int32 ClearingHouseId = 3418;
   optional string ClonedContract = 3419;
   optional string ContractSubType = 3420;
   optional ContractSubType ContractSubTypeDetails = 3421;
   optional string AgreementExternalAlias = 3422;
   optional string ExecutionPlatformCounterpartyAlias = 3423;
   optional Identifier ExecutionPlatform = 3424;
   optional bcl.DateTime EndDate = 3425;
   optional Identifier PriceCurrency = 3426;
   optional int32 PriceCurrencyId = 3427;
   optional string SourceContract = 3428;
   optional bcl.DateTime StartDate = 3429;
   optional bcl.Decimal PointValue = 3430;
   optional string TT2Code = 3431;
   optional string SubCategoryAlias = 3432;
   optional int32 Id = 3433;
   optional string ObjectIdAlias = 3434;
   optional Identifier Counterparty = 3435;
   optional BusinessEntity CounterpartyDetails = 3436;
   optional string ShortName = 3437;
   // the following represent sub-types; at most 1 should have a value
   optional AsianIndexOptionBase AsianIndexOptionBase = 207;
   optional CompositeBasketIndexOptionBase CompositeBasketIndexOptionBase = 766;
   optional CompositeIndexOptionBase CompositeIndexOptionBase = 875;
   optional CompositeTotalReturnIndexOptionBase CompositeTotalReturnIndexOptionBase = 984;
   optional FlexIndexOptionBase FlexIndexOptionBase = 2400;
   optional QuantoBasketIndexOptionBase QuantoBasketIndexOptionBase = 4411;
   optional QuantoIndexOptionBase QuantoIndexOptionBase = 4483;
   optional VanillaBasketIndexOptionBase VanillaBasketIndexOptionBase = 5136;
   optional VanillaIndexOptionBase VanillaIndexOptionBase = 5245;
}
message IndexPriceTradedCreditDefaultSwap {
   optional bcl.Decimal IndexInitialCouponRate = 3439;
   optional Identifier CreditIndex = 3440;
   optional CreditIndex CreditIndexDetail = 3441;
   optional string ProtectionBuySellFlag = 3442;
   optional bcl.Decimal CouponRate = 3443;
   optional bcl.Decimal RecoveryRate = 3444;
   optional bcl.DateTime StubFirstPeriodEndDate = 3445;
   optional bool AccruedPaidDefaultInd = 3446;
   optional Identifier Company = 3447;
   optional Identifier DocumentationClause = 3448;
   optional Identifier PayoffPoint = 3449;
   optional Identifier SettlementMethod = 3450;
   optional Identifier ResetPattern = 3451;
   optional Identifier HolidayCalendar = 3452;
   optional Identifier DayCountBasis = 3453;
   optional Identifier BusinessDayRule = 3454;
   optional Identifier DateGenerationRule = 3455;
   optional Identifier DateRollConvention = 3456;
   repeated AllocationBase Allocations = 3457;
   optional string BuySellFlag = 3458;
   optional Identifier ClearingHouse = 3459;
   optional string ExecutionPlatformClearingHouseAlias = 3460;
   optional int32 ClearingHouseId = 3461;
   optional string ClonedContract = 3462;
   optional string ContractSubType = 3463;
   optional ContractSubType ContractSubTypeDetails = 3464;
   optional string AgreementExternalAlias = 3465;
   optional string ExecutionPlatformCounterpartyAlias = 3466;
   optional Identifier ExecutionPlatform = 3467;
   optional bcl.DateTime EndDate = 3468;
   optional Identifier PriceCurrency = 3469;
   optional int32 PriceCurrencyId = 3470;
   optional string SourceContract = 3471;
   optional bcl.DateTime StartDate = 3472;
   optional bcl.Decimal PointValue = 3473;
   optional string TT2Code = 3474;
   optional string SubCategoryAlias = 3475;
   optional int32 Id = 3476;
   optional string ObjectIdAlias = 3477;
   optional Identifier Counterparty = 3478;
   optional BusinessEntity CounterpartyDetails = 3479;
   optional string ShortName = 3480;
}
message IndexSwapBase {
   optional string IndexPayRecFlag = 3482;
   optional string FinancePayRecFlag = 3483;
   optional bcl.Decimal StrikePrice = 3484;
   optional Identifier IndexPrincipalType = 3485;
   optional Identifier Index = 3486;
   optional Identifier IndexCurrency = 3487;
   optional int32 IndexCurrencyId = 3488;
   optional Identifier IndexResetPattern = 3489;
   optional int32 IndexResetPatternId = 3490;
   optional Identifier IndexHolidayCalendar = 3491;
   optional Identifier IndexDayCountBasis = 3492;
   optional Identifier IndexBusinessDayRule = 3493;
   optional Identifier IndexDateGenerationRule = 3494;
   optional Identifier IndexDateRollConvention = 3495;
   optional Identifier IndexCompoundingStyle = 3496;
   optional int32 IndexCompoundingStyleId = 3497;
   optional Identifier FinancePrincipalType = 3498;
   optional Identifier FinanceCurrency = 3499;
   optional int32 FinanceCurrencyId = 3500;
   optional Identifier FinanceResetPattern = 3501;
   optional int32 FinanceResetPatternId = 3502;
   optional Identifier FinanceCompoundingStyle = 3503;
   optional int32 FinanceCompoundingStyleId = 3504;
   optional Identifier FinanceHolidayCalendar = 3505;
   optional Identifier FinanceDayCountBasis = 3506;
   optional Identifier FinanceBusinessDayRule = 3507;
   optional Identifier FinanceDateGenerationRule = 3508;
   optional Identifier FinanceDateRollConvention = 3509;
   optional Identifier FinanceStubType = 3510;
   repeated AllocationBase Allocations = 3511;
   optional string BuySellFlag = 3512;
   optional Identifier ClearingHouse = 3513;
   optional string ExecutionPlatformClearingHouseAlias = 3514;
   optional int32 ClearingHouseId = 3515;
   optional string ClonedContract = 3516;
   optional string ContractSubType = 3517;
   optional ContractSubType ContractSubTypeDetails = 3518;
   optional string AgreementExternalAlias = 3519;
   optional string ExecutionPlatformCounterpartyAlias = 3520;
   optional Identifier ExecutionPlatform = 3521;
   optional bcl.DateTime EndDate = 3522;
   optional Identifier PriceCurrency = 3523;
   optional int32 PriceCurrencyId = 3524;
   optional string SourceContract = 3525;
   optional bcl.DateTime StartDate = 3526;
   optional bcl.Decimal PointValue = 3527;
   optional string TT2Code = 3528;
   optional string SubCategoryAlias = 3529;
   optional int32 Id = 3530;
   optional string ObjectIdAlias = 3531;
   optional Identifier Counterparty = 3532;
   optional BusinessEntity CounterpartyDetails = 3533;
   optional string ShortName = 3534;
   // the following represent sub-types; at most 1 should have a value
   optional CommodityFixedIndexSwap CommodityFixedIndexSwap = 616;
   optional CommodityFloatIndexSwap CommodityFloatIndexSwap = 672;
   optional PropertyFixedIndexSwap PropertyFixedIndexSwap = 4283;
   optional PropertyFloatIndexSwap PropertyFloatIndexSwap = 4346;
}
message IndexVarianceSwap {
   optional Identifier Index = 3536;
   optional bcl.Decimal StrikeRate = 3537;
   optional bcl.Decimal CapRate = 3538;
   optional int32 ExpectedTradingDayCount = 3539;
   optional Identifier HolidayCalendar = 3540;
   optional Identifier BusinessDayRule = 3541;
   optional Identifier SamplingFrequency = 3542;
   repeated AllocationBase Allocations = 3543;
   optional string BuySellFlag = 3544;
   optional Identifier ClearingHouse = 3545;
   optional string ExecutionPlatformClearingHouseAlias = 3546;
   optional int32 ClearingHouseId = 3547;
   optional string ClonedContract = 3548;
   optional string ContractSubType = 3549;
   optional ContractSubType ContractSubTypeDetails = 3550;
   optional string AgreementExternalAlias = 3551;
   optional string ExecutionPlatformCounterpartyAlias = 3552;
   optional Identifier ExecutionPlatform = 3553;
   optional bcl.DateTime EndDate = 3554;
   optional Identifier PriceCurrency = 3555;
   optional int32 PriceCurrencyId = 3556;
   optional string SourceContract = 3557;
   optional bcl.DateTime StartDate = 3558;
   optional bcl.Decimal PointValue = 3559;
   optional string TT2Code = 3560;
   optional string SubCategoryAlias = 3561;
   optional int32 Id = 3562;
   optional string ObjectIdAlias = 3563;
   optional Identifier Counterparty = 3564;
   optional BusinessEntity CounterpartyDetails = 3565;
   optional string ShortName = 3566;
}
message IndexYieldTradedCreditDefaultSwap {
   optional bcl.Decimal IndexInitialCouponRate = 3568;
   optional Identifier CreditIndex = 3569;
   optional CreditIndex CreditIndexDetail = 3570;
   optional string ProtectionBuySellFlag = 3571;
   optional bcl.Decimal CouponRate = 3572;
   optional bcl.Decimal RecoveryRate = 3573;
   optional bcl.DateTime StubFirstPeriodEndDate = 3574;
   optional bool AccruedPaidDefaultInd = 3575;
   optional Identifier Company = 3576;
   optional Identifier DocumentationClause = 3577;
   optional Identifier PayoffPoint = 3578;
   optional Identifier SettlementMethod = 3579;
   optional Identifier ResetPattern = 3580;
   optional Identifier HolidayCalendar = 3581;
   optional Identifier DayCountBasis = 3582;
   optional Identifier BusinessDayRule = 3583;
   optional Identifier DateGenerationRule = 3584;
   optional Identifier DateRollConvention = 3585;
   repeated AllocationBase Allocations = 3586;
   optional string BuySellFlag = 3587;
   optional Identifier ClearingHouse = 3588;
   optional string ExecutionPlatformClearingHouseAlias = 3589;
   optional int32 ClearingHouseId = 3590;
   optional string ClonedContract = 3591;
   optional string ContractSubType = 3592;
   optional ContractSubType ContractSubTypeDetails = 3593;
   optional string AgreementExternalAlias = 3594;
   optional string ExecutionPlatformCounterpartyAlias = 3595;
   optional Identifier ExecutionPlatform = 3596;
   optional bcl.DateTime EndDate = 3597;
   optional Identifier PriceCurrency = 3598;
   optional int32 PriceCurrencyId = 3599;
   optional string SourceContract = 3600;
   optional bcl.DateTime StartDate = 3601;
   optional bcl.Decimal PointValue = 3602;
   optional string TT2Code = 3603;
   optional string SubCategoryAlias = 3604;
   optional int32 Id = 3605;
   optional string ObjectIdAlias = 3606;
   optional Identifier Counterparty = 3607;
   optional BusinessEntity CounterpartyDetails = 3608;
   optional string ShortName = 3609;
}
message InflationSwapBase {
   optional string InflationPayRecFlag = 3611;
   optional bcl.Decimal InflationBaseIndexValue = 3612;
   optional int32 InflationIndexationLagMonthCount = 3613;
   optional Identifier InflationPrincipalType = 3614;
   optional Identifier InflationPriceIndex = 3615;
   optional Identifier InflationCurrency = 3616;
   optional int32 InflationCurrencyId = 3617;
   optional Identifier InflationResetPattern = 3618;
   optional int32 InflationResetPatternId = 3619;
   optional Identifier InflationCompoundingStyle = 3620;
   optional int32 InflationCompoundingStyleId = 3621;
   optional Identifier InflationHolidayCalendar = 3622;
   optional Identifier InflationDayCountBasis = 3623;
   optional Identifier InflationBusinessDayRule = 3624;
   optional Identifier InflationDateGenerationRule = 3625;
   optional Identifier InflationDateRollConvention = 3626;
   repeated AllocationBase Allocations = 3627;
   optional string BuySellFlag = 3628;
   optional Identifier ClearingHouse = 3629;
   optional string ExecutionPlatformClearingHouseAlias = 3630;
   optional int32 ClearingHouseId = 3631;
   optional string ClonedContract = 3632;
   optional string ContractSubType = 3633;
   optional ContractSubType ContractSubTypeDetails = 3634;
   optional string AgreementExternalAlias = 3635;
   optional string ExecutionPlatformCounterpartyAlias = 3636;
   optional Identifier ExecutionPlatform = 3637;
   optional bcl.DateTime EndDate = 3638;
   optional Identifier PriceCurrency = 3639;
   optional int32 PriceCurrencyId = 3640;
   optional string SourceContract = 3641;
   optional bcl.DateTime StartDate = 3642;
   optional bcl.Decimal PointValue = 3643;
   optional string TT2Code = 3644;
   optional string SubCategoryAlias = 3645;
   optional int32 Id = 3646;
   optional string ObjectIdAlias = 3647;
   optional Identifier Counterparty = 3648;
   optional BusinessEntity CounterpartyDetails = 3649;
   optional string ShortName = 3650;
   // the following represent sub-types; at most 1 should have a value
   optional FloatFixedInflationSwapBase FloatFixedInflationSwapBase = 2559;
   optional FloatFloatInflationSwapBase FloatFloatInflationSwapBase = 2681;
}
message InterestRateBase {
   optional string BloombergTickerAlias = 5545;
   optional Identifier Currency = 5546;
   optional Identifier TenorPoint = 5547;
   optional string SettlementCentre = 5548;
}
message InterestRateCap {
   optional bcl.Decimal StrikeRate = 3652;
   optional bool InterpolateFixingRateInd = 3653;
   optional bool IncludeFirstPeriodInd = 3654;
   optional Identifier InterbankInterestRate = 3655;
   optional Identifier ResetPattern = 3656;
   optional Identifier HolidayCalendar = 3657;
   optional Identifier DayCountBasis = 3658;
   optional Identifier BusinessDayRule = 3659;
   optional Identifier DateGenerationRule = 3660;
   optional Identifier DateRollConvention = 3661;
   optional Identifier StubType = 3662;
   repeated AllocationBase Allocations = 3663;
   optional string BuySellFlag = 3664;
   optional Identifier ClearingHouse = 3665;
   optional string ExecutionPlatformClearingHouseAlias = 3666;
   optional int32 ClearingHouseId = 3667;
   optional string ClonedContract = 3668;
   optional string ContractSubType = 3669;
   optional ContractSubType ContractSubTypeDetails = 3670;
   optional string AgreementExternalAlias = 3671;
   optional string ExecutionPlatformCounterpartyAlias = 3672;
   optional Identifier ExecutionPlatform = 3673;
   optional bcl.DateTime EndDate = 3674;
   optional Identifier PriceCurrency = 3675;
   optional int32 PriceCurrencyId = 3676;
   optional string SourceContract = 3677;
   optional bcl.DateTime StartDate = 3678;
   optional bcl.Decimal PointValue = 3679;
   optional string TT2Code = 3680;
   optional string SubCategoryAlias = 3681;
   optional int32 Id = 3682;
   optional string ObjectIdAlias = 3683;
   optional Identifier Counterparty = 3684;
   optional BusinessEntity CounterpartyDetails = 3685;
   optional string ShortName = 3686;
}
message InterestRateFloor {
   optional bcl.Decimal StrikeRate = 3688;
   optional bool InterpolateFixingRateInd = 3689;
   optional bool IncludeFirstPeriodInd = 3690;
   optional Identifier InterbankInterestRate = 3691;
   optional Identifier ResetPattern = 3692;
   optional Identifier HolidayCalendar = 3693;
   optional Identifier DayCountBasis = 3694;
   optional Identifier BusinessDayRule = 3695;
   optional Identifier DateGenerationRule = 3696;
   optional Identifier DateRollConvention = 3697;
   optional Identifier StubType = 3698;
   repeated AllocationBase Allocations = 3699;
   optional string BuySellFlag = 3700;
   optional Identifier ClearingHouse = 3701;
   optional string ExecutionPlatformClearingHouseAlias = 3702;
   optional int32 ClearingHouseId = 3703;
   optional string ClonedContract = 3704;
   optional string ContractSubType = 3705;
   optional ContractSubType ContractSubTypeDetails = 3706;
   optional string AgreementExternalAlias = 3707;
   optional string ExecutionPlatformCounterpartyAlias = 3708;
   optional Identifier ExecutionPlatform = 3709;
   optional bcl.DateTime EndDate = 3710;
   optional Identifier PriceCurrency = 3711;
   optional int32 PriceCurrencyId = 3712;
   optional string SourceContract = 3713;
   optional bcl.DateTime StartDate = 3714;
   optional bcl.Decimal PointValue = 3715;
   optional string TT2Code = 3716;
   optional string SubCategoryAlias = 3717;
   optional int32 Id = 3718;
   optional string ObjectIdAlias = 3719;
   optional Identifier Counterparty = 3720;
   optional BusinessEntity CounterpartyDetails = 3721;
   optional string ShortName = 3722;
}
message InterestRateOptionBase {
   optional bcl.Decimal StrikeRate = 3724;
   optional bool InterpolateFixingRateInd = 3725;
   optional bool IncludeFirstPeriodInd = 3726;
   optional Identifier InterbankInterestRate = 3727;
   optional Identifier ResetPattern = 3728;
   optional Identifier HolidayCalendar = 3729;
   optional Identifier DayCountBasis = 3730;
   optional Identifier BusinessDayRule = 3731;
   optional Identifier DateGenerationRule = 3732;
   optional Identifier DateRollConvention = 3733;
   optional Identifier StubType = 3734;
   repeated AllocationBase Allocations = 3735;
   optional string BuySellFlag = 3736;
   optional Identifier ClearingHouse = 3737;
   optional string ExecutionPlatformClearingHouseAlias = 3738;
   optional int32 ClearingHouseId = 3739;
   optional string ClonedContract = 3740;
   optional string ContractSubType = 3741;
   optional ContractSubType ContractSubTypeDetails = 3742;
   optional string AgreementExternalAlias = 3743;
   optional string ExecutionPlatformCounterpartyAlias = 3744;
   optional Identifier ExecutionPlatform = 3745;
   optional bcl.DateTime EndDate = 3746;
   optional Identifier PriceCurrency = 3747;
   optional int32 PriceCurrencyId = 3748;
   optional string SourceContract = 3749;
   optional bcl.DateTime StartDate = 3750;
   optional bcl.Decimal PointValue = 3751;
   optional string TT2Code = 3752;
   optional string SubCategoryAlias = 3753;
   optional int32 Id = 3754;
   optional string ObjectIdAlias = 3755;
   optional Identifier Counterparty = 3756;
   optional BusinessEntity CounterpartyDetails = 3757;
   optional string ShortName = 3758;
   // the following represent sub-types; at most 1 should have a value
   optional InterestRateCap InterestRateCap = 3651;
   optional InterestRateFloor InterestRateFloor = 3687;
}
message InterestRateSwap {
   optional Identifier FloatingInterbankInterestRate = 3760;
   optional string FloatingPayRecFlag = 3761;
   optional string FixedPayRecFlag = 3762;
   optional bcl.Decimal FloatingSpreadRate = 3763;
   optional bool FloatingInterpolateFixingRateInd = 3764;
   optional bcl.Decimal FixedCouponRate = 3765;
   optional Identifier FloatingPrincipalType = 3766;
   optional Identifier FloatingCurrency = 3767;
   optional int32 FloatingCurrencyId = 3768;
   optional Identifier FloatingResetPattern = 3769;
   optional int32 FloatingResetPatternId = 3770;
   optional Identifier FloatingCompoundingStyle = 3771;
   optional int32 FloatingCompoundingStyleId = 3772;
   optional Identifier FloatingHolidayCalendar = 3773;
   optional Identifier FloatingDayCountBasis = 3774;
   optional Identifier FloatingBusinessDayRule = 3775;
   optional Identifier FloatingDateGenerationRule = 3776;
   optional Identifier FloatingDateRollConvention = 3777;
   optional Identifier FloatingStubType = 3778;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 3779;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 3780;
   optional Identifier FloatingStubStartTenorPoint = 3781;
   optional Identifier FloatingStubEndTenorPoint = 3782;
   optional Identifier FixedPrincipalType = 3783;
   optional Identifier FixedCurrency = 3784;
   optional int32 FixedCurrencyId = 3785;
   optional Identifier FixedResetPattern = 3786;
   optional int32 FixedResetPatternId = 3787;
   optional Identifier FixedCompoundingStyle = 3788;
   optional int32 FixedCompoundingStyleId = 3789;
   optional Identifier FixedHolidayCalendar = 3790;
   optional Identifier FixedDayCountBasis = 3791;
   optional Identifier FixedBusinessDayRule = 3792;
   optional Identifier FixedDateGenerationRule = 3793;
   optional Identifier FixedDateRollConvention = 3794;
   optional Identifier FixedStubType = 3795;
   optional bcl.DateTime FixedStubFirstPeriodEndDate = 3796;
   optional bcl.DateTime FixedStubLastPeriodStartDate = 3797;
   optional BusinessEntity FloatingInterestRate = 3798;
   optional InterestRateBase FloatingInterestRateDetail = 3799;
   optional string PricingStyleAlias = 3800;
   optional string ForwardYieldCurve = 3801;
   repeated AllocationBase Allocations = 3802;
   optional string BuySellFlag = 3803;
   optional Identifier ClearingHouse = 3804;
   optional string ExecutionPlatformClearingHouseAlias = 3805;
   optional int32 ClearingHouseId = 3806;
   optional string ClonedContract = 3807;
   optional string ContractSubType = 3808;
   optional ContractSubType ContractSubTypeDetails = 3809;
   optional string AgreementExternalAlias = 3810;
   optional string ExecutionPlatformCounterpartyAlias = 3811;
   optional Identifier ExecutionPlatform = 3812;
   optional bcl.DateTime EndDate = 3813;
   optional Identifier PriceCurrency = 3814;
   optional int32 PriceCurrencyId = 3815;
   optional string SourceContract = 3816;
   optional bcl.DateTime StartDate = 3817;
   optional bcl.Decimal PointValue = 3818;
   optional string TT2Code = 3819;
   optional string SubCategoryAlias = 3820;
   optional int32 Id = 3821;
   optional string ObjectIdAlias = 3822;
   optional Identifier Counterparty = 3823;
   optional BusinessEntity CounterpartyDetails = 3824;
   optional string ShortName = 3825;
}
message InterestRateSwapBase {
   optional string PricingStyleAlias = 3827;
   optional string ForwardYieldCurve = 3828;
   repeated AllocationBase Allocations = 3829;
   optional string BuySellFlag = 3830;
   optional Identifier ClearingHouse = 3831;
   optional string ExecutionPlatformClearingHouseAlias = 3832;
   optional int32 ClearingHouseId = 3833;
   optional string ClonedContract = 3834;
   optional string ContractSubType = 3835;
   optional ContractSubType ContractSubTypeDetails = 3836;
   optional string AgreementExternalAlias = 3837;
   optional string ExecutionPlatformCounterpartyAlias = 3838;
   optional Identifier ExecutionPlatform = 3839;
   optional bcl.DateTime EndDate = 3840;
   optional Identifier PriceCurrency = 3841;
   optional int32 PriceCurrencyId = 3842;
   optional string SourceContract = 3843;
   optional bcl.DateTime StartDate = 3844;
   optional bcl.Decimal PointValue = 3845;
   optional string TT2Code = 3846;
   optional string SubCategoryAlias = 3847;
   optional int32 Id = 3848;
   optional string ObjectIdAlias = 3849;
   optional Identifier Counterparty = 3850;
   optional BusinessEntity CounterpartyDetails = 3851;
   optional string ShortName = 3852;
   // the following represent sub-types; at most 1 should have a value
   optional CrossCurrencyFixedFixed CrossCurrencyFixedFixed = 1503;
   optional FixedOnlyInterestRateSwapBase FixedOnlyInterestRateSwapBase = 2359;
   optional FloatFixedInterestRateSwapBase FloatFixedInterestRateSwapBase = 2615;
   optional FloatFloatInterestRateSwapBase FloatFloatInterestRateSwapBase = 2743;
   optional FloatOnlyInterestRateSwapBase FloatOnlyInterestRateSwapBase = 2810;
}
message LimitedPriceIndexSwap {
   optional bcl.Decimal InflationCapRate = 3854;
   optional bcl.Decimal InflationFloorRate = 3855;
   optional Identifier InflationLimit = 3856;
   optional Identifier InflationCollarFrequency = 3857;
   optional Identifier InflationPeriod = 3858;
   optional bcl.Decimal InflationSpreadRate = 3859;
   optional bcl.Decimal FixedCouponRate = 3860;
   optional string FixedPayRecFlag = 3861;
   optional Identifier FixedPrincipalType = 3862;
   optional Identifier FixedCurrency = 3863;
   optional int32 FixedCurrencyId = 3864;
   optional Identifier FixedResetPattern = 3865;
   optional int32 FixedResetPatternId = 3866;
   optional Identifier FixedCompoundingStyle = 3867;
   optional int32 FixedCompoundingStyleId = 3868;
   optional Identifier FixedHolidayCalendar = 3869;
   optional Identifier FixedDayCountBasis = 3870;
   optional Identifier FixedBusinessDayRule = 3871;
   optional Identifier FixedDateGenerationRule = 3872;
   optional Identifier FixedDateRollConvention = 3873;
   optional string InflationPayRecFlag = 3874;
   optional bcl.Decimal InflationBaseIndexValue = 3875;
   optional int32 InflationIndexationLagMonthCount = 3876;
   optional Identifier InflationPrincipalType = 3877;
   optional Identifier InflationPriceIndex = 3878;
   optional Identifier InflationCurrency = 3879;
   optional int32 InflationCurrencyId = 3880;
   optional Identifier InflationResetPattern = 3881;
   optional int32 InflationResetPatternId = 3882;
   optional Identifier InflationCompoundingStyle = 3883;
   optional int32 InflationCompoundingStyleId = 3884;
   optional Identifier InflationHolidayCalendar = 3885;
   optional Identifier InflationDayCountBasis = 3886;
   optional Identifier InflationBusinessDayRule = 3887;
   optional Identifier InflationDateGenerationRule = 3888;
   optional Identifier InflationDateRollConvention = 3889;
   repeated AllocationBase Allocations = 3890;
   optional string BuySellFlag = 3891;
   optional Identifier ClearingHouse = 3892;
   optional string ExecutionPlatformClearingHouseAlias = 3893;
   optional int32 ClearingHouseId = 3894;
   optional string ClonedContract = 3895;
   optional string ContractSubType = 3896;
   optional ContractSubType ContractSubTypeDetails = 3897;
   optional string AgreementExternalAlias = 3898;
   optional string ExecutionPlatformCounterpartyAlias = 3899;
   optional Identifier ExecutionPlatform = 3900;
   optional bcl.DateTime EndDate = 3901;
   optional Identifier PriceCurrency = 3902;
   optional int32 PriceCurrencyId = 3903;
   optional string SourceContract = 3904;
   optional bcl.DateTime StartDate = 3905;
   optional bcl.Decimal PointValue = 3906;
   optional string TT2Code = 3907;
   optional string SubCategoryAlias = 3908;
   optional int32 Id = 3909;
   optional string ObjectIdAlias = 3910;
   optional Identifier Counterparty = 3911;
   optional BusinessEntity CounterpartyDetails = 3912;
   optional string ShortName = 3913;
}
message MessageItemBase {
   optional bcl.DateTime CreatedDateTime = 5693;
   optional string SourceExternalSystem = 5694;
   // the following represent sub-types; at most 1 should have a value
   optional ExecutionBase ExecutionBase = 5618;
   optional OrderBase OrderBase = 5695;
}
message NominalFixedTotalReturnSwap {
   optional bcl.Decimal DirtyPrice = 3915;
   optional Identifier SettlementMethod = 3916;
   optional bcl.DateTime FixedIncomeLastFixingDate = 3917;
   optional bcl.Decimal FinanceFixedCouponRate = 3918;
   optional string FixedIncomePayRecFlag = 3919;
   optional string FinancePayRecFlag = 3920;
   optional Identifier FixedIncomePrincipalType = 3921;
   optional Identifier FixedIncomeCurrency = 3922;
   optional int32 FixedIncomeCurrencyId = 3923;
   optional Identifier FixedIncomeInstrument = 3924;
   optional Identifier FixedIncomeHolidayCalendar = 3925;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 3926;
   optional int32 MaturitySettlementLagDayCount = 3927;
   optional Identifier FinancePrincipalType = 3928;
   optional Identifier FinanceCurrency = 3929;
   optional int32 FinanceCurrencyId = 3930;
   optional Identifier FinanceResetPattern = 3931;
   optional int32 FinanceResetPatternId = 3932;
   optional Identifier FinanceCompoundingStyle = 3933;
   optional int32 FinanceCompoundingStyleId = 3934;
   optional Identifier FinanceHolidayCalendar = 3935;
   optional Identifier FinanceDayCountBasis = 3936;
   optional Identifier FinanceBusinessDayRule = 3937;
   optional Identifier FinanceDateGenerationRule = 3938;
   optional Identifier FinanceDateRollConvention = 3939;
   repeated AllocationBase Allocations = 3940;
   optional string BuySellFlag = 3941;
   optional Identifier ClearingHouse = 3942;
   optional string ExecutionPlatformClearingHouseAlias = 3943;
   optional int32 ClearingHouseId = 3944;
   optional string ClonedContract = 3945;
   optional string ContractSubType = 3946;
   optional ContractSubType ContractSubTypeDetails = 3947;
   optional string AgreementExternalAlias = 3948;
   optional string ExecutionPlatformCounterpartyAlias = 3949;
   optional Identifier ExecutionPlatform = 3950;
   optional bcl.DateTime EndDate = 3951;
   optional Identifier PriceCurrency = 3952;
   optional int32 PriceCurrencyId = 3953;
   optional string SourceContract = 3954;
   optional bcl.DateTime StartDate = 3955;
   optional bcl.Decimal PointValue = 3956;
   optional string TT2Code = 3957;
   optional string SubCategoryAlias = 3958;
   optional int32 Id = 3959;
   optional string ObjectIdAlias = 3960;
   optional Identifier Counterparty = 3961;
   optional BusinessEntity CounterpartyDetails = 3962;
   optional string ShortName = 3963;
}
message NominalFloatTotalReturnSwap {
   optional bcl.Decimal DirtyPrice = 3965;
   optional Identifier SettlementMethod = 3966;
   optional bcl.DateTime FixedIncomeLastFixingDate = 3967;
   optional bcl.Decimal FinanceFloatingSpreadRate = 3968;
   optional bool FinanceFloatingInterpolateFixingRateInd = 3969;
   optional Identifier FinanceFloatingInterbankInterestRate = 3970;
   optional Identifier FinanceFloatingStubType = 3971;
   optional string FixedIncomePayRecFlag = 3972;
   optional string FinancePayRecFlag = 3973;
   optional Identifier FixedIncomePrincipalType = 3974;
   optional Identifier FixedIncomeCurrency = 3975;
   optional int32 FixedIncomeCurrencyId = 3976;
   optional Identifier FixedIncomeInstrument = 3977;
   optional Identifier FixedIncomeHolidayCalendar = 3978;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 3979;
   optional int32 MaturitySettlementLagDayCount = 3980;
   optional Identifier FinancePrincipalType = 3981;
   optional Identifier FinanceCurrency = 3982;
   optional int32 FinanceCurrencyId = 3983;
   optional Identifier FinanceResetPattern = 3984;
   optional int32 FinanceResetPatternId = 3985;
   optional Identifier FinanceCompoundingStyle = 3986;
   optional int32 FinanceCompoundingStyleId = 3987;
   optional Identifier FinanceHolidayCalendar = 3988;
   optional Identifier FinanceDayCountBasis = 3989;
   optional Identifier FinanceBusinessDayRule = 3990;
   optional Identifier FinanceDateGenerationRule = 3991;
   optional Identifier FinanceDateRollConvention = 3992;
   repeated AllocationBase Allocations = 3993;
   optional string BuySellFlag = 3994;
   optional Identifier ClearingHouse = 3995;
   optional string ExecutionPlatformClearingHouseAlias = 3996;
   optional int32 ClearingHouseId = 3997;
   optional string ClonedContract = 3998;
   optional string ContractSubType = 3999;
   optional ContractSubType ContractSubTypeDetails = 4000;
   optional string AgreementExternalAlias = 4001;
   optional string ExecutionPlatformCounterpartyAlias = 4002;
   optional Identifier ExecutionPlatform = 4003;
   optional bcl.DateTime EndDate = 4004;
   optional Identifier PriceCurrency = 4005;
   optional int32 PriceCurrencyId = 4006;
   optional string SourceContract = 4007;
   optional bcl.DateTime StartDate = 4008;
   optional bcl.Decimal PointValue = 4009;
   optional string TT2Code = 4010;
   optional string SubCategoryAlias = 4011;
   optional int32 Id = 4012;
   optional string ObjectIdAlias = 4013;
   optional Identifier Counterparty = 4014;
   optional BusinessEntity CounterpartyDetails = 4015;
   optional string ShortName = 4016;
}
message OrderBase {
   optional string OriginatingUser = 5696;
   optional string ApprovingUser = 5697;
   optional string NotesText = 5698;
   optional string Description = 5699;
   optional string ComplianceReference = 5700;
   optional bool PrivateOrderInd = 5701;
   optional Identifier Strategy = 5702;
   optional string StrategyNotesText = 5703;
   optional string CreatorUserInitialsAlias = 5704;
   optional string PackageDescription = 5705;
   optional Identifier OrderReason = 5706;
   optional bcl.DateTime CreatedDateTime = 5707;
   optional string SourceExternalSystem = 5708;
}
message OvernightInterestRateSwap {
   optional string FloatingPayRecFlag = 4018;
   optional string FixedPayRecFlag = 4019;
   optional bcl.Decimal FloatingSpreadRate = 4020;
   optional bool FloatingInterpolateFixingRateInd = 4021;
   optional bcl.Decimal FixedCouponRate = 4022;
   optional Identifier FloatingPrincipalType = 4023;
   optional Identifier FloatingCurrency = 4024;
   optional int32 FloatingCurrencyId = 4025;
   optional Identifier FloatingResetPattern = 4026;
   optional int32 FloatingResetPatternId = 4027;
   optional Identifier FloatingCompoundingStyle = 4028;
   optional int32 FloatingCompoundingStyleId = 4029;
   optional Identifier FloatingHolidayCalendar = 4030;
   optional Identifier FloatingDayCountBasis = 4031;
   optional Identifier FloatingBusinessDayRule = 4032;
   optional Identifier FloatingDateGenerationRule = 4033;
   optional Identifier FloatingDateRollConvention = 4034;
   optional Identifier FloatingStubType = 4035;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 4036;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 4037;
   optional Identifier FloatingStubStartTenorPoint = 4038;
   optional Identifier FloatingStubEndTenorPoint = 4039;
   optional Identifier FixedPrincipalType = 4040;
   optional Identifier FixedCurrency = 4041;
   optional int32 FixedCurrencyId = 4042;
   optional Identifier FixedResetPattern = 4043;
   optional int32 FixedResetPatternId = 4044;
   optional Identifier FixedCompoundingStyle = 4045;
   optional int32 FixedCompoundingStyleId = 4046;
   optional Identifier FixedHolidayCalendar = 4047;
   optional Identifier FixedDayCountBasis = 4048;
   optional Identifier FixedBusinessDayRule = 4049;
   optional Identifier FixedDateGenerationRule = 4050;
   optional Identifier FixedDateRollConvention = 4051;
   optional Identifier FixedStubType = 4052;
   optional bcl.DateTime FixedStubFirstPeriodEndDate = 4053;
   optional bcl.DateTime FixedStubLastPeriodStartDate = 4054;
   optional BusinessEntity FloatingInterestRate = 4055;
   optional InterestRateBase FloatingInterestRateDetail = 4056;
   optional string PricingStyleAlias = 4057;
   optional string ForwardYieldCurve = 4058;
   repeated AllocationBase Allocations = 4059;
   optional string BuySellFlag = 4060;
   optional Identifier ClearingHouse = 4061;
   optional string ExecutionPlatformClearingHouseAlias = 4062;
   optional int32 ClearingHouseId = 4063;
   optional string ClonedContract = 4064;
   optional string ContractSubType = 4065;
   optional ContractSubType ContractSubTypeDetails = 4066;
   optional string AgreementExternalAlias = 4067;
   optional string ExecutionPlatformCounterpartyAlias = 4068;
   optional Identifier ExecutionPlatform = 4069;
   optional bcl.DateTime EndDate = 4070;
   optional Identifier PriceCurrency = 4071;
   optional int32 PriceCurrencyId = 4072;
   optional string SourceContract = 4073;
   optional bcl.DateTime StartDate = 4074;
   optional bcl.Decimal PointValue = 4075;
   optional string TT2Code = 4076;
   optional string SubCategoryAlias = 4077;
   optional int32 Id = 4078;
   optional string ObjectIdAlias = 4079;
   optional Identifier Counterparty = 4080;
   optional BusinessEntity CounterpartyDetails = 4081;
   optional string ShortName = 4082;
}
message ParParIndexLinkedAssetSwap {
   optional bcl.Decimal FinanceFloatingSpreadRate = 4084;
   optional bool FinanceFloatingInterpolateFixingRateInd = 4085;
   optional Identifier FinanceFloatingInterbankInterestRate = 4086;
   optional Identifier FinanceFloatingStubType = 4087;
   optional string FixedIncomePayRecFlag = 4088;
   optional string FinancePayRecFlag = 4089;
   optional Identifier FixedIncomePrincipalType = 4090;
   optional Identifier FixedIncomeCurrency = 4091;
   optional int32 FixedIncomeCurrencyId = 4092;
   optional Identifier FixedIncomeInstrument = 4093;
   optional Identifier FixedIncomeHolidayCalendar = 4094;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 4095;
   optional int32 MaturitySettlementLagDayCount = 4096;
   optional Identifier FinancePrincipalType = 4097;
   optional Identifier FinanceCurrency = 4098;
   optional int32 FinanceCurrencyId = 4099;
   optional Identifier FinanceResetPattern = 4100;
   optional int32 FinanceResetPatternId = 4101;
   optional Identifier FinanceCompoundingStyle = 4102;
   optional int32 FinanceCompoundingStyleId = 4103;
   optional Identifier FinanceHolidayCalendar = 4104;
   optional Identifier FinanceDayCountBasis = 4105;
   optional Identifier FinanceBusinessDayRule = 4106;
   optional Identifier FinanceDateGenerationRule = 4107;
   optional Identifier FinanceDateRollConvention = 4108;
   repeated AllocationBase Allocations = 4109;
   optional string BuySellFlag = 4110;
   optional Identifier ClearingHouse = 4111;
   optional string ExecutionPlatformClearingHouseAlias = 4112;
   optional int32 ClearingHouseId = 4113;
   optional string ClonedContract = 4114;
   optional string ContractSubType = 4115;
   optional ContractSubType ContractSubTypeDetails = 4116;
   optional string AgreementExternalAlias = 4117;
   optional string ExecutionPlatformCounterpartyAlias = 4118;
   optional Identifier ExecutionPlatform = 4119;
   optional bcl.DateTime EndDate = 4120;
   optional Identifier PriceCurrency = 4121;
   optional int32 PriceCurrencyId = 4122;
   optional string SourceContract = 4123;
   optional bcl.DateTime StartDate = 4124;
   optional bcl.Decimal PointValue = 4125;
   optional string TT2Code = 4126;
   optional string SubCategoryAlias = 4127;
   optional int32 Id = 4128;
   optional string ObjectIdAlias = 4129;
   optional Identifier Counterparty = 4130;
   optional BusinessEntity CounterpartyDetails = 4131;
   optional string ShortName = 4132;
}
message ParParNominalAssetSwap {
   optional bcl.Decimal FinanceFloatingSpreadRate = 4134;
   optional bool FinanceFloatingInterpolateFixingRateInd = 4135;
   optional Identifier FinanceFloatingInterbankInterestRate = 4136;
   optional Identifier FinanceFloatingStubType = 4137;
   optional string FixedIncomePayRecFlag = 4138;
   optional string FinancePayRecFlag = 4139;
   optional Identifier FixedIncomePrincipalType = 4140;
   optional Identifier FixedIncomeCurrency = 4141;
   optional int32 FixedIncomeCurrencyId = 4142;
   optional Identifier FixedIncomeInstrument = 4143;
   optional Identifier FixedIncomeHolidayCalendar = 4144;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 4145;
   optional int32 MaturitySettlementLagDayCount = 4146;
   optional Identifier FinancePrincipalType = 4147;
   optional Identifier FinanceCurrency = 4148;
   optional int32 FinanceCurrencyId = 4149;
   optional Identifier FinanceResetPattern = 4150;
   optional int32 FinanceResetPatternId = 4151;
   optional Identifier FinanceCompoundingStyle = 4152;
   optional int32 FinanceCompoundingStyleId = 4153;
   optional Identifier FinanceHolidayCalendar = 4154;
   optional Identifier FinanceDayCountBasis = 4155;
   optional Identifier FinanceBusinessDayRule = 4156;
   optional Identifier FinanceDateGenerationRule = 4157;
   optional Identifier FinanceDateRollConvention = 4158;
   repeated AllocationBase Allocations = 4159;
   optional string BuySellFlag = 4160;
   optional Identifier ClearingHouse = 4161;
   optional string ExecutionPlatformClearingHouseAlias = 4162;
   optional int32 ClearingHouseId = 4163;
   optional string ClonedContract = 4164;
   optional string ContractSubType = 4165;
   optional ContractSubType ContractSubTypeDetails = 4166;
   optional string AgreementExternalAlias = 4167;
   optional string ExecutionPlatformCounterpartyAlias = 4168;
   optional Identifier ExecutionPlatform = 4169;
   optional bcl.DateTime EndDate = 4170;
   optional Identifier PriceCurrency = 4171;
   optional int32 PriceCurrencyId = 4172;
   optional string SourceContract = 4173;
   optional bcl.DateTime StartDate = 4174;
   optional bcl.Decimal PointValue = 4175;
   optional string TT2Code = 4176;
   optional string SubCategoryAlias = 4177;
   optional int32 Id = 4178;
   optional string ObjectIdAlias = 4179;
   optional Identifier Counterparty = 4180;
   optional BusinessEntity CounterpartyDetails = 4181;
   optional string ShortName = 4182;
}
message Portfolio {
   optional string ExternalAlias = 11;
   optional string NTAlias = 12;
   optional BusinessEntity LegalEntity = 13;
   optional string Description = 14;
   optional string Code = 15;
   optional int32 Id = 16;
}
message Position {
   optional string HiportAlias = 5549;
   optional string SedolAlias = 5550;
   optional string InsightIdAlias = 5551;
   optional string OtcPositionAlias = 5552;
   optional string CounterpartyAlias = 5553;
   optional string DownstreamDescription = 5554;
   repeated PositionMirror PositionMirrorCollection = 5555;
   optional string NTAlias = 5556;
   optional AllocationBase ContractAllocation = 5557;
   optional bcl.NetObjectProxy CurrentContractBlock = 5558; // reference-tracked ContractBase
   optional bcl.Decimal DrivingPrincipalAmount = 5559;
   optional bcl.Decimal OpposingPrincipalAmount = 5560;
   optional string XenoGuidAlias = 5561;
   optional PositionHistory LatestPositionHistory = 5562;
   optional PositionHistory PositionHistory = 5563;
   optional PositionHistory PreviousPositionHistory = 5564;
   optional string MarkitServAlias = 5565;
   optional bcl.Decimal Quantity = 5566;
   optional bool IsCompressedFully = 5567;
   // the following represent sub-types; at most 1 should have a value
   optional CompressedPosition CompressedPosition = 24;
}
message PositionHistory {
   optional bcl.Decimal ConsiderationAmount = 5568;
   optional bool CurrentPositionInd = 5569;
   optional bcl.Decimal DrivingPrincipalAmount = 5570;
   optional bcl.DateTime EffectiveDateTime = 5571;
   optional bcl.Decimal OpposingPrincipalAmount = 5572;
   optional bcl.Decimal Quantity = 5573;
}
message PositionMirror {
   optional string HiportAlias = 5574;
   optional string SedolAlias = 5575;
   optional string InsightIdAlias = 5576;
   optional string OtcPositionAlias = 5577;
   optional string CounterpartyAlias = 5578;
   optional Position Position = 5579;
   optional string NTAlias = 5580;
}
message Pricing {
   repeated Tuple_String_String PricingParameters = 17;
}
message ProceedsIndexLinkedAssetSwap {
   optional bcl.Decimal FinanceFloatingSpreadRate = 4184;
   optional bool FinanceFloatingInterpolateFixingRateInd = 4185;
   optional Identifier FinanceFloatingInterbankInterestRate = 4186;
   optional Identifier FinanceFloatingStubType = 4187;
   optional string FixedIncomePayRecFlag = 4188;
   optional string FinancePayRecFlag = 4189;
   optional Identifier FixedIncomePrincipalType = 4190;
   optional Identifier FixedIncomeCurrency = 4191;
   optional int32 FixedIncomeCurrencyId = 4192;
   optional Identifier FixedIncomeInstrument = 4193;
   optional Identifier FixedIncomeHolidayCalendar = 4194;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 4195;
   optional int32 MaturitySettlementLagDayCount = 4196;
   optional Identifier FinancePrincipalType = 4197;
   optional Identifier FinanceCurrency = 4198;
   optional int32 FinanceCurrencyId = 4199;
   optional Identifier FinanceResetPattern = 4200;
   optional int32 FinanceResetPatternId = 4201;
   optional Identifier FinanceCompoundingStyle = 4202;
   optional int32 FinanceCompoundingStyleId = 4203;
   optional Identifier FinanceHolidayCalendar = 4204;
   optional Identifier FinanceDayCountBasis = 4205;
   optional Identifier FinanceBusinessDayRule = 4206;
   optional Identifier FinanceDateGenerationRule = 4207;
   optional Identifier FinanceDateRollConvention = 4208;
   repeated AllocationBase Allocations = 4209;
   optional string BuySellFlag = 4210;
   optional Identifier ClearingHouse = 4211;
   optional string ExecutionPlatformClearingHouseAlias = 4212;
   optional int32 ClearingHouseId = 4213;
   optional string ClonedContract = 4214;
   optional string ContractSubType = 4215;
   optional ContractSubType ContractSubTypeDetails = 4216;
   optional string AgreementExternalAlias = 4217;
   optional string ExecutionPlatformCounterpartyAlias = 4218;
   optional Identifier ExecutionPlatform = 4219;
   optional bcl.DateTime EndDate = 4220;
   optional Identifier PriceCurrency = 4221;
   optional int32 PriceCurrencyId = 4222;
   optional string SourceContract = 4223;
   optional bcl.DateTime StartDate = 4224;
   optional bcl.Decimal PointValue = 4225;
   optional string TT2Code = 4226;
   optional string SubCategoryAlias = 4227;
   optional int32 Id = 4228;
   optional string ObjectIdAlias = 4229;
   optional Identifier Counterparty = 4230;
   optional BusinessEntity CounterpartyDetails = 4231;
   optional string ShortName = 4232;
}
message ProceedsNominalAssetSwap {
   optional bcl.Decimal FinanceFloatingSpreadRate = 4234;
   optional bool FinanceFloatingInterpolateFixingRateInd = 4235;
   optional Identifier FinanceFloatingInterbankInterestRate = 4236;
   optional Identifier FinanceFloatingStubType = 4237;
   optional string FixedIncomePayRecFlag = 4238;
   optional string FinancePayRecFlag = 4239;
   optional Identifier FixedIncomePrincipalType = 4240;
   optional Identifier FixedIncomeCurrency = 4241;
   optional int32 FixedIncomeCurrencyId = 4242;
   optional Identifier FixedIncomeInstrument = 4243;
   optional Identifier FixedIncomeHolidayCalendar = 4244;
   optional int32 FixedIncomeCouponSettlementLagDayCount = 4245;
   optional int32 MaturitySettlementLagDayCount = 4246;
   optional Identifier FinancePrincipalType = 4247;
   optional Identifier FinanceCurrency = 4248;
   optional int32 FinanceCurrencyId = 4249;
   optional Identifier FinanceResetPattern = 4250;
   optional int32 FinanceResetPatternId = 4251;
   optional Identifier FinanceCompoundingStyle = 4252;
   optional int32 FinanceCompoundingStyleId = 4253;
   optional Identifier FinanceHolidayCalendar = 4254;
   optional Identifier FinanceDayCountBasis = 4255;
   optional Identifier FinanceBusinessDayRule = 4256;
   optional Identifier FinanceDateGenerationRule = 4257;
   optional Identifier FinanceDateRollConvention = 4258;
   repeated AllocationBase Allocations = 4259;
   optional string BuySellFlag = 4260;
   optional Identifier ClearingHouse = 4261;
   optional string ExecutionPlatformClearingHouseAlias = 4262;
   optional int32 ClearingHouseId = 4263;
   optional string ClonedContract = 4264;
   optional string ContractSubType = 4265;
   optional ContractSubType ContractSubTypeDetails = 4266;
   optional string AgreementExternalAlias = 4267;
   optional string ExecutionPlatformCounterpartyAlias = 4268;
   optional Identifier ExecutionPlatform = 4269;
   optional bcl.DateTime EndDate = 4270;
   optional Identifier PriceCurrency = 4271;
   optional int32 PriceCurrencyId = 4272;
   optional string SourceContract = 4273;
   optional bcl.DateTime StartDate = 4274;
   optional bcl.Decimal PointValue = 4275;
   optional string TT2Code = 4276;
   optional string SubCategoryAlias = 4277;
   optional int32 Id = 4278;
   optional string ObjectIdAlias = 4279;
   optional Identifier Counterparty = 4280;
   optional BusinessEntity CounterpartyDetails = 4281;
   optional string ShortName = 4282;
}
message PropertyFixedIndexSwap {
   optional bcl.DateTime IndexAccrualStartDate = 4284;
   optional bcl.DateTime IndexAccrualEndDate = 4285;
   optional bcl.DateTime IndexFirstPaymentDate = 4286;
   optional bcl.DateTime IndexLastPaymentDate = 4287;
   optional bcl.DateTime FinanceAccrualStartDate = 4288;
   optional bcl.DateTime FinanceAccrualEndDate = 4289;
   optional bcl.DateTime FinanceFirstPaymentDate = 4290;
   optional bcl.DateTime FinanceLastPaymentDate = 4291;
   optional bcl.Decimal FinanceFixedCouponRate = 4292;
   optional string IndexPayRecFlag = 4293;
   optional string FinancePayRecFlag = 4294;
   optional bcl.Decimal StrikePrice = 4295;
   optional Identifier IndexPrincipalType = 4296;
   optional Identifier Index = 4297;
   optional Identifier IndexCurrency = 4298;
   optional int32 IndexCurrencyId = 4299;
   optional Identifier IndexResetPattern = 4300;
   optional int32 IndexResetPatternId = 4301;
   optional Identifier IndexHolidayCalendar = 4302;
   optional Identifier IndexDayCountBasis = 4303;
   optional Identifier IndexBusinessDayRule = 4304;
   optional Identifier IndexDateGenerationRule = 4305;
   optional Identifier IndexDateRollConvention = 4306;
   optional Identifier IndexCompoundingStyle = 4307;
   optional int32 IndexCompoundingStyleId = 4308;
   optional Identifier FinancePrincipalType = 4309;
   optional Identifier FinanceCurrency = 4310;
   optional int32 FinanceCurrencyId = 4311;
   optional Identifier FinanceResetPattern = 4312;
   optional int32 FinanceResetPatternId = 4313;
   optional Identifier FinanceCompoundingStyle = 4314;
   optional int32 FinanceCompoundingStyleId = 4315;
   optional Identifier FinanceHolidayCalendar = 4316;
   optional Identifier FinanceDayCountBasis = 4317;
   optional Identifier FinanceBusinessDayRule = 4318;
   optional Identifier FinanceDateGenerationRule = 4319;
   optional Identifier FinanceDateRollConvention = 4320;
   optional Identifier FinanceStubType = 4321;
   repeated AllocationBase Allocations = 4322;
   optional string BuySellFlag = 4323;
   optional Identifier ClearingHouse = 4324;
   optional string ExecutionPlatformClearingHouseAlias = 4325;
   optional int32 ClearingHouseId = 4326;
   optional string ClonedContract = 4327;
   optional string ContractSubType = 4328;
   optional ContractSubType ContractSubTypeDetails = 4329;
   optional string AgreementExternalAlias = 4330;
   optional string ExecutionPlatformCounterpartyAlias = 4331;
   optional Identifier ExecutionPlatform = 4332;
   optional bcl.DateTime EndDate = 4333;
   optional Identifier PriceCurrency = 4334;
   optional int32 PriceCurrencyId = 4335;
   optional string SourceContract = 4336;
   optional bcl.DateTime StartDate = 4337;
   optional bcl.Decimal PointValue = 4338;
   optional string TT2Code = 4339;
   optional string SubCategoryAlias = 4340;
   optional int32 Id = 4341;
   optional string ObjectIdAlias = 4342;
   optional Identifier Counterparty = 4343;
   optional BusinessEntity CounterpartyDetails = 4344;
   optional string ShortName = 4345;
}
message PropertyFloatIndexSwap {
   optional bool FinanceFloatingInterpolateFixingRateInd = 4347;
   optional bcl.DateTime IndexAccrualStartDate = 4348;
   optional bcl.DateTime IndexAccrualEndDate = 4349;
   optional bcl.DateTime IndexFirstPaymentDate = 4350;
   optional bcl.DateTime IndexLastPaymentDate = 4351;
   optional bcl.DateTime FinanceAccrualStartDate = 4352;
   optional bcl.DateTime FinanceAccrualEndDate = 4353;
   optional bcl.DateTime FinanceFirstPaymentDate = 4354;
   optional bcl.DateTime FinanceLastPaymentDate = 4355;
   optional bcl.Decimal FinanceFloatingSpreadRate = 4356;
   optional Identifier FinanceFloatingInterbankInterestRate = 4357;
   optional string IndexPayRecFlag = 4358;
   optional string FinancePayRecFlag = 4359;
   optional bcl.Decimal StrikePrice = 4360;
   optional Identifier IndexPrincipalType = 4361;
   optional Identifier Index = 4362;
   optional Identifier IndexCurrency = 4363;
   optional int32 IndexCurrencyId = 4364;
   optional Identifier IndexResetPattern = 4365;
   optional int32 IndexResetPatternId = 4366;
   optional Identifier IndexHolidayCalendar = 4367;
   optional Identifier IndexDayCountBasis = 4368;
   optional Identifier IndexBusinessDayRule = 4369;
   optional Identifier IndexDateGenerationRule = 4370;
   optional Identifier IndexDateRollConvention = 4371;
   optional Identifier IndexCompoundingStyle = 4372;
   optional int32 IndexCompoundingStyleId = 4373;
   optional Identifier FinancePrincipalType = 4374;
   optional Identifier FinanceCurrency = 4375;
   optional int32 FinanceCurrencyId = 4376;
   optional Identifier FinanceResetPattern = 4377;
   optional int32 FinanceResetPatternId = 4378;
   optional Identifier FinanceCompoundingStyle = 4379;
   optional int32 FinanceCompoundingStyleId = 4380;
   optional Identifier FinanceHolidayCalendar = 4381;
   optional Identifier FinanceDayCountBasis = 4382;
   optional Identifier FinanceBusinessDayRule = 4383;
   optional Identifier FinanceDateGenerationRule = 4384;
   optional Identifier FinanceDateRollConvention = 4385;
   optional Identifier FinanceStubType = 4386;
   repeated AllocationBase Allocations = 4387;
   optional string BuySellFlag = 4388;
   optional Identifier ClearingHouse = 4389;
   optional string ExecutionPlatformClearingHouseAlias = 4390;
   optional int32 ClearingHouseId = 4391;
   optional string ClonedContract = 4392;
   optional string ContractSubType = 4393;
   optional ContractSubType ContractSubTypeDetails = 4394;
   optional string AgreementExternalAlias = 4395;
   optional string ExecutionPlatformCounterpartyAlias = 4396;
   optional Identifier ExecutionPlatform = 4397;
   optional bcl.DateTime EndDate = 4398;
   optional Identifier PriceCurrency = 4399;
   optional int32 PriceCurrencyId = 4400;
   optional string SourceContract = 4401;
   optional bcl.DateTime StartDate = 4402;
   optional bcl.Decimal PointValue = 4403;
   optional string TT2Code = 4404;
   optional string SubCategoryAlias = 4405;
   optional int32 Id = 4406;
   optional string ObjectIdAlias = 4407;
   optional Identifier Counterparty = 4408;
   optional BusinessEntity CounterpartyDetails = 4409;
   optional string ShortName = 4410;
}
message QuantityAllocation {
   optional bcl.Decimal Quantity = 130;
   optional bcl.Decimal ConsiderationAmount = 131;
   optional bcl.Decimal AdditionalFeeAmount = 132;
   optional string PortfolioExternalAlias = 133;
   optional string PortfolioNTAlias = 134;
   optional Identifier GiveUpCounterparty = 135;
   optional Identifier ClearingCounterparty = 136;
   optional string ExecutionPlatformClearingCounterpartyAlias = 137;
   optional string AgreementExternalAlias = 138;
   optional string AlphaUsiAlias = 139;
   optional string GammaUsiAlias = 140;
   optional string DrivingDiscountingCurve = 141;
   optional string OpposingDiscountingCurve = 142;
   optional string ClearingHouseAssignedAlias = 143;
   optional string AllocationAlias = 144;
   optional int32 Id = 145;
   optional string ObjectIdAlias = 146;
   optional Position Position = 147;
   optional Identifier Portfolio = 148;
   optional BusinessEntity PortfolioDetails = 149;
   optional bcl.NetObjectProxy Contract = 150; // reference-tracked ContractBase
   optional Pricing Pricing = 151;
}
message QuantityUnwindAllocation {
   optional bcl.Decimal Quantity = 153;
   optional bcl.Decimal ConsiderationAmount = 154;
   optional bcl.Decimal AdditionalFeeAmount = 155;
   optional string PositionInsightId = 156;
   optional string Sedol = 157;
   optional string PortfolioExternalAlias = 158;
   optional string AllocationAlias = 159;
   optional int32 Id = 160;
   optional string ObjectIdAlias = 161;
   optional Position Position = 162;
   optional Identifier Portfolio = 163;
   optional BusinessEntity PortfolioDetails = 164;
   optional bcl.NetObjectProxy Contract = 165; // reference-tracked ContractBase
   optional Pricing Pricing = 166;
}
message QuantoBasketIndexOptionBase {
   optional Identifier Index = 4412;
   optional bcl.Decimal StrikeRate = 4413;
   optional bcl.Decimal StrikePrice = 4414;
   optional bcl.DateTime StrikeDate = 4415;
   optional bcl.Decimal IndexPrice = 4416;
   optional string PutCallFlag = 4417;
   optional bcl.DateTime ExpirySettlementDate = 4418;
   optional Identifier HolidayCalendar = 4419;
   optional Identifier OptionStyle = 4420;
   optional Identifier SettlementMethod = 4421;
   optional Identifier SettlementStyle = 4422;
   repeated AllocationBase Allocations = 4423;
   optional string BuySellFlag = 4424;
   optional Identifier ClearingHouse = 4425;
   optional string ExecutionPlatformClearingHouseAlias = 4426;
   optional int32 ClearingHouseId = 4427;
   optional string ClonedContract = 4428;
   optional string ContractSubType = 4429;
   optional ContractSubType ContractSubTypeDetails = 4430;
   optional string AgreementExternalAlias = 4431;
   optional string ExecutionPlatformCounterpartyAlias = 4432;
   optional Identifier ExecutionPlatform = 4433;
   optional bcl.DateTime EndDate = 4434;
   optional Identifier PriceCurrency = 4435;
   optional int32 PriceCurrencyId = 4436;
   optional string SourceContract = 4437;
   optional bcl.DateTime StartDate = 4438;
   optional bcl.Decimal PointValue = 4439;
   optional string TT2Code = 4440;
   optional string SubCategoryAlias = 4441;
   optional int32 Id = 4442;
   optional string ObjectIdAlias = 4443;
   optional Identifier Counterparty = 4444;
   optional BusinessEntity CounterpartyDetails = 4445;
   optional string ShortName = 4446;
   // the following represent sub-types; at most 1 should have a value
   optional QuantoBasketIndexOptionQuantity QuantoBasketIndexOptionQuantity = 4447;
   optional QuantoBasketIndexOptionNotional QuantoBasketIndexOptionNotional = 5581;
}
message QuantoBasketIndexOptionNotional {
   optional int32 RoundingPrecisionCount = 5582;
   optional Identifier Index = 5583;
   optional bcl.Decimal StrikeRate = 5584;
   optional bcl.Decimal StrikePrice = 5585;
   optional bcl.DateTime StrikeDate = 5586;
   optional bcl.Decimal IndexPrice = 5587;
   optional string PutCallFlag = 5588;
   optional bcl.DateTime ExpirySettlementDate = 5589;
   optional Identifier HolidayCalendar = 5590;
   optional Identifier OptionStyle = 5591;
   optional Identifier SettlementMethod = 5592;
   optional Identifier SettlementStyle = 5593;
   repeated AllocationBase Allocations = 5594;
   optional string BuySellFlag = 5595;
   optional Identifier ClearingHouse = 5596;
   optional string ExecutionPlatformClearingHouseAlias = 5597;
   optional int32 ClearingHouseId = 5598;
   optional string ClonedContract = 5599;
   optional string ContractSubType = 5600;
   optional ContractSubType ContractSubTypeDetails = 5601;
   optional string AgreementExternalAlias = 5602;
   optional string ExecutionPlatformCounterpartyAlias = 5603;
   optional Identifier ExecutionPlatform = 5604;
   optional bcl.DateTime EndDate = 5605;
   optional Identifier PriceCurrency = 5606;
   optional int32 PriceCurrencyId = 5607;
   optional string SourceContract = 5608;
   optional bcl.DateTime StartDate = 5609;
   optional bcl.Decimal PointValue = 5610;
   optional string TT2Code = 5611;
   optional string SubCategoryAlias = 5612;
   optional int32 Id = 5613;
   optional string ObjectIdAlias = 5614;
   optional Identifier Counterparty = 5615;
   optional BusinessEntity CounterpartyDetails = 5616;
   optional string ShortName = 5617;
}
message QuantoBasketIndexOptionQuantity {
   optional Identifier Index = 4448;
   optional bcl.Decimal StrikeRate = 4449;
   optional bcl.Decimal StrikePrice = 4450;
   optional bcl.DateTime StrikeDate = 4451;
   optional bcl.Decimal IndexPrice = 4452;
   optional string PutCallFlag = 4453;
   optional bcl.DateTime ExpirySettlementDate = 4454;
   optional Identifier HolidayCalendar = 4455;
   optional Identifier OptionStyle = 4456;
   optional Identifier SettlementMethod = 4457;
   optional Identifier SettlementStyle = 4458;
   repeated AllocationBase Allocations = 4459;
   optional string BuySellFlag = 4460;
   optional Identifier ClearingHouse = 4461;
   optional string ExecutionPlatformClearingHouseAlias = 4462;
   optional int32 ClearingHouseId = 4463;
   optional string ClonedContract = 4464;
   optional string ContractSubType = 4465;
   optional ContractSubType ContractSubTypeDetails = 4466;
   optional string AgreementExternalAlias = 4467;
   optional string ExecutionPlatformCounterpartyAlias = 4468;
   optional Identifier ExecutionPlatform = 4469;
   optional bcl.DateTime EndDate = 4470;
   optional Identifier PriceCurrency = 4471;
   optional int32 PriceCurrencyId = 4472;
   optional string SourceContract = 4473;
   optional bcl.DateTime StartDate = 4474;
   optional bcl.Decimal PointValue = 4475;
   optional string TT2Code = 4476;
   optional string SubCategoryAlias = 4477;
   optional int32 Id = 4478;
   optional string ObjectIdAlias = 4479;
   optional Identifier Counterparty = 4480;
   optional BusinessEntity CounterpartyDetails = 4481;
   optional string ShortName = 4482;
}
message QuantoIndexOptionBase {
   optional Identifier Index = 4484;
   optional bcl.Decimal StrikeRate = 4485;
   optional bcl.Decimal StrikePrice = 4486;
   optional bcl.DateTime StrikeDate = 4487;
   optional bcl.Decimal IndexPrice = 4488;
   optional string PutCallFlag = 4489;
   optional bcl.DateTime ExpirySettlementDate = 4490;
   optional Identifier HolidayCalendar = 4491;
   optional Identifier OptionStyle = 4492;
   optional Identifier SettlementMethod = 4493;
   optional Identifier SettlementStyle = 4494;
   repeated AllocationBase Allocations = 4495;
   optional string BuySellFlag = 4496;
   optional Identifier ClearingHouse = 4497;
   optional string ExecutionPlatformClearingHouseAlias = 4498;
   optional int32 ClearingHouseId = 4499;
   optional string ClonedContract = 4500;
   optional string ContractSubType = 4501;
   optional ContractSubType ContractSubTypeDetails = 4502;
   optional string AgreementExternalAlias = 4503;
   optional string ExecutionPlatformCounterpartyAlias = 4504;
   optional Identifier ExecutionPlatform = 4505;
   optional bcl.DateTime EndDate = 4506;
   optional Identifier PriceCurrency = 4507;
   optional int32 PriceCurrencyId = 4508;
   optional string SourceContract = 4509;
   optional bcl.DateTime StartDate = 4510;
   optional bcl.Decimal PointValue = 4511;
   optional string TT2Code = 4512;
   optional string SubCategoryAlias = 4513;
   optional int32 Id = 4514;
   optional string ObjectIdAlias = 4515;
   optional Identifier Counterparty = 4516;
   optional BusinessEntity CounterpartyDetails = 4517;
   optional string ShortName = 4518;
   // the following represent sub-types; at most 1 should have a value
   optional QuantoIndexOptionNotional QuantoIndexOptionNotional = 4519;
   optional QuantoIndexOptionQuantity QuantoIndexOptionQuantity = 4556;
}
message QuantoIndexOptionNotional {
   optional int32 RoundingPrecisionCount = 4520;
   optional Identifier Index = 4521;
   optional bcl.Decimal StrikeRate = 4522;
   optional bcl.Decimal StrikePrice = 4523;
   optional bcl.DateTime StrikeDate = 4524;
   optional bcl.Decimal IndexPrice = 4525;
   optional string PutCallFlag = 4526;
   optional bcl.DateTime ExpirySettlementDate = 4527;
   optional Identifier HolidayCalendar = 4528;
   optional Identifier OptionStyle = 4529;
   optional Identifier SettlementMethod = 4530;
   optional Identifier SettlementStyle = 4531;
   repeated AllocationBase Allocations = 4532;
   optional string BuySellFlag = 4533;
   optional Identifier ClearingHouse = 4534;
   optional string ExecutionPlatformClearingHouseAlias = 4535;
   optional int32 ClearingHouseId = 4536;
   optional string ClonedContract = 4537;
   optional string ContractSubType = 4538;
   optional ContractSubType ContractSubTypeDetails = 4539;
   optional string AgreementExternalAlias = 4540;
   optional string ExecutionPlatformCounterpartyAlias = 4541;
   optional Identifier ExecutionPlatform = 4542;
   optional bcl.DateTime EndDate = 4543;
   optional Identifier PriceCurrency = 4544;
   optional int32 PriceCurrencyId = 4545;
   optional string SourceContract = 4546;
   optional bcl.DateTime StartDate = 4547;
   optional bcl.Decimal PointValue = 4548;
   optional string TT2Code = 4549;
   optional string SubCategoryAlias = 4550;
   optional int32 Id = 4551;
   optional string ObjectIdAlias = 4552;
   optional Identifier Counterparty = 4553;
   optional BusinessEntity CounterpartyDetails = 4554;
   optional string ShortName = 4555;
}
message QuantoIndexOptionQuantity {
   optional Identifier Index = 4557;
   optional bcl.Decimal StrikeRate = 4558;
   optional bcl.Decimal StrikePrice = 4559;
   optional bcl.DateTime StrikeDate = 4560;
   optional bcl.Decimal IndexPrice = 4561;
   optional string PutCallFlag = 4562;
   optional bcl.DateTime ExpirySettlementDate = 4563;
   optional Identifier HolidayCalendar = 4564;
   optional Identifier OptionStyle = 4565;
   optional Identifier SettlementMethod = 4566;
   optional Identifier SettlementStyle = 4567;
   repeated AllocationBase Allocations = 4568;
   optional string BuySellFlag = 4569;
   optional Identifier ClearingHouse = 4570;
   optional string ExecutionPlatformClearingHouseAlias = 4571;
   optional int32 ClearingHouseId = 4572;
   optional string ClonedContract = 4573;
   optional string ContractSubType = 4574;
   optional ContractSubType ContractSubTypeDetails = 4575;
   optional string AgreementExternalAlias = 4576;
   optional string ExecutionPlatformCounterpartyAlias = 4577;
   optional Identifier ExecutionPlatform = 4578;
   optional bcl.DateTime EndDate = 4579;
   optional Identifier PriceCurrency = 4580;
   optional int32 PriceCurrencyId = 4581;
   optional string SourceContract = 4582;
   optional bcl.DateTime StartDate = 4583;
   optional bcl.Decimal PointValue = 4584;
   optional string TT2Code = 4585;
   optional string SubCategoryAlias = 4586;
   optional int32 Id = 4587;
   optional string ObjectIdAlias = 4588;
   optional Identifier Counterparty = 4589;
   optional BusinessEntity CounterpartyDetails = 4590;
   optional string ShortName = 4591;
}
message RealRateLPISwap {
   optional bcl.Decimal InflationCapRate = 4593;
   optional bcl.Decimal InflationFloorRate = 4594;
   optional Identifier InflationLimit = 4595;
   optional Identifier InflationCollarFrequency = 4596;
   optional Identifier InflationPeriod = 4597;
   optional bcl.Decimal RealCouponRate = 4598;
   optional bool FloatingInterpolateFixingRateInd = 4599;
   optional string FloatingPayRecFlag = 4600;
   optional Identifier FloatingPrincipalType = 4601;
   optional Identifier FloatingInterbankInterestRate = 4602;
   optional Identifier FloatingCurrency = 4603;
   optional int32 FloatingCurrencyId = 4604;
   optional Identifier FloatingResetPattern = 4605;
   optional int32 FloatingResetPatternId = 4606;
   optional Identifier FloatingCompoundingStyle = 4607;
   optional int32 FloatingCompoundingStyleId = 4608;
   optional Identifier FloatingHolidayCalendar = 4609;
   optional Identifier FloatingDayCountBasis = 4610;
   optional Identifier FloatingBusinessDayRule = 4611;
   optional Identifier FloatingDateGenerationRule = 4612;
   optional Identifier FloatingDateRollConvention = 4613;
   optional Identifier FloatingStubType = 4614;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 4615;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 4616;
   optional Identifier FloatingStubStartTenorPoint = 4617;
   optional Identifier FloatingStubEndTenorPoint = 4618;
   optional string InflationPayRecFlag = 4619;
   optional bcl.Decimal InflationBaseIndexValue = 4620;
   optional int32 InflationIndexationLagMonthCount = 4621;
   optional Identifier InflationPrincipalType = 4622;
   optional Identifier InflationPriceIndex = 4623;
   optional Identifier InflationCurrency = 4624;
   optional int32 InflationCurrencyId = 4625;
   optional Identifier InflationResetPattern = 4626;
   optional int32 InflationResetPatternId = 4627;
   optional Identifier InflationCompoundingStyle = 4628;
   optional int32 InflationCompoundingStyleId = 4629;
   optional Identifier InflationHolidayCalendar = 4630;
   optional Identifier InflationDayCountBasis = 4631;
   optional Identifier InflationBusinessDayRule = 4632;
   optional Identifier InflationDateGenerationRule = 4633;
   optional Identifier InflationDateRollConvention = 4634;
   repeated AllocationBase Allocations = 4635;
   optional string BuySellFlag = 4636;
   optional Identifier ClearingHouse = 4637;
   optional string ExecutionPlatformClearingHouseAlias = 4638;
   optional int32 ClearingHouseId = 4639;
   optional string ClonedContract = 4640;
   optional string ContractSubType = 4641;
   optional ContractSubType ContractSubTypeDetails = 4642;
   optional string AgreementExternalAlias = 4643;
   optional string ExecutionPlatformCounterpartyAlias = 4644;
   optional Identifier ExecutionPlatform = 4645;
   optional bcl.DateTime EndDate = 4646;
   optional Identifier PriceCurrency = 4647;
   optional int32 PriceCurrencyId = 4648;
   optional string SourceContract = 4649;
   optional bcl.DateTime StartDate = 4650;
   optional bcl.Decimal PointValue = 4651;
   optional string TT2Code = 4652;
   optional string SubCategoryAlias = 4653;
   optional int32 Id = 4654;
   optional string ObjectIdAlias = 4655;
   optional Identifier Counterparty = 4656;
   optional BusinessEntity CounterpartyDetails = 4657;
   optional string ShortName = 4658;
}
message RealRateSwap {
   optional bcl.Decimal RealCouponRate = 4660;
   optional bool FloatingInterpolateFixingRateInd = 4661;
   optional string FloatingPayRecFlag = 4662;
   optional Identifier FloatingPrincipalType = 4663;
   optional Identifier FloatingInterbankInterestRate = 4664;
   optional Identifier FloatingCurrency = 4665;
   optional int32 FloatingCurrencyId = 4666;
   optional Identifier FloatingResetPattern = 4667;
   optional int32 FloatingResetPatternId = 4668;
   optional Identifier FloatingCompoundingStyle = 4669;
   optional int32 FloatingCompoundingStyleId = 4670;
   optional Identifier FloatingHolidayCalendar = 4671;
   optional Identifier FloatingDayCountBasis = 4672;
   optional Identifier FloatingBusinessDayRule = 4673;
   optional Identifier FloatingDateGenerationRule = 4674;
   optional Identifier FloatingDateRollConvention = 4675;
   optional Identifier FloatingStubType = 4676;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 4677;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 4678;
   optional Identifier FloatingStubStartTenorPoint = 4679;
   optional Identifier FloatingStubEndTenorPoint = 4680;
   optional string InflationPayRecFlag = 4681;
   optional bcl.Decimal InflationBaseIndexValue = 4682;
   optional int32 InflationIndexationLagMonthCount = 4683;
   optional Identifier InflationPrincipalType = 4684;
   optional Identifier InflationPriceIndex = 4685;
   optional Identifier InflationCurrency = 4686;
   optional int32 InflationCurrencyId = 4687;
   optional Identifier InflationResetPattern = 4688;
   optional int32 InflationResetPatternId = 4689;
   optional Identifier InflationCompoundingStyle = 4690;
   optional int32 InflationCompoundingStyleId = 4691;
   optional Identifier InflationHolidayCalendar = 4692;
   optional Identifier InflationDayCountBasis = 4693;
   optional Identifier InflationBusinessDayRule = 4694;
   optional Identifier InflationDateGenerationRule = 4695;
   optional Identifier InflationDateRollConvention = 4696;
   repeated AllocationBase Allocations = 4697;
   optional string BuySellFlag = 4698;
   optional Identifier ClearingHouse = 4699;
   optional string ExecutionPlatformClearingHouseAlias = 4700;
   optional int32 ClearingHouseId = 4701;
   optional string ClonedContract = 4702;
   optional string ContractSubType = 4703;
   optional ContractSubType ContractSubTypeDetails = 4704;
   optional string AgreementExternalAlias = 4705;
   optional string ExecutionPlatformCounterpartyAlias = 4706;
   optional Identifier ExecutionPlatform = 4707;
   optional bcl.DateTime EndDate = 4708;
   optional Identifier PriceCurrency = 4709;
   optional int32 PriceCurrencyId = 4710;
   optional string SourceContract = 4711;
   optional bcl.DateTime StartDate = 4712;
   optional bcl.Decimal PointValue = 4713;
   optional string TT2Code = 4714;
   optional string SubCategoryAlias = 4715;
   optional int32 Id = 4716;
   optional string ObjectIdAlias = 4717;
   optional Identifier Counterparty = 4718;
   optional BusinessEntity CounterpartyDetails = 4719;
   optional string ShortName = 4720;
}
message RetailPriceIndexSwap {
   optional bcl.Decimal InflationSpreadRate = 4722;
   optional bcl.Decimal FixedCouponRate = 4723;
   optional string FixedPayRecFlag = 4724;
   optional Identifier FixedPrincipalType = 4725;
   optional Identifier FixedCurrency = 4726;
   optional int32 FixedCurrencyId = 4727;
   optional Identifier FixedResetPattern = 4728;
   optional int32 FixedResetPatternId = 4729;
   optional Identifier FixedCompoundingStyle = 4730;
   optional int32 FixedCompoundingStyleId = 4731;
   optional Identifier FixedHolidayCalendar = 4732;
   optional Identifier FixedDayCountBasis = 4733;
   optional Identifier FixedBusinessDayRule = 4734;
   optional Identifier FixedDateGenerationRule = 4735;
   optional Identifier FixedDateRollConvention = 4736;
   optional string InflationPayRecFlag = 4737;
   optional bcl.Decimal InflationBaseIndexValue = 4738;
   optional int32 InflationIndexationLagMonthCount = 4739;
   optional Identifier InflationPrincipalType = 4740;
   optional Identifier InflationPriceIndex = 4741;
   optional Identifier InflationCurrency = 4742;
   optional int32 InflationCurrencyId = 4743;
   optional Identifier InflationResetPattern = 4744;
   optional int32 InflationResetPatternId = 4745;
   optional Identifier InflationCompoundingStyle = 4746;
   optional int32 InflationCompoundingStyleId = 4747;
   optional Identifier InflationHolidayCalendar = 4748;
   optional Identifier InflationDayCountBasis = 4749;
   optional Identifier InflationBusinessDayRule = 4750;
   optional Identifier InflationDateGenerationRule = 4751;
   optional Identifier InflationDateRollConvention = 4752;
   repeated AllocationBase Allocations = 4753;
   optional string BuySellFlag = 4754;
   optional Identifier ClearingHouse = 4755;
   optional string ExecutionPlatformClearingHouseAlias = 4756;
   optional int32 ClearingHouseId = 4757;
   optional string ClonedContract = 4758;
   optional string ContractSubType = 4759;
   optional ContractSubType ContractSubTypeDetails = 4760;
   optional string AgreementExternalAlias = 4761;
   optional string ExecutionPlatformCounterpartyAlias = 4762;
   optional Identifier ExecutionPlatform = 4763;
   optional bcl.DateTime EndDate = 4764;
   optional Identifier PriceCurrency = 4765;
   optional int32 PriceCurrencyId = 4766;
   optional string SourceContract = 4767;
   optional bcl.DateTime StartDate = 4768;
   optional bcl.Decimal PointValue = 4769;
   optional string TT2Code = 4770;
   optional string SubCategoryAlias = 4771;
   optional int32 Id = 4772;
   optional string ObjectIdAlias = 4773;
   optional Identifier Counterparty = 4774;
   optional BusinessEntity CounterpartyDetails = 4775;
   optional string ShortName = 4776;
}
message SingleCommoditySwap {
   optional string PayRecFlag = 4778;
   optional bcl.Decimal StrikePrice = 4779;
   optional Identifier CommodityFuture = 4780;
   optional Identifier CalculationType = 4781;
   optional Identifier ResetPattern = 4782;
   optional Identifier HolidayCalendar = 4783;
   optional Identifier DayCountBasis = 4784;
   optional Identifier BusinessDayRule = 4785;
   optional Identifier DateGenerationRule = 4786;
   optional Identifier DateRollConvention = 4787;
   optional Identifier SettlementMethod = 4788;
   repeated AllocationBase Allocations = 4789;
   optional string BuySellFlag = 4790;
   optional Identifier ClearingHouse = 4791;
   optional string ExecutionPlatformClearingHouseAlias = 4792;
   optional int32 ClearingHouseId = 4793;
   optional string ClonedContract = 4794;
   optional string ContractSubType = 4795;
   optional ContractSubType ContractSubTypeDetails = 4796;
   optional string AgreementExternalAlias = 4797;
   optional string ExecutionPlatformCounterpartyAlias = 4798;
   optional Identifier ExecutionPlatform = 4799;
   optional bcl.DateTime EndDate = 4800;
   optional Identifier PriceCurrency = 4801;
   optional int32 PriceCurrencyId = 4802;
   optional string SourceContract = 4803;
   optional bcl.DateTime StartDate = 4804;
   optional bcl.Decimal PointValue = 4805;
   optional string TT2Code = 4806;
   optional string SubCategoryAlias = 4807;
   optional int32 Id = 4808;
   optional string ObjectIdAlias = 4809;
   optional Identifier Counterparty = 4810;
   optional BusinessEntity CounterpartyDetails = 4811;
   optional string ShortName = 4812;
}
message SingleNameCreditDefaultSwapBase {
   optional Identifier FixedIncomeInstrument = 4814;
   optional Identifier DebtTier = 4815;
   optional string ProtectionBuySellFlag = 4816;
   optional bcl.Decimal CouponRate = 4817;
   optional bcl.Decimal RecoveryRate = 4818;
   optional bcl.DateTime StubFirstPeriodEndDate = 4819;
   optional bool AccruedPaidDefaultInd = 4820;
   optional Identifier Company = 4821;
   optional Identifier DocumentationClause = 4822;
   optional Identifier PayoffPoint = 4823;
   optional Identifier SettlementMethod = 4824;
   optional Identifier ResetPattern = 4825;
   optional Identifier HolidayCalendar = 4826;
   optional Identifier DayCountBasis = 4827;
   optional Identifier BusinessDayRule = 4828;
   optional Identifier DateGenerationRule = 4829;
   optional Identifier DateRollConvention = 4830;
   repeated AllocationBase Allocations = 4831;
   optional string BuySellFlag = 4832;
   optional Identifier ClearingHouse = 4833;
   optional string ExecutionPlatformClearingHouseAlias = 4834;
   optional int32 ClearingHouseId = 4835;
   optional string ClonedContract = 4836;
   optional string ContractSubType = 4837;
   optional ContractSubType ContractSubTypeDetails = 4838;
   optional string AgreementExternalAlias = 4839;
   optional string ExecutionPlatformCounterpartyAlias = 4840;
   optional Identifier ExecutionPlatform = 4841;
   optional bcl.DateTime EndDate = 4842;
   optional Identifier PriceCurrency = 4843;
   optional int32 PriceCurrencyId = 4844;
   optional string SourceContract = 4845;
   optional bcl.DateTime StartDate = 4846;
   optional bcl.Decimal PointValue = 4847;
   optional string TT2Code = 4848;
   optional string SubCategoryAlias = 4849;
   optional int32 Id = 4850;
   optional string ObjectIdAlias = 4851;
   optional Identifier Counterparty = 4852;
   optional BusinessEntity CounterpartyDetails = 4853;
   optional string ShortName = 4854;
   // the following represent sub-types; at most 1 should have a value
   optional CorporateCreditDefaultSwap CorporateCreditDefaultSwap = 1258;
   optional SovereignCreditDefaultSwap SovereignCreditDefaultSwap = 4855;
   optional StandardisedCorporateCreditDefaultSwap StandardisedCorporateCreditDefaultSwap = 4897;
   optional StandardisedSovereignCreditDefaultSwap StandardisedSovereignCreditDefaultSwap = 4941;
}
message SinglePrincipalAllocation {
   optional bcl.Decimal DrivingPrincipalAmount = 168;
   optional bcl.Decimal ConsiderationAmount = 169;
   optional bcl.Decimal MidConsiderationAmount = 170;
   optional bcl.Decimal AdditionalFeeAmount = 171;
   optional string PortfolioExternalAlias = 172;
   optional string PortfolioNTAlias = 173;
   optional Identifier GiveUpCounterparty = 174;
   optional Identifier ClearingCounterparty = 175;
   optional string ExecutionPlatformClearingCounterpartyAlias = 176;
   optional string AgreementExternalAlias = 177;
   optional string AlphaUsiAlias = 178;
   optional string GammaUsiAlias = 179;
   optional string DrivingDiscountingCurve = 180;
   optional string OpposingDiscountingCurve = 181;
   optional string ClearingHouseAssignedAlias = 182;
   optional string AllocationAlias = 183;
   optional int32 Id = 184;
   optional string ObjectIdAlias = 185;
   optional Position Position = 186;
   optional Identifier Portfolio = 187;
   optional BusinessEntity PortfolioDetails = 188;
   optional bcl.NetObjectProxy Contract = 189; // reference-tracked ContractBase
   optional Pricing Pricing = 190;
}
message SinglePrincipalUnwindAllocation {
   optional bcl.Decimal DrivingPrincipalAmount = 192;
   optional bcl.Decimal ConsiderationAmount = 193;
   optional bcl.Decimal MidConsiderationAmount = 194;
   optional bcl.Decimal AdditionalFeeAmount = 195;
   optional string PositionInsightId = 196;
   optional string Sedol = 197;
   optional string PortfolioExternalAlias = 198;
   optional string AllocationAlias = 199;
   optional int32 Id = 200;
   optional string ObjectIdAlias = 201;
   optional Position Position = 202;
   optional Identifier Portfolio = 203;
   optional BusinessEntity PortfolioDetails = 204;
   optional bcl.NetObjectProxy Contract = 205; // reference-tracked ContractBase
   optional Pricing Pricing = 206;
}
message SovereignCreditDefaultSwap {
   optional Identifier FixedIncomeInstrument = 4856;
   optional Identifier DebtTier = 4857;
   optional string ProtectionBuySellFlag = 4858;
   optional bcl.Decimal CouponRate = 4859;
   optional bcl.Decimal RecoveryRate = 4860;
   optional bcl.DateTime StubFirstPeriodEndDate = 4861;
   optional bool AccruedPaidDefaultInd = 4862;
   optional Identifier Company = 4863;
   optional Identifier DocumentationClause = 4864;
   optional Identifier PayoffPoint = 4865;
   optional Identifier SettlementMethod = 4866;
   optional Identifier ResetPattern = 4867;
   optional Identifier HolidayCalendar = 4868;
   optional Identifier DayCountBasis = 4869;
   optional Identifier BusinessDayRule = 4870;
   optional Identifier DateGenerationRule = 4871;
   optional Identifier DateRollConvention = 4872;
   repeated AllocationBase Allocations = 4873;
   optional string BuySellFlag = 4874;
   optional Identifier ClearingHouse = 4875;
   optional string ExecutionPlatformClearingHouseAlias = 4876;
   optional int32 ClearingHouseId = 4877;
   optional string ClonedContract = 4878;
   optional string ContractSubType = 4879;
   optional ContractSubType ContractSubTypeDetails = 4880;
   optional string AgreementExternalAlias = 4881;
   optional string ExecutionPlatformCounterpartyAlias = 4882;
   optional Identifier ExecutionPlatform = 4883;
   optional bcl.DateTime EndDate = 4884;
   optional Identifier PriceCurrency = 4885;
   optional int32 PriceCurrencyId = 4886;
   optional string SourceContract = 4887;
   optional bcl.DateTime StartDate = 4888;
   optional bcl.Decimal PointValue = 4889;
   optional string TT2Code = 4890;
   optional string SubCategoryAlias = 4891;
   optional int32 Id = 4892;
   optional string ObjectIdAlias = 4893;
   optional Identifier Counterparty = 4894;
   optional BusinessEntity CounterpartyDetails = 4895;
   optional string ShortName = 4896;
}
message StandardisedCorporateCreditDefaultSwap {
   optional bcl.Decimal InitialCouponRate = 4898;
   optional bcl.DateTime EventEffectiveDate = 4899;
   optional Identifier FixedIncomeInstrument = 4900;
   optional Identifier DebtTier = 4901;
   optional string ProtectionBuySellFlag = 4902;
   optional bcl.Decimal CouponRate = 4903;
   optional bcl.Decimal RecoveryRate = 4904;
   optional bcl.DateTime StubFirstPeriodEndDate = 4905;
   optional bool AccruedPaidDefaultInd = 4906;
   optional Identifier Company = 4907;
   optional Identifier DocumentationClause = 4908;
   optional Identifier PayoffPoint = 4909;
   optional Identifier SettlementMethod = 4910;
   optional Identifier ResetPattern = 4911;
   optional Identifier HolidayCalendar = 4912;
   optional Identifier DayCountBasis = 4913;
   optional Identifier BusinessDayRule = 4914;
   optional Identifier DateGenerationRule = 4915;
   optional Identifier DateRollConvention = 4916;
   repeated AllocationBase Allocations = 4917;
   optional string BuySellFlag = 4918;
   optional Identifier ClearingHouse = 4919;
   optional string ExecutionPlatformClearingHouseAlias = 4920;
   optional int32 ClearingHouseId = 4921;
   optional string ClonedContract = 4922;
   optional string ContractSubType = 4923;
   optional ContractSubType ContractSubTypeDetails = 4924;
   optional string AgreementExternalAlias = 4925;
   optional string ExecutionPlatformCounterpartyAlias = 4926;
   optional Identifier ExecutionPlatform = 4927;
   optional bcl.DateTime EndDate = 4928;
   optional Identifier PriceCurrency = 4929;
   optional int32 PriceCurrencyId = 4930;
   optional string SourceContract = 4931;
   optional bcl.DateTime StartDate = 4932;
   optional bcl.Decimal PointValue = 4933;
   optional string TT2Code = 4934;
   optional string SubCategoryAlias = 4935;
   optional int32 Id = 4936;
   optional string ObjectIdAlias = 4937;
   optional Identifier Counterparty = 4938;
   optional BusinessEntity CounterpartyDetails = 4939;
   optional string ShortName = 4940;
}
message StandardisedSovereignCreditDefaultSwap {
   optional bcl.Decimal InitialCouponRate = 4942;
   optional bcl.DateTime EventEffectiveDate = 4943;
   optional Identifier FixedIncomeInstrument = 4944;
   optional Identifier DebtTier = 4945;
   optional string ProtectionBuySellFlag = 4946;
   optional bcl.Decimal CouponRate = 4947;
   optional bcl.Decimal RecoveryRate = 4948;
   optional bcl.DateTime StubFirstPeriodEndDate = 4949;
   optional bool AccruedPaidDefaultInd = 4950;
   optional Identifier Company = 4951;
   optional Identifier DocumentationClause = 4952;
   optional Identifier PayoffPoint = 4953;
   optional Identifier SettlementMethod = 4954;
   optional Identifier ResetPattern = 4955;
   optional Identifier HolidayCalendar = 4956;
   optional Identifier DayCountBasis = 4957;
   optional Identifier BusinessDayRule = 4958;
   optional Identifier DateGenerationRule = 4959;
   optional Identifier DateRollConvention = 4960;
   repeated AllocationBase Allocations = 4961;
   optional string BuySellFlag = 4962;
   optional Identifier ClearingHouse = 4963;
   optional string ExecutionPlatformClearingHouseAlias = 4964;
   optional int32 ClearingHouseId = 4965;
   optional string ClonedContract = 4966;
   optional string ContractSubType = 4967;
   optional ContractSubType ContractSubTypeDetails = 4968;
   optional string AgreementExternalAlias = 4969;
   optional string ExecutionPlatformCounterpartyAlias = 4970;
   optional Identifier ExecutionPlatform = 4971;
   optional bcl.DateTime EndDate = 4972;
   optional Identifier PriceCurrency = 4973;
   optional int32 PriceCurrencyId = 4974;
   optional string SourceContract = 4975;
   optional bcl.DateTime StartDate = 4976;
   optional bcl.Decimal PointValue = 4977;
   optional string TT2Code = 4978;
   optional string SubCategoryAlias = 4979;
   optional int32 Id = 4980;
   optional string ObjectIdAlias = 4981;
   optional Identifier Counterparty = 4982;
   optional BusinessEntity CounterpartyDetails = 4983;
   optional string ShortName = 4984;
}
message Swaption {
   optional string PutCallFlag = 4986;
   optional bcl.DateTime ExpirySettlementDate = 4987;
   optional bcl.DateTime SwapStartDate = 4988;
   optional bcl.DateTime SwapEndDate = 4989;
   optional string FloatingPayRecFlag = 4990;
   optional bcl.Decimal FloatingSpreadRate = 4991;
   optional bool FloatingInterpolateFixingRateInd = 4992;
   optional string FixedPayRecFlag = 4993;
   optional bcl.Decimal FixedCouponRate = 4994;
   optional Identifier HolidayCalendar = 4995;
   optional Identifier OptionStyle = 4996;
   optional Identifier SettlementMethod = 4997;
   optional Identifier SettlementSubMethod = 4998;
   optional Identifier FloatingPrincipalType = 4999;
   optional Identifier FloatingInterbankInterestRate = 5000;
   optional Identifier FloatingCurrency = 5001;
   optional Identifier FloatingResetPattern = 5002;
   optional Identifier FloatingCompoundingStyle = 5003;
   optional int32 FloatingCompoundingStyleId = 5004;
   optional Identifier FloatingHolidayCalendar = 5005;
   optional Identifier FloatingDayCountBasis = 5006;
   optional Identifier FloatingBusinessDayRule = 5007;
   optional Identifier FloatingDateGenerationRule = 5008;
   optional Identifier FloatingDateRollConvention = 5009;
   optional Identifier FloatingStubType = 5010;
   optional Identifier FixedPrincipalType = 5011;
   optional Identifier FixedCurrency = 5012;
   optional Identifier FixedResetPattern = 5013;
   optional Identifier FixedCompoundingStyle = 5014;
   optional Identifier FixedHolidayCalendar = 5015;
   optional Identifier FixedDayCountBasis = 5016;
   optional Identifier FixedBusinessDayRule = 5017;
   optional Identifier FixedDateGenerationRule = 5018;
   optional Identifier FixedDateRollConvention = 5019;
   optional Identifier SwapClearingHouse = 5020;
   repeated AllocationBase Allocations = 5021;
   optional string BuySellFlag = 5022;
   optional Identifier ClearingHouse = 5023;
   optional string ExecutionPlatformClearingHouseAlias = 5024;
   optional int32 ClearingHouseId = 5025;
   optional string ClonedContract = 5026;
   optional string ContractSubType = 5027;
   optional ContractSubType ContractSubTypeDetails = 5028;
   optional string AgreementExternalAlias = 5029;
   optional string ExecutionPlatformCounterpartyAlias = 5030;
   optional Identifier ExecutionPlatform = 5031;
   optional bcl.DateTime EndDate = 5032;
   optional Identifier PriceCurrency = 5033;
   optional int32 PriceCurrencyId = 5034;
   optional string SourceContract = 5035;
   optional bcl.DateTime StartDate = 5036;
   optional bcl.Decimal PointValue = 5037;
   optional string TT2Code = 5038;
   optional string SubCategoryAlias = 5039;
   optional int32 Id = 5040;
   optional string ObjectIdAlias = 5041;
   optional Identifier Counterparty = 5042;
   optional BusinessEntity CounterpartyDetails = 5043;
   optional string ShortName = 5044;
}
message SwaptionBase {
   optional string PutCallFlag = 5046;
   optional bcl.DateTime ExpirySettlementDate = 5047;
   optional bcl.DateTime SwapStartDate = 5048;
   optional bcl.DateTime SwapEndDate = 5049;
   optional string FloatingPayRecFlag = 5050;
   optional bcl.Decimal FloatingSpreadRate = 5051;
   optional bool FloatingInterpolateFixingRateInd = 5052;
   optional string FixedPayRecFlag = 5053;
   optional bcl.Decimal FixedCouponRate = 5054;
   optional Identifier HolidayCalendar = 5055;
   optional Identifier OptionStyle = 5056;
   optional Identifier SettlementMethod = 5057;
   optional Identifier SettlementSubMethod = 5058;
   optional Identifier FloatingPrincipalType = 5059;
   optional Identifier FloatingInterbankInterestRate = 5060;
   optional Identifier FloatingCurrency = 5061;
   optional Identifier FloatingResetPattern = 5062;
   optional Identifier FloatingCompoundingStyle = 5063;
   optional int32 FloatingCompoundingStyleId = 5064;
   optional Identifier FloatingHolidayCalendar = 5065;
   optional Identifier FloatingDayCountBasis = 5066;
   optional Identifier FloatingBusinessDayRule = 5067;
   optional Identifier FloatingDateGenerationRule = 5068;
   optional Identifier FloatingDateRollConvention = 5069;
   optional Identifier FloatingStubType = 5070;
   optional Identifier FixedPrincipalType = 5071;
   optional Identifier FixedCurrency = 5072;
   optional Identifier FixedResetPattern = 5073;
   optional Identifier FixedCompoundingStyle = 5074;
   optional Identifier FixedHolidayCalendar = 5075;
   optional Identifier FixedDayCountBasis = 5076;
   optional Identifier FixedBusinessDayRule = 5077;
   optional Identifier FixedDateGenerationRule = 5078;
   optional Identifier FixedDateRollConvention = 5079;
   optional Identifier SwapClearingHouse = 5080;
   repeated AllocationBase Allocations = 5081;
   optional string BuySellFlag = 5082;
   optional Identifier ClearingHouse = 5083;
   optional string ExecutionPlatformClearingHouseAlias = 5084;
   optional int32 ClearingHouseId = 5085;
   optional string ClonedContract = 5086;
   optional string ContractSubType = 5087;
   optional ContractSubType ContractSubTypeDetails = 5088;
   optional string AgreementExternalAlias = 5089;
   optional string ExecutionPlatformCounterpartyAlias = 5090;
   optional Identifier ExecutionPlatform = 5091;
   optional bcl.DateTime EndDate = 5092;
   optional Identifier PriceCurrency = 5093;
   optional int32 PriceCurrencyId = 5094;
   optional string SourceContract = 5095;
   optional bcl.DateTime StartDate = 5096;
   optional bcl.Decimal PointValue = 5097;
   optional string TT2Code = 5098;
   optional string SubCategoryAlias = 5099;
   optional int32 Id = 5100;
   optional string ObjectIdAlias = 5101;
   optional Identifier Counterparty = 5102;
   optional BusinessEntity CounterpartyDetails = 5103;
   optional string ShortName = 5104;
   // the following represent sub-types; at most 1 should have a value
   optional Swaption Swaption = 4985;
}
message Tuple_String_String {
   optional string Item1 = 1;
   optional string Item2 = 2;
}
message UnderlyerOptionBase {
   optional string PutCallFlag = 5106;
   optional bcl.DateTime ExpirySettlementDate = 5107;
   optional Identifier HolidayCalendar = 5108;
   optional Identifier OptionStyle = 5109;
   optional Identifier SettlementMethod = 5110;
   optional Identifier SettlementStyle = 5111;
   repeated AllocationBase Allocations = 5112;
   optional string BuySellFlag = 5113;
   optional Identifier ClearingHouse = 5114;
   optional string ExecutionPlatformClearingHouseAlias = 5115;
   optional int32 ClearingHouseId = 5116;
   optional string ClonedContract = 5117;
   optional string ContractSubType = 5118;
   optional ContractSubType ContractSubTypeDetails = 5119;
   optional string AgreementExternalAlias = 5120;
   optional string ExecutionPlatformCounterpartyAlias = 5121;
   optional Identifier ExecutionPlatform = 5122;
   optional bcl.DateTime EndDate = 5123;
   optional Identifier PriceCurrency = 5124;
   optional int32 PriceCurrencyId = 5125;
   optional string SourceContract = 5126;
   optional bcl.DateTime StartDate = 5127;
   optional bcl.Decimal PointValue = 5128;
   optional string TT2Code = 5129;
   optional string SubCategoryAlias = 5130;
   optional int32 Id = 5131;
   optional string ObjectIdAlias = 5132;
   optional Identifier Counterparty = 5133;
   optional BusinessEntity CounterpartyDetails = 5134;
   optional string ShortName = 5135;
   // the following represent sub-types; at most 1 should have a value
   optional EquityOptionBase EquityOptionBase = 2100;
   optional IndexOptionBase IndexOptionBase = 3402;
}
message User {
   optional string FirstName = 18;
   optional string UserName = 19;
   optional string LastName = 20;
   optional string EmailAddress = 21;
   optional string InitialsAlias = 22;
   optional int32 Id = 23;
}
message VanillaBasketIndexOptionBase {
   optional Identifier Index = 5137;
   optional bcl.Decimal StrikeRate = 5138;
   optional bcl.Decimal StrikePrice = 5139;
   optional bcl.DateTime StrikeDate = 5140;
   optional bcl.Decimal IndexPrice = 5141;
   optional string PutCallFlag = 5142;
   optional bcl.DateTime ExpirySettlementDate = 5143;
   optional Identifier HolidayCalendar = 5144;
   optional Identifier OptionStyle = 5145;
   optional Identifier SettlementMethod = 5146;
   optional Identifier SettlementStyle = 5147;
   repeated AllocationBase Allocations = 5148;
   optional string BuySellFlag = 5149;
   optional Identifier ClearingHouse = 5150;
   optional string ExecutionPlatformClearingHouseAlias = 5151;
   optional int32 ClearingHouseId = 5152;
   optional string ClonedContract = 5153;
   optional string ContractSubType = 5154;
   optional ContractSubType ContractSubTypeDetails = 5155;
   optional string AgreementExternalAlias = 5156;
   optional string ExecutionPlatformCounterpartyAlias = 5157;
   optional Identifier ExecutionPlatform = 5158;
   optional bcl.DateTime EndDate = 5159;
   optional Identifier PriceCurrency = 5160;
   optional int32 PriceCurrencyId = 5161;
   optional string SourceContract = 5162;
   optional bcl.DateTime StartDate = 5163;
   optional bcl.Decimal PointValue = 5164;
   optional string TT2Code = 5165;
   optional string SubCategoryAlias = 5166;
   optional int32 Id = 5167;
   optional string ObjectIdAlias = 5168;
   optional Identifier Counterparty = 5169;
   optional BusinessEntity CounterpartyDetails = 5170;
   optional string ShortName = 5171;
   // the following represent sub-types; at most 1 should have a value
   optional VanillaBasketIndexOptionNotional VanillaBasketIndexOptionNotional = 5172;
   optional VanillaBasketIndexOptionQuantity VanillaBasketIndexOptionQuantity = 5209;
}
message VanillaBasketIndexOptionNotional {
   optional int32 RoundingPrecisionCount = 5173;
   optional Identifier Index = 5174;
   optional bcl.Decimal StrikeRate = 5175;
   optional bcl.Decimal StrikePrice = 5176;
   optional bcl.DateTime StrikeDate = 5177;
   optional bcl.Decimal IndexPrice = 5178;
   optional string PutCallFlag = 5179;
   optional bcl.DateTime ExpirySettlementDate = 5180;
   optional Identifier HolidayCalendar = 5181;
   optional Identifier OptionStyle = 5182;
   optional Identifier SettlementMethod = 5183;
   optional Identifier SettlementStyle = 5184;
   repeated AllocationBase Allocations = 5185;
   optional string BuySellFlag = 5186;
   optional Identifier ClearingHouse = 5187;
   optional string ExecutionPlatformClearingHouseAlias = 5188;
   optional int32 ClearingHouseId = 5189;
   optional string ClonedContract = 5190;
   optional string ContractSubType = 5191;
   optional ContractSubType ContractSubTypeDetails = 5192;
   optional string AgreementExternalAlias = 5193;
   optional string ExecutionPlatformCounterpartyAlias = 5194;
   optional Identifier ExecutionPlatform = 5195;
   optional bcl.DateTime EndDate = 5196;
   optional Identifier PriceCurrency = 5197;
   optional int32 PriceCurrencyId = 5198;
   optional string SourceContract = 5199;
   optional bcl.DateTime StartDate = 5200;
   optional bcl.Decimal PointValue = 5201;
   optional string TT2Code = 5202;
   optional string SubCategoryAlias = 5203;
   optional int32 Id = 5204;
   optional string ObjectIdAlias = 5205;
   optional Identifier Counterparty = 5206;
   optional BusinessEntity CounterpartyDetails = 5207;
   optional string ShortName = 5208;
}
message VanillaBasketIndexOptionQuantity {
   optional Identifier Index = 5210;
   optional bcl.Decimal StrikeRate = 5211;
   optional bcl.Decimal StrikePrice = 5212;
   optional bcl.DateTime StrikeDate = 5213;
   optional bcl.Decimal IndexPrice = 5214;
   optional string PutCallFlag = 5215;
   optional bcl.DateTime ExpirySettlementDate = 5216;
   optional Identifier HolidayCalendar = 5217;
   optional Identifier OptionStyle = 5218;
   optional Identifier SettlementMethod = 5219;
   optional Identifier SettlementStyle = 5220;
   repeated AllocationBase Allocations = 5221;
   optional string BuySellFlag = 5222;
   optional Identifier ClearingHouse = 5223;
   optional string ExecutionPlatformClearingHouseAlias = 5224;
   optional int32 ClearingHouseId = 5225;
   optional string ClonedContract = 5226;
   optional string ContractSubType = 5227;
   optional ContractSubType ContractSubTypeDetails = 5228;
   optional string AgreementExternalAlias = 5229;
   optional string ExecutionPlatformCounterpartyAlias = 5230;
   optional Identifier ExecutionPlatform = 5231;
   optional bcl.DateTime EndDate = 5232;
   optional Identifier PriceCurrency = 5233;
   optional int32 PriceCurrencyId = 5234;
   optional string SourceContract = 5235;
   optional bcl.DateTime StartDate = 5236;
   optional bcl.Decimal PointValue = 5237;
   optional string TT2Code = 5238;
   optional string SubCategoryAlias = 5239;
   optional int32 Id = 5240;
   optional string ObjectIdAlias = 5241;
   optional Identifier Counterparty = 5242;
   optional BusinessEntity CounterpartyDetails = 5243;
   optional string ShortName = 5244;
}
message VanillaIndexOptionBase {
   optional Identifier Index = 5246;
   optional bcl.Decimal StrikeRate = 5247;
   optional bcl.Decimal StrikePrice = 5248;
   optional bcl.DateTime StrikeDate = 5249;
   optional bcl.Decimal IndexPrice = 5250;
   optional string PutCallFlag = 5251;
   optional bcl.DateTime ExpirySettlementDate = 5252;
   optional Identifier HolidayCalendar = 5253;
   optional Identifier OptionStyle = 5254;
   optional Identifier SettlementMethod = 5255;
   optional Identifier SettlementStyle = 5256;
   repeated AllocationBase Allocations = 5257;
   optional string BuySellFlag = 5258;
   optional Identifier ClearingHouse = 5259;
   optional string ExecutionPlatformClearingHouseAlias = 5260;
   optional int32 ClearingHouseId = 5261;
   optional string ClonedContract = 5262;
   optional string ContractSubType = 5263;
   optional ContractSubType ContractSubTypeDetails = 5264;
   optional string AgreementExternalAlias = 5265;
   optional string ExecutionPlatformCounterpartyAlias = 5266;
   optional Identifier ExecutionPlatform = 5267;
   optional bcl.DateTime EndDate = 5268;
   optional Identifier PriceCurrency = 5269;
   optional int32 PriceCurrencyId = 5270;
   optional string SourceContract = 5271;
   optional bcl.DateTime StartDate = 5272;
   optional bcl.Decimal PointValue = 5273;
   optional string TT2Code = 5274;
   optional string SubCategoryAlias = 5275;
   optional int32 Id = 5276;
   optional string ObjectIdAlias = 5277;
   optional Identifier Counterparty = 5278;
   optional BusinessEntity CounterpartyDetails = 5279;
   optional string ShortName = 5280;
   // the following represent sub-types; at most 1 should have a value
   optional VanillaIndexOptionNotional VanillaIndexOptionNotional = 5281;
   optional VanillaIndexOptionQuantity VanillaIndexOptionQuantity = 5318;
}
message VanillaIndexOptionNotional {
   optional int32 RoundingPrecisionCount = 5282;
   optional Identifier Index = 5283;
   optional bcl.Decimal StrikeRate = 5284;
   optional bcl.Decimal StrikePrice = 5285;
   optional bcl.DateTime StrikeDate = 5286;
   optional bcl.Decimal IndexPrice = 5287;
   optional string PutCallFlag = 5288;
   optional bcl.DateTime ExpirySettlementDate = 5289;
   optional Identifier HolidayCalendar = 5290;
   optional Identifier OptionStyle = 5291;
   optional Identifier SettlementMethod = 5292;
   optional Identifier SettlementStyle = 5293;
   repeated AllocationBase Allocations = 5294;
   optional string BuySellFlag = 5295;
   optional Identifier ClearingHouse = 5296;
   optional string ExecutionPlatformClearingHouseAlias = 5297;
   optional int32 ClearingHouseId = 5298;
   optional string ClonedContract = 5299;
   optional string ContractSubType = 5300;
   optional ContractSubType ContractSubTypeDetails = 5301;
   optional string AgreementExternalAlias = 5302;
   optional string ExecutionPlatformCounterpartyAlias = 5303;
   optional Identifier ExecutionPlatform = 5304;
   optional bcl.DateTime EndDate = 5305;
   optional Identifier PriceCurrency = 5306;
   optional int32 PriceCurrencyId = 5307;
   optional string SourceContract = 5308;
   optional bcl.DateTime StartDate = 5309;
   optional bcl.Decimal PointValue = 5310;
   optional string TT2Code = 5311;
   optional string SubCategoryAlias = 5312;
   optional int32 Id = 5313;
   optional string ObjectIdAlias = 5314;
   optional Identifier Counterparty = 5315;
   optional BusinessEntity CounterpartyDetails = 5316;
   optional string ShortName = 5317;
}
message VanillaIndexOptionQuantity {
   optional Identifier Index = 5319;
   optional bcl.Decimal StrikeRate = 5320;
   optional bcl.Decimal StrikePrice = 5321;
   optional bcl.DateTime StrikeDate = 5322;
   optional bcl.Decimal IndexPrice = 5323;
   optional string PutCallFlag = 5324;
   optional bcl.DateTime ExpirySettlementDate = 5325;
   optional Identifier HolidayCalendar = 5326;
   optional Identifier OptionStyle = 5327;
   optional Identifier SettlementMethod = 5328;
   optional Identifier SettlementStyle = 5329;
   repeated AllocationBase Allocations = 5330;
   optional string BuySellFlag = 5331;
   optional Identifier ClearingHouse = 5332;
   optional string ExecutionPlatformClearingHouseAlias = 5333;
   optional int32 ClearingHouseId = 5334;
   optional string ClonedContract = 5335;
   optional string ContractSubType = 5336;
   optional ContractSubType ContractSubTypeDetails = 5337;
   optional string AgreementExternalAlias = 5338;
   optional string ExecutionPlatformCounterpartyAlias = 5339;
   optional Identifier ExecutionPlatform = 5340;
   optional bcl.DateTime EndDate = 5341;
   optional Identifier PriceCurrency = 5342;
   optional int32 PriceCurrencyId = 5343;
   optional string SourceContract = 5344;
   optional bcl.DateTime StartDate = 5345;
   optional bcl.Decimal PointValue = 5346;
   optional string TT2Code = 5347;
   optional string SubCategoryAlias = 5348;
   optional int32 Id = 5349;
   optional string ObjectIdAlias = 5350;
   optional Identifier Counterparty = 5351;
   optional BusinessEntity CounterpartyDetails = 5352;
   optional string ShortName = 5353;
}
message VariableNotionalInterestRateSwap {
   optional Identifier FloatingInterbankInterestRate = 5355;
   optional string FloatingPayRecFlag = 5356;
   optional string FixedPayRecFlag = 5357;
   optional bcl.Decimal FloatingSpreadRate = 5358;
   optional bool FloatingInterpolateFixingRateInd = 5359;
   optional bcl.Decimal FixedCouponRate = 5360;
   optional Identifier FloatingPrincipalType = 5361;
   optional Identifier FloatingCurrency = 5362;
   optional int32 FloatingCurrencyId = 5363;
   optional Identifier FloatingResetPattern = 5364;
   optional int32 FloatingResetPatternId = 5365;
   optional Identifier FloatingCompoundingStyle = 5366;
   optional int32 FloatingCompoundingStyleId = 5367;
   optional Identifier FloatingHolidayCalendar = 5368;
   optional Identifier FloatingDayCountBasis = 5369;
   optional Identifier FloatingBusinessDayRule = 5370;
   optional Identifier FloatingDateGenerationRule = 5371;
   optional Identifier FloatingDateRollConvention = 5372;
   optional Identifier FloatingStubType = 5373;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 5374;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 5375;
   optional Identifier FloatingStubStartTenorPoint = 5376;
   optional Identifier FloatingStubEndTenorPoint = 5377;
   optional Identifier FixedPrincipalType = 5378;
   optional Identifier FixedCurrency = 5379;
   optional int32 FixedCurrencyId = 5380;
   optional Identifier FixedResetPattern = 5381;
   optional int32 FixedResetPatternId = 5382;
   optional Identifier FixedCompoundingStyle = 5383;
   optional int32 FixedCompoundingStyleId = 5384;
   optional Identifier FixedHolidayCalendar = 5385;
   optional Identifier FixedDayCountBasis = 5386;
   optional Identifier FixedBusinessDayRule = 5387;
   optional Identifier FixedDateGenerationRule = 5388;
   optional Identifier FixedDateRollConvention = 5389;
   optional Identifier FixedStubType = 5390;
   optional bcl.DateTime FixedStubFirstPeriodEndDate = 5391;
   optional bcl.DateTime FixedStubLastPeriodStartDate = 5392;
   optional BusinessEntity FloatingInterestRate = 5393;
   optional InterestRateBase FloatingInterestRateDetail = 5394;
   optional string PricingStyleAlias = 5395;
   optional string ForwardYieldCurve = 5396;
   repeated AllocationBase Allocations = 5397;
   optional string BuySellFlag = 5398;
   optional Identifier ClearingHouse = 5399;
   optional string ExecutionPlatformClearingHouseAlias = 5400;
   optional int32 ClearingHouseId = 5401;
   optional string ClonedContract = 5402;
   optional string ContractSubType = 5403;
   optional ContractSubType ContractSubTypeDetails = 5404;
   optional string AgreementExternalAlias = 5405;
   optional string ExecutionPlatformCounterpartyAlias = 5406;
   optional Identifier ExecutionPlatform = 5407;
   optional bcl.DateTime EndDate = 5408;
   optional Identifier PriceCurrency = 5409;
   optional int32 PriceCurrencyId = 5410;
   optional string SourceContract = 5411;
   optional bcl.DateTime StartDate = 5412;
   optional bcl.Decimal PointValue = 5413;
   optional string TT2Code = 5414;
   optional string SubCategoryAlias = 5415;
   optional int32 Id = 5416;
   optional string ObjectIdAlias = 5417;
   optional Identifier Counterparty = 5418;
   optional BusinessEntity CounterpartyDetails = 5419;
   optional string ShortName = 5420;
}
message VarianceSwapBase {
   optional bcl.Decimal StrikeRate = 5422;
   optional bcl.Decimal CapRate = 5423;
   optional int32 ExpectedTradingDayCount = 5424;
   optional Identifier HolidayCalendar = 5425;
   optional Identifier BusinessDayRule = 5426;
   optional Identifier SamplingFrequency = 5427;
   repeated AllocationBase Allocations = 5428;
   optional string BuySellFlag = 5429;
   optional Identifier ClearingHouse = 5430;
   optional string ExecutionPlatformClearingHouseAlias = 5431;
   optional int32 ClearingHouseId = 5432;
   optional string ClonedContract = 5433;
   optional string ContractSubType = 5434;
   optional ContractSubType ContractSubTypeDetails = 5435;
   optional string AgreementExternalAlias = 5436;
   optional string ExecutionPlatformCounterpartyAlias = 5437;
   optional Identifier ExecutionPlatform = 5438;
   optional bcl.DateTime EndDate = 5439;
   optional Identifier PriceCurrency = 5440;
   optional int32 PriceCurrencyId = 5441;
   optional string SourceContract = 5442;
   optional bcl.DateTime StartDate = 5443;
   optional bcl.Decimal PointValue = 5444;
   optional string TT2Code = 5445;
   optional string SubCategoryAlias = 5446;
   optional int32 Id = 5447;
   optional string ObjectIdAlias = 5448;
   optional Identifier Counterparty = 5449;
   optional BusinessEntity CounterpartyDetails = 5450;
   optional string ShortName = 5451;
   // the following represent sub-types; at most 1 should have a value
   optional IndexVarianceSwap IndexVarianceSwap = 3535;
}
message ZeroCouponInterestRateSwap {
   optional string FloatingPayRecFlag = 5453;
   optional string FixedPayRecFlag = 5454;
   optional bcl.Decimal FloatingSpreadRate = 5455;
   optional bool FloatingInterpolateFixingRateInd = 5456;
   optional bcl.Decimal FixedCouponRate = 5457;
   optional Identifier FloatingPrincipalType = 5458;
   optional Identifier FloatingCurrency = 5459;
   optional int32 FloatingCurrencyId = 5460;
   optional Identifier FloatingResetPattern = 5461;
   optional int32 FloatingResetPatternId = 5462;
   optional Identifier FloatingCompoundingStyle = 5463;
   optional int32 FloatingCompoundingStyleId = 5464;
   optional Identifier FloatingHolidayCalendar = 5465;
   optional Identifier FloatingDayCountBasis = 5466;
   optional Identifier FloatingBusinessDayRule = 5467;
   optional Identifier FloatingDateGenerationRule = 5468;
   optional Identifier FloatingDateRollConvention = 5469;
   optional Identifier FloatingStubType = 5470;
   optional bcl.DateTime FloatingStubFirstPeriodEndDate = 5471;
   optional bcl.DateTime FloatingStubLastPeriodStartDate = 5472;
   optional Identifier FloatingStubStartTenorPoint = 5473;
   optional Identifier FloatingStubEndTenorPoint = 5474;
   optional Identifier FixedPrincipalType = 5475;
   optional Identifier FixedCurrency = 5476;
   optional int32 FixedCurrencyId = 5477;
   optional Identifier FixedResetPattern = 5478;
   optional int32 FixedResetPatternId = 5479;
   optional Identifier FixedCompoundingStyle = 5480;
   optional int32 FixedCompoundingStyleId = 5481;
   optional Identifier FixedHolidayCalendar = 5482;
   optional Identifier FixedDayCountBasis = 5483;
   optional Identifier FixedBusinessDayRule = 5484;
   optional Identifier FixedDateGenerationRule = 5485;
   optional Identifier FixedDateRollConvention = 5486;
   optional Identifier FixedStubType = 5487;
   optional bcl.DateTime FixedStubFirstPeriodEndDate = 5488;
   optional bcl.DateTime FixedStubLastPeriodStartDate = 5489;
   optional BusinessEntity FloatingInterestRate = 5490;
   optional InterestRateBase FloatingInterestRateDetail = 5491;
   optional string PricingStyleAlias = 5492;
   optional string ForwardYieldCurve = 5493;
   repeated AllocationBase Allocations = 5494;
   optional string BuySellFlag = 5495;
   optional Identifier ClearingHouse = 5496;
   optional string ExecutionPlatformClearingHouseAlias = 5497;
   optional int32 ClearingHouseId = 5498;
   optional string ClonedContract = 5499;
   optional string ContractSubType = 5500;
   optional ContractSubType ContractSubTypeDetails = 5501;
   optional string AgreementExternalAlias = 5502;
   optional string ExecutionPlatformCounterpartyAlias = 5503;
   optional Identifier ExecutionPlatform = 5504;
   optional bcl.DateTime EndDate = 5505;
   optional Identifier PriceCurrency = 5506;
   optional int32 PriceCurrencyId = 5507;
   optional string SourceContract = 5508;
   optional bcl.DateTime StartDate = 5509;
   optional bcl.Decimal PointValue = 5510;
   optional string TT2Code = 5511;
   optional string SubCategoryAlias = 5512;
   optional int32 Id = 5513;
   optional string ObjectIdAlias = 5514;
   optional Identifier Counterparty = 5515;
   optional BusinessEntity CounterpartyDetails = 5516;
   optional string ShortName = 5517;
}
